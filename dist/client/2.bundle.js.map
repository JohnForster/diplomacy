{"version":3,"sources":["webpack:///./src/client/app/components/board/board.scss?3763","webpack:///./src/client/app/components/board/board.scss","webpack:///./src/client/app/components/board/territory/territory.scss?93bf","webpack:///./src/client/app/components/board/territory/territory.scss","webpack:///./src/client/app/pages/game/game.scss?bc12","webpack:///./src/client/app/pages/game/game.scss","webpack:///./src/client/app/components/board/territory/territory.tsx","webpack:///./src/client/app/components/board/board.tsx","webpack:///./src/client/assets/countryData.ts","webpack:///./src/client/engine/order.ts","webpack:///./src/client/engine/resources/entityLocations.ts","webpack:///./src/client/engine/boardPainter/boardPainter.ts","webpack:///./src/shared/resources/landTilesData.ts","webpack:///./src/shared/resources/seaTilesData.ts","webpack:///./src/shared/helpers/validateMove.ts","webpack:///./src/shared/helpers/areAdjacent.ts","webpack:///./src/client/engine/game.ts","webpack:///./src/client/devTools/setupGame.ts","webpack:///./src/client/app/pages/game/game.tsx"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","_super","Territory","_this","apply","this","arguments","handleClick","title","console","log","__extends","prototype","render","props","state","Object","preact_module","tile","class","tileType","id","d","path","onClick","onSelect","textLocation","rotate","x","y","name","Board","board_extends","defineProperty","activeTerritory","boardData","territories","find","t","map","xmlns","viewBox","className","board_territory_territory","isSelected","onTileSelect","style","activeTileData","countryData","mapTitle","Order","unit","origin","destination","moveType","supportFrom","assign","from","to","move","toObject","wasSuccessful","entityLocations","Switzerland","Adriatic_Sea","Aegean_Sea","Albania","Ankara","scAnkara","Apulia","Armenia","Baltic_Sea","Barents_Sea","Belgium","scBelgium","Berlin","scBerlin","Black_Sea","Bohemia","Brest","scBrest","Budapest","scBudapest","Bulgaria","scBulgaria","Bulgaria__ec","Bulgaria__sc","Burgundy","Clyde","Constantinople","scConstantinople","Denmark","scDenmark","Eastern_Mediterranean","Edinburgh","scEdinburgh","English_Channel","Finland","Galicia","Gascony","Greece","scGreece","Gulf_of_Lyon","Gulf_of_Bothnia","Helgoland_Bight","Holland","scHolland","Ionian_Sea","Irish_Sea","Kiel","scKiel","Liverpool","scLiverpool","Livonia","London","scLondon","Marseilles","scMarseilles","Mid_Atlantic_Ocean","Moscow","scMoscow","Munich","scMunich","Naples","scNaples","North_Atlantic_Ocean","North_Africa","North_Sea","Norway","scNorway","Norwegian_Sea","Paris","scParis","Picardy","Piedmont","Portugal","scPortugal","Prussia","Rome","scRome","Ruhr","Rumania","scRumania","Serbia","scSerbia","Sevastopol","scSevastopol","Silesia","Skagerrak","Smyrna","scSmyrna","Spain","scSpain","Spain__nc","Spain__sc","St_Petersburg","scSt_Petersburg","St_Petersburg__nc","St_Petersburg__sc","Sweden","scSweden","Syria","Trieste","scTrieste","Tunis","scTunis","Tuscany","Tyrolia","Tyrrhenian_Sea","Ukraine","Venice","scVenice","Vienna","scVienna","Wales","Warsaw","scWarsaw","Western_Mediterranean","Yorkshire","BoardPainter","board","turn","armySvg","fleetSvg","draw","players","forEach","player","colourTerritories","ownedTerritories","empire","colour","drawMoves","moves","engine_order","drawUnits","ownedUnits","reset","removeOrders","removeUnits","redraw","redrawOrders","orders","territory","setOwnership","order","drawOrder","owner","Array","getElementsByClassName","terr","classList","remove","add","drawUnit","svgUnit","unitType","army","fleet","cloneNode","location","setAttribute","toString","brightness","el","appendChild","drawLine","start","end","line","document","createElementNS","strokeWidth","markerEnd","units","landTilesData","Ireland","Corsica","Sardinia","Mallorca","Sicily","Crete","seaTilesData","phases","movement","retreat","build","helpers_validateMove","playerID","playerState","findPlayer","info","phase","includes","isAdjacentToDestination","territoryA","territoryB","data","engine_game","run","setup","svgs","mapSvg","playerEmpire","p","boardPainter","tiles","addEventListener","evt","getAttribute","clearMap","tileSelected","finishOrder","startOrder","u","filter","newOrder","playerHasUnitAt","setupGame","__awaiter","await_to_js_es5","axios_default","a","post","_a","_b","sent","err","res","game","numbers","lodash_shuffle_default","lodash_range_default","padStart","Promise","all","gameID","pop","get","game_Game","Game","gameIsRunning","territoryName","setState","game_awaiter","currentTurn","runGame","getLatestGame","refresh","submitOrders","patch","turnID","nextTurn","_id","getSvg","label","getElementById","contentDocument","game_extends","logOut","type","width","components_board_board","userID"],"mappings":"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,GAAI,IACJE,KAAM,oXACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,aACPsB,KAAM,aACNV,SAAU,UACVC,GAAI,IACJE,KAAM,gWACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,cACPsB,KAAM,cACNV,SAAU,UACVC,GAAI,IACJE,KAAM,0hBACNG,aAAc,CACZE,EAAG,MACHC,EAAG,OAGP,CACErB,MAAO,YACPsB,KAAM,YACNV,SAAU,UACVC,GAAI,IACJE,KAAM,wiBACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,wBACPsB,KAAM,wBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,wOACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,kBACPsB,KAAM,kBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,6NACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,eACPsB,KAAM,eACNV,SAAU,UACVC,GAAI,IACJE,KAAM,oSACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,kBACPsB,KAAM,kBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,8cACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,kBACPsB,KAAM,kBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,8IACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,aACPsB,KAAM,aACNV,SAAU,UACVC,GAAI,IACJE,KAAM,ocACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,YACPsB,KAAM,YACNV,SAAU,UACVC,GAAI,IACJE,KAAM,uPACNG,aAAc,CACZE,EAAG,KACHC,EAAG,QAGP,CACErB,MAAO,qBACPsB,KAAM,qBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,+YACNG,aAAc,CACZE,EAAG,KACHC,EAAG,QAGP,CACErB,MAAO,uBACPsB,KAAM,uBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,0SACNG,aAAc,CACZE,EAAG,KACHC,EAAG,QAGP,CACErB,MAAO,YACPsB,KAAM,YACNV,SAAU,UACVC,GAAI,IACJE,KAAM,gbACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,gBACPsB,KAAM,gBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,yPACNG,aAAc,CACZE,EAAG,MACHC,EAAG,OAGP,CACErB,MAAO,YACPsB,KAAM,YACNV,SAAU,UACVC,GAAI,IACJE,KAAM,gMACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,iBACPsB,KAAM,iBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,kUACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,wBACPsB,KAAM,wBACNV,SAAU,UACVC,GAAI,IACJE,KAAM,2ZACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAIP,CACErB,MAAO,cACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,gMACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,iOACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,GACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,WACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,GACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,WACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,oDACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,GACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,QACPsB,KAAM,GACNV,SAAU,WACVC,GAAI,IACJE,KAAM,GACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAIP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,gHACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,oNACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,wJACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,8IACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,0HACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,wJACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,4KACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,QACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,UACJE,KAAM,gMACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,WACPsB,KAAM,WACNV,SAAU,WACVC,GAAI,aACJE,KAAM,0RACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,eACPsB,KAAM,WACNV,SAAU,WACVC,GAAI,IACJE,KAAM,oNACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,eACPsB,KAAM,WACNV,SAAU,WACVC,GAAI,IACJE,KAAM,2HAER,CACEf,MAAO,WACPsB,KAAM,WACNV,SAAU,WACVC,GAAI,aACJE,KAAM,0MACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,QACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,UACJE,KAAM,oIACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,iBACPsB,KAAM,iBACNV,SAAU,WACVC,GAAI,mBACJE,KAAM,8NAENG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,uLAENG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,YACPsB,KAAM,YACNV,SAAU,WACVC,GAAI,cACJE,KAAM,wJACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,yUACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,wTACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,gMACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,wYACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,sLACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,OACPsB,KAAM,OACNV,SAAU,WACVC,GAAI,SACJE,KAAM,oSAENG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,YACPsB,KAAM,YACNV,SAAU,WACVC,GAAI,cACJE,KAAM,gMACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,0RACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,wJACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,aACPsB,KAAM,aACNV,SAAU,WACVC,GAAI,eACJE,KAAM,4PACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,wYACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,0RACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,oIACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,eACPsB,KAAM,eACNV,SAAU,WACVC,GAAI,iBACJE,KAAM,iOACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,kkBACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,QACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,UACJE,KAAM,0HACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,0HACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,WACPsB,KAAM,WACNV,SAAU,WACVC,GAAI,aACJE,KAAM,sLACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,WACPsB,KAAM,WACNV,SAAU,WACVC,GAAI,aACJE,KAAM,yNACNG,aAAc,CACZE,EAAG,KACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,sQACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,OACPsB,KAAM,OACNV,SAAU,WACVC,GAAI,SACJE,KAAM,gHACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,OACPsB,KAAM,OACNV,SAAU,WACVC,GAAI,SACJE,KAAM,oIACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,oSACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,4PACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,aACPsB,KAAM,aACNV,SAAU,WACVC,GAAI,eACJE,KAAM,8mBACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,wJACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,wYACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,YACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,IACJE,KAAM,0OAER,CACEf,MAAO,YACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,IACJE,KAAM,oRACNG,aAAc,CACZE,EAAG,KACHC,EAAG,QAGP,CACErB,MAAO,oBACPsB,KAAM,gBACNV,SAAU,WACVC,GAAI,kBACJE,KAAM,4iBACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAIP,CACErB,MAAO,oBACPsB,KAAM,gBACNV,SAAU,WACVC,GAAI,kBACJE,KAAM,wTACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,SACPsB,KAAM,SACNV,SAAU,WACVC,GAAI,WACJE,KAAM,0aACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,QACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,UACJE,KAAM,oIACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,UACPsB,KAAM,UACNV,SAAU,WACVC,GAAI,YACJE,KAAM,4PACNG,aAAc,CACZE,EAAG,MACHC,EAAG,QAGP,CACErB,MAAO,QACPsB,KAAM,QACNV,SAAU,WACVC,GAAI,UACJE,KAAM,kKACNG,aAAc,CACZE,EAAG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","file":"2.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/lib/loader.js!./board.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/lib/loader.js!./board.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/lib/loader.js!./board.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".gameBoard {\\n  position: absolute;\\n  border: 2px solid #102542;\\n  border-radius: 4px;\\n  height: 80vmin;\\n  background-size: contain; }\\n\\n.unit {\\n  pointer-events: none; }\\n\", \"\"]);\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/lib/loader.js!./territory.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/lib/loader.js!./territory.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/lib/loader.js!./territory.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".l, .Unowned {\\n  fill: #FFFFDD;\\n  stroke: #444444;\\n  stroke-linejoin: round;\\n  fill-opacity: 0.2;\\n  stroke-width: 0.5; }\\n\\n.w {\\n  fill: #99CCFF;\\n  stroke: #444444;\\n  stroke-linejoin: round;\\n  fill-opacity: 0.45;\\n  stroke-width: 0.5; }\\n\\n.w:hover {\\n  fill: #AADDFF; }\\n\\n.l:hover {\\n  fill-opacity: 0.4; }\\n\\n.s {\\n  fill: url(#diagonalHatch);\\n  stroke: #220;\\n  stroke-linejoin: round;\\n  opacity: 0.5; }\\n\\n.sc {\\n  fill: #DDDDDD;\\n  stroke: black; }\\n\\n#A, #F, #sc {\\n  pointer-events: none;\\n  stroke: black; }\\n\\ntext {\\n  font-family: Palatino;\\n  fill: #222;\\n  font-size: 9px;\\n  transform: translate(-5px, 0px);\\n  pointer-events: none; }\\n\\n.empire1 {\\n  fill: #FFFF88; }\\n\\n.empire2 {\\n  fill: #FFFF00; }\\n\\n.empire3 {\\n  fill: #FF88FF; }\\n\\n.empire4 {\\n  fill: #FF8888; }\\n\\n.empire5 {\\n  fill: #FF8800; }\\n\\n.empire6 {\\n  fill: #FF00FF; }\\n\\n.empire7 {\\n  fill: #FF0088; }\\n\\n.empire8 {\\n  fill: #FF0000; }\\n\\n.empire9 {\\n  fill: #88FFFF; }\\n\\n.empire10 {\\n  fill: #88FF88; }\\n\\n.empire11 {\\n  fill: #88FF00; }\\n\\n.empire12 {\\n  fill: #8888FF; }\\n\\n.empire13 {\\n  fill: #888888; }\\n\\n.empire14 {\\n  fill: #888800; }\\n\\n.empire15 {\\n  fill: #8800FF; }\\n\\n.empire16 {\\n  fill: #880088; }\\n\\n.empire17 {\\n  fill: #880000; }\\n\\n.empire18 {\\n  fill: #00FFFF; }\\n\\n.empire19 {\\n  fill: #00FF88; }\\n\\n.empire20 {\\n  fill: #00FF00; }\\n\\n.empire21 {\\n  fill: #0088FF; }\\n\\n.empire22 {\\n  fill: #008888; }\\n\\n.empire23 {\\n  fill: #008800; }\\n\\n.empire24 {\\n  fill: #0000FF; }\\n\\n.empire25 {\\n  fill: #000088; }\\n\\n.success {\\n  stroke: #1C1; }\\n\\n.bounce {\\n  stroke: #D50; }\\n\\n.move {\\n  stroke: #000; }\\n\\n/* .light {fill:#06B559;}\\n.medium{fill:#0B9B53;}\\n.shadow{fill:#088443;} */\\nsvg text {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none; }\\n\\nsvg text::selection {\\n  background: none; }\\n\\n.e01-light {\\n  fill: #00007f; }\\n\\n.e01-medium {\\n  fill: #000065; }\\n\\n.e01-shadow {\\n  fill: #00004c; }\\n\\n.e02-light {\\n  fill: #0000ff; }\\n\\n.e02-medium {\\n  fill: #0000cc; }\\n\\n.e02-shadow {\\n  fill: #000099; }\\n\\n.e03-light {\\n  fill: #007f00; }\\n\\n.e03-medium {\\n  fill: #006500; }\\n\\n.e03-shadow {\\n  fill: #004c00; }\\n\\n.e04-light {\\n  fill: #007f7f; }\\n\\n.e04-medium {\\n  fill: #006565; }\\n\\n.e04-shadow {\\n  fill: #004c4c; }\\n\\n.e05-light {\\n  fill: #007fff; }\\n\\n.e05-medium {\\n  fill: #0065cc; }\\n\\n.e05-shadow {\\n  fill: #004c99; }\\n\\n.e06-light {\\n  fill: #00ff00; }\\n\\n.e06-medium {\\n  fill: #00cc00; }\\n\\n.e06-shadow {\\n  fill: #009900; }\\n\\n.e07-light {\\n  fill: #00ff7f; }\\n\\n.e07-medium {\\n  fill: #00cc65; }\\n\\n.e07-shadow {\\n  fill: #00994c; }\\n\\n.e08-light {\\n  fill: #00ffff; }\\n\\n.e08-medium {\\n  fill: #00cccc; }\\n\\n.e08-shadow {\\n  fill: #009999; }\\n\\n.e09-light {\\n  fill: #7f0000; }\\n\\n.e09-medium {\\n  fill: #650000; }\\n\\n.e09-shadow {\\n  fill: #4c0000; }\\n\\n.e10-light {\\n  fill: #7f007f; }\\n\\n.e10-medium {\\n  fill: #650065; }\\n\\n.e10-shadow {\\n  fill: #4c004c; }\\n\\n.e11-light {\\n  fill: #7f00ff; }\\n\\n.e11-medium {\\n  fill: #6500cc; }\\n\\n.e11-shadow {\\n  fill: #4c0099; }\\n\\n.e12-light {\\n  fill: #7f7f00; }\\n\\n.e12-medium {\\n  fill: #656500; }\\n\\n.e12-shadow {\\n  fill: #4c4c00; }\\n\\n.e13-light {\\n  fill: #7f7f7f; }\\n\\n.e13-medium {\\n  fill: #656565; }\\n\\n.e13-shadow {\\n  fill: #4c4c4c; }\\n\\n.e14-light {\\n  fill: #7f7fff; }\\n\\n.e14-medium {\\n  fill: #6565cc; }\\n\\n.e14-shadow {\\n  fill: #4c4c99; }\\n\\n.e15-light {\\n  fill: #7fff00; }\\n\\n.e15-medium {\\n  fill: #65cc00; }\\n\\n.e15-shadow {\\n  fill: #4c9900; }\\n\\n.e16-light {\\n  fill: #7fff7f; }\\n\\n.e16-medium {\\n  fill: #65cc65; }\\n\\n.e16-shadow {\\n  fill: #4c994c; }\\n\\n.e17-light {\\n  fill: #7fffff; }\\n\\n.e17-medium {\\n  fill: #65cccc; }\\n\\n.e17-shadow {\\n  fill: #4c9999; }\\n\\n.e18-light {\\n  fill: #ff0000; }\\n\\n.e18-medium {\\n  fill: #cc0000; }\\n\\n.e18-shadow {\\n  fill: #990000; }\\n\\n.e19-light {\\n  fill: #ff007f; }\\n\\n.e19-medium {\\n  fill: #cc0065; }\\n\\n.e19-shadow {\\n  fill: #99004c; }\\n\\n.e20-light {\\n  fill: #ff00ff; }\\n\\n.e20-medium {\\n  fill: #cc00cc; }\\n\\n.e20-shadow {\\n  fill: #990099; }\\n\\n.e21-light {\\n  fill: #ff7f00; }\\n\\n.e21-medium {\\n  fill: #cc6500; }\\n\\n.e21-shadow {\\n  fill: #994c00; }\\n\\n.e22-light {\\n  fill: #ff7f7f; }\\n\\n.e22-medium {\\n  fill: #cc6565; }\\n\\n.e22-shadow {\\n  fill: #994c4c; }\\n\\n.e23-light {\\n  fill: #ff7fff; }\\n\\n.e23-medium {\\n  fill: #cc65cc; }\\n\\n.e23-shadow {\\n  fill: #994c99; }\\n\\n.e24-light {\\n  fill: #ffff00; }\\n\\n.e24-medium {\\n  fill: #cccc00; }\\n\\n.e24-shadow {\\n  fill: #999900; }\\n\\n.e25-light {\\n  fill: #ffff7f; }\\n\\n.e25-medium {\\n  fill: #cccc65; }\\n\\n.e25-shadow {\\n  fill: #99994c; }\\n\", \"\"]);\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/lib/loader.js!./game.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/lib/loader.js!./game.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/lib/loader.js!./game.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".buttonsContainer {\\n  text-justify: center; }\\n\", \"\"]);\n","import {Component, h} from 'preact'\nimport './territory.scss'\n// Move tile type into shared types folder?\nexport interface ITerritoryProps {\n  tile: {\n    title: string;\n    name: string;\n    id: string;\n    tileType: string;\n    path: string;\n    textLocation?: {\n      x: string,\n      y: string,\n      rotate?: string,\n    }\n    transform?: string\n  }\n  isSelected: boolean\n  onSelect: () => void\n}\n\ninterface ITerritoryState {\n\n}\n\nexport default class Territory extends Component <ITerritoryProps, ITerritoryState> {\n  handleClick = (title:string) => () => {\n    console.log(title)\n  }\n\n  public render(props: ITerritoryProps, state: ITerritoryState) {\n    return (\n      <g title={props.tile.title} class={props.tile.tileType}>\n        <path class={props.tile.id} d={props.tile.path} onClick={props.onSelect}/>\n        {props.tile.textLocation &&\n          <g\n            transform={`\n              rotate(${props.tile.textLocation.rotate || '0'} ${props.tile.textLocation.x} ${props.tile.textLocation.y})\n              translate(${props.tile.textLocation.x} ${props.tile.textLocation.y})\n            `}\n          >\n            <text>{props.tile.name}</text>\n          </g>\n        }\n      </g>\n    )\n  }\n}","import IGameBoard from '@shared/types/IGameBoard'\nimport {Component, Fragment, h} from 'preact'\nimport './board.scss'\nimport Territory from './territory/territory'\n\n// ? Recieve boardData as props or import?\n// ? Import is simpler, prop;s allows for extending in the future.\nexport interface IBoardProps {\n  boardData: IGameBoard,\n  activeTerritory: string,\n  onTileSelect: (title: string) => () => void,\n}\n\ninterface IBoardState {\n  activeTerritory: string\n}\n\nexport default class Board extends Component <IBoardProps, IBoardState> {\n  get activeTileData(): IGameBoard['territories'][0] {\n    if (!this.props.activeTerritory) return null\n    return this.props.boardData.territories\n      .find(t => t.title === this.props.activeTerritory)\n  }\n\n  render(props: IBoardProps, state: IBoardState) {\n    return (\n      <Fragment>\n          {props.boardData.territories.map(tile => (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox={props.boardData.viewBox} className='gameBoard' id='gameBoard'>\n              <Territory\n              tile={tile}\n              isSelected={tile.title === props.activeTerritory}\n              onSelect={props.onTileSelect(tile.title)}\n              />\n            </svg>\n          ))}\n        {props.activeTerritory && \n          <div style={`position: absolute; top:${this.activeTileData.textLocation.y}px; left:${this.activeTileData.textLocation.x}px`}>\n            Hello {`top:${this.activeTileData.textLocation.y}px; left:${this.activeTileData.textLocation.x}px`}\n          </div>\n        }\n      </Fragment>\n    )\n  }\n}","/* tslint:disable:max-line-length*/\n\nexport default {\n  mapTitle: 'Classic',\n  viewBox: '0 0 609 559',\n  territories: [\n    {\n      title: 'Adriatic_Sea',\n      name: 'Adriatic Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 322 480 L 297 456 L 300 453 L 290 453 L 278 443 L 272 424 L 260 417 L 261 401 L 270 398 L 276 399 L 275 403 L 278 410 L 282 401 L 286 402 L 289 418 L 306 436 L 331 454 L 331 477 L 335 480 L 322 480`,\n      textLocation: {\n        x: '280',\n        y: '427',\n        rotate: '48',\n      },\n    },\n    {\n      title: 'Aegean_Sea',\n      name: 'Aegean Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 376 537 L 371 520 L 378 521 L 377 513 L 386 516 L 385 509 L 370 494 L 371 491 L 378 494 L 368 483 L 371 477 L 379 484 L 382 483 L 381 477 L 386 478 L 380 472 L 392 472 L 400 468 L 408 470 L 410 473 L 414 475 L 410 482 L 409 487 L 417 486 L 417 489 L 420 495 L 417 498 L 417 507 L 423 510 L 427 524 L 435 523 L 435 530 L 416 549 L 412 547 L 387 546 L 383 544 L 376 537`,\n      textLocation: {\n        x: '394',\n        y: '510',\n      },\n    },\n    {\n      title: 'Baltic_Sea',\n      name: 'Baltic Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 266 255 L 271 260 L 278 254 L 277 250 L 280 248 L 279 243 L 282 253 L 289 254 L 294 245 L 305 244 L 312 229 L 311 220 L 359 220 L 349 229 L 347 243 L 347 248 L 348 254 L 344 262 L 337 264 L 334 273 L 328 274 L 326 265 L 314 266 L 307 273 L 294 275 L 286 274 L 287 267 L 280 266 L 266 275 L 261 274 L 260 269 L 256 266 L 256 263 L 254 255 L 266 255`,\n      textLocation: {\n        x: '300',\n        y: '257',\n      },\n    },\n    {\n      title: 'Barents_Sea',\n      name: 'Barents Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 540 0 L 535 9 L 530 6 L 517 19 L 516 33 L 513 38 L 513 23 L 507 20 L 505 26 L 499 33 L 492 48 L 495 58 L 488 60 L 479 57 L 477 55 L 481 50 L 473 43 L 466 45 L 472 62 L 478 66 L 478 74 L 472 72 L 468 74 L 457 91 L 469 100 L 467 106 L 462 109 L 444 101 L 442 110 L 447 115 L 454 119 L 452 122 L 434 118 L 426 103 L 426 94 L 414 88 L 412 83 L 445 84 L 457 79 L 459 66 L 453 61 L 417 47 L 405 49 L 401 45 L 397 48 L 391 47 L 395 41 L 394 38 L 384 33 L 382 40 L 380 33 L 377 31 L 374 38 L 371 33 L 366 42 L 366 33 L 362 33 L 362 0 L 540 0`,\n      textLocation: {\n        x: '440',\n        y: '15',\n      },\n    },\n    {\n      title: 'Black_Sea',\n      name: 'Black Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 440 458 L 430 455 L 426 450 L 422 441 L 425 427 L 429 426 L 430 423 L 432 409 L 439 404 L 438 397 L 446 378 L 459 375 L 461 377 L 459 379 L 465 383 L 476 381 L 478 383 L 472 385 L 468 392 L 477 396 L 477 401 L 486 404 L 488 397 L 494 396 L 497 392 L 507 389 L 506 384 L 494 387 L 485 378 L 503 364 L 526 351 L 527 354 L 514 365 L 517 371 L 520 371 L 515 384 L 511 383 L 510 386 L 517 393 L 528 394 L 554 406 L 567 408 L 573 417 L 570 427 L 555 438 L 551 437 L 520 441 L 514 438 L 511 440 L 502 433 L 481 438 L 470 447 L 464 457 L 442 460 L 440 458`,\n      textLocation: {\n        x: '480',\n        y: '420',\n      },\n    },\n    {\n      title: 'Eastern_Mediterranean',\n      name: 'Eastern Mediterranean',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 435 530 L 441 526 L 447 528 L 453 534 L 464 531 L 466 521 L 475 520 L 485 528 L 491 530 L 505 526 L 511 514 L 520 517 L 527 508 L 530 509 L 525 518 L 526 530 L 532 535 L 528 559 L 400 559 L 400 554 L 414 552 L 416 549 L 435 530`,\n      textLocation: {\n        x: '435',\n        y: '548',\n      },\n    },\n    {\n      title: 'English_Channel',\n      name: 'English Channel',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 173 301 L 169 311 L 153 315 L 155 320 L 150 319 L 144 318 L 142 312 L 136 310 L 136 326 L 124 323 L 122 318 L 102 317 L 88 303 L 100 291 L 110 292 L 120 295 L 124 291 L 134 294 L 147 295 L 160 298 L 168 296 L 173 301`,\n      textLocation: {\n        x: '105',\n        y: '308',\n      },\n    },\n    {\n      title: 'Gulf_of_Lyon',\n      name: 'Gulf of Lyon',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 115 469 L 110 461 L 124 444 L 131 439 L 146 438 L 157 432 L 158 425 L 158 418 L 169 412 L 176 417 L 188 422 L 198 421 L 211 416 L 222 410 L 233 415 L 238 431 L 224 431 L 221 434 L 211 436 L 213 451 L 218 454 L 218 458 L 214 461 L 206 462 L 205 466 L 154 466 L 148 463 L 142 469 L 115 469`,\n      textLocation: {\n        x: '160',\n        y: '450',\n      },\n    },\n    {\n      title: 'Gulf_of_Bothnia',\n      name: 'Gulf of Bothnia',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 311 220 L 314 209 L 322 206 L 328 203 L 331 193 L 326 183 L 320 182 L 321 161 L 330 146 L 343 138 L 351 128 L 347 121 L 349 112 L 355 104 L 362 107 L 368 108 L 372 120 L 366 121 L 359 136 L 345 151 L 347 160 L 350 165 L 348 178 L 349 184 L 357 186 L 365 191 L 384 185 L 402 177 L 403 183 L 411 184 L 414 187 L 408 187 L 400 192 L 399 197 L 387 196 L 371 198 L 369 202 L 365 204 L 368 210 L 372 213 L 373 221 L 377 227 L 373 229 L 366 228 L 359 220 L 311 220`,\n      textLocation: {\n        x: '328',\n        y: '175',\n      },\n    },\n    {\n      title: 'Helgoland_Bight',\n      name: 'Helgoland Bight',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 245 237 L 243 247 L 244 254 L 243 257 L 245 263 L 244 270 L 244 273 L 235 277 L 234 274 L 230 273 L 226 275 L 211 274 L 211 237 L 245 237`,\n      textLocation: {\n        x: '220',\n        y: '265',\n      },\n    },\n    {\n      title: 'Ionian_Sea',\n      name: 'Ionian Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 289 511 L 290 514 L 295 515 L 308 500 L 311 491 L 304 484 L 310 480 L 318 485 L 322 485 L 322 480 L 335 480 L 339 487 L 346 498 L 350 498 L 347 500 L 352 508 L 367 507 L 371 511 L 355 510 L 350 514 L 357 521 L 359 533 L 360 528 L 367 536 L 368 531 L 376 537 L 383 544 L 380 547 L 383 550 L 400 554 L 400 559 L 232 559 L 234 551 L 232 544 L 225 535 L 231 531 L 236 524 L 247 513 L 258 519 L 273 531 L 281 532 L 282 521 L 285 513 L 285 511 L 289 511`,\n      textLocation: {\n        x: '305',\n        y: '535',\n      },\n    },\n    {\n      title: 'Irish_Sea',\n      name: 'Irish Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 100 291 L 112 287 L 122 281 L 130 282 L 127 276 L 119 272 L 116 272 L 115 265 L 128 262 L 126 256 L 121 257 L 132 250 L 135 250 L 139 240 L 136 229 L 130 227 L 120 227 L 110 232 L 109 246 L 98 259 L 87 257 L 70 261 L 58 273 L 88 303 L 100 291`,\n      textLocation: {\n        x: '80',\n        y: '275',\n      },\n    },\n    {\n      title: 'Mid_Atlantic_Ocean',\n      name: 'Mid Atlantic Ocean',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 102 317 L 100 322 L 103 328 L 109 329 L 123 344 L 122 350 L 123 357 L 128 363 L 121 382 L 122 384 L 112 399 L 101 396 L 96 397 L 72 384 L 59 381 L 54 375 L 48 374 L 46 378 L 39 375 L 33 381 L 35 384 L 32 396 L 30 406 L 17 427 L 14 427 L 10 433 L 13 440 L 15 441 L 12 450 L 13 454 L 8 462 L 19 469 L 27 468 L 33 475 L 34 484 L 37 490 L 37 495 L 33 496 L 17 518 L 0 520 L 0 273 L 58 273 L 102 317`,\n      textLocation: {\n        x: '25',\n        y: '345',\n      },\n    },\n    {\n      title: 'North_Atlantic_Ocean',\n      name: 'North Atlantic Ocean',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 70 261 L 64 250 L 67 242 L 71 245 L 81 234 L 74 228 L 80 225 L 78 218 L 82 217 L 89 220 L 94 220 L 95 218 L 94 216 L 97 216 L 101 212 L 110 212 L 119 217 L 120 227 L 130 227 L 130 223 L 138 217 L 138 214 L 130 208 L 129 197 L 139 189 L 140 182 L 148 177 L 148 0 L 0 0 L 0 273 L 58 273 L 70 261`,\n      textLocation: {\n        x: '40',\n        y: '120',\n      },\n    },\n    {\n      title: 'North_Sea',\n      name: 'North Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 168 296 L 172 294 L 165 293 L 176 283 L 178 274 L 177 270 L 171 268 L 168 270 L 166 269 L 169 265 L 170 252 L 168 246 L 163 239 L 163 226 L 161 218 L 157 216 L 151 215 L 158 214 L 165 210 L 170 202 L 171 197 L 171 181 L 198 154 L 236 154 L 237 160 L 233 167 L 231 180 L 233 186 L 229 192 L 231 201 L 241 209 L 241 224 L 248 224 L 245 237 L 211 237 L 211 274 L 207 279 L 205 279 L 205 276 L 198 289 L 191 299 L 173 301 L 168 296`,\n      textLocation: {\n        x: '190',\n        y: '230',\n      },\n    },\n    {\n      title: 'Norwegian_Sea',\n      name: 'Norwegian Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 362 33 L 357 39 L 343 44 L 324 54 L 320 64 L 310 75 L 309 84 L 303 86 L 292 111 L 277 132 L 269 134 L 264 142 L 258 141 L 236 154 L 198 154 L 171 181 L 171 197 L 158 193 L 152 194 L 154 188 L 161 185 L 162 181 L 148 177 L 148 0 L 362 0 L 362 33`,\n      textLocation: {\n        x: '220',\n        y: '70',\n      },\n    },\n    {\n      title: 'Skagerrak',\n      name: 'Skagerrak',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 241 209 L 246 210 L 266 201 L 270 193 L 275 203 L 277 218 L 276 224 L 282 236 L 279 240 L 279 243 L 275 242 L 269 243 L 266 240 L 267 234 L 266 221 L 263 223 L 248 224 L 241 224 L 241 209`,\n      textLocation: {\n        x: '255',\n        y: '220',\n      },\n    },\n    {\n      title: 'Tyrrhenian_Sea',\n      name: 'Tyrrhenian Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 238 431 L 247 442 L 248 447 L 256 458 L 271 464 L 276 474 L 290 487 L 294 502 L 289 511 L 285 511 L 285 508 L 276 510 L 263 510 L 257 507 L 252 508 L 247 513 L 236 524 L 233 523 L 224 527 L 223 518 L 218 516 L 218 490 L 220 490 L 224 468 L 222 458 L 218 458 L 218 454 L 223 450 L 225 444 L 225 436 L 224 431 L 238 431`,\n      textLocation: {\n        x: '230',\n        y: '495',\n      },\n    },\n    {\n      title: 'Western_Mediterranean',\n      name: 'Western Mediterranean',\n      tileType: 'seaTile',\n      id: 'w',\n      path: `M 37 490 L 47 488 L 52 489 L 60 486 L 78 491 L 83 494 L 86 485 L 90 483 L 98 484 L 107 474 L 113 473 L 115 469 L 142 469 L 150 471 L 154 466 L 205 466 L 206 476 L 204 485 L 208 492 L 212 492 L 217 489 L 218 490 L 218 516 L 212 517 L 208 521 L 203 520 L 179 515 L 169 518 L 150 511 L 117 509 L 106 511 L 99 515 L 89 512 L 84 518 L 79 520 L 68 516 L 68 511 L 64 514 L 46 509 L 42 502 L 41 494 L 37 495 L 37 490`,\n      textLocation: {\n        x: '110',\n        y: '495',\n      },\n    },\n    //  Neutral Territories\n    {\n      title: 'Switzerland',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: `M 209 363 L 208 367 L 194 382 L 197 385 L 203 379 L 207 386 L 213 387 L 221 385 L 227 390 L 229 385 L 243 388 L 245 384 L 241 378 L 234 374 L 234 366 L 232 363 L 225 362 L 222 365 L 209 363`,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    {\n      title: 'Ireland',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: `M 70 261 L 64 250 L 67 242 L 71 245 L 81 234 L 74 228 L 80 225 L 78 218 L 82 217 L 89 220 L 94 220 L 95 218 L 94 216 L 97 216 L 101 212 L 110 212 L 119 217 L 120 227 L 120 227 L 110 232 L 109 246 L 98 259 L 87 257 L 70 261`,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    {\n      title: 'Corsica',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: ``,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    {\n      title: 'Sardinia',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: ``,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    {\n      title: 'Mallorca',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: `M 154 466 L 148 463 L 142 469 L 150 471 L 154 466`,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    {\n      title: 'Sicily',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: ``,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    {\n      title: 'Crete',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      path: ``,\n      textLocation: {\n        x: '215',\n        y: '378',\n      },\n    },\n    //  Land Territories\n    {\n      title: 'Albania',\n      name: 'Albania',\n      tileType: 'landTile',\n      id: 'l Albania',\n      path: `M 331 454 L 331 477 L 335 480 L 339 487 L 350 477 L 350 471 L 346 466 L 346 452 L 337 446 L 330 445 L 331 454`,\n      textLocation: {\n        x: '337',\n        y: '469',\n      },\n    },\n    {\n      title: 'Ankara',\n      name: 'Ankara',\n      tileType: 'landTile',\n      id: 'l Ankara',\n      path: `M 555 438 L 551 437 L 520 441 L 514 438 L 511 440 L 502 433 L 481 438 L 470 447 L 464 457 L 468 461 L 468 479 L 466 491 L 473 491 L 490 480 L 501 482 L 508 480 L 531 460 L 546 462 L 555 460 L 557 449 L 555 438`,\n      textLocation: {\n        x: '510',\n        y: '455',\n      },\n    },\n    {\n      title: 'Apulia',\n      name: 'Apulia',\n      tileType: 'landTile',\n      id: 'l Apulia',\n      path: `M 304 484 L 310 480 L 318 485 L 322 485 L 322 480 L 297 456 L 300 453 L 290 453 L 278 443 L 274 447 L 279 451 L 280 455 L 279 458 L 293 481 L 304 484`,\n      textLocation: {\n        x: '282',\n        y: '467',\n      },\n    },\n    {\n      title: 'Armenia',\n      name: 'Armenia',\n      tileType: 'landTile',\n      id: 'l Armenia',\n      path: `M 609 493 L 584 478 L 563 479 L 562 471 L 556 467 L 555 460 L 557 449 L 555 438 L 570 427 L 589 442 L 594 439 L 603 441 L 609 440 L 609 493`,\n      textLocation: {\n        x: '572',\n        y: '463',\n      },\n    },\n    {\n      title: 'Belgium',\n      name: 'Belgium',\n      tileType: 'landTile',\n      id: 'l Belgium',\n      path: `M 191 299 L 194 303 L 206 306 L 205 311 L 208 315 L 210 326 L 205 331 L 192 323 L 184 315 L 169 311 L 173 301 L 191 299`,\n      textLocation: {\n        x: '192',\n        y: '316',\n      },\n    },\n    {\n      title: 'Berlin',\n      name: 'Berlin',\n      tileType: 'landTile',\n      id: 'l Berlin',\n      path: `M 294 275 L 286 274 L 287 267 L 280 266 L 266 275 L 266 283 L 262 287 L 264 293 L 261 296 L 263 310 L 288 305 L 296 300 L 297 296 L 292 290 L 294 275`,\n      textLocation: {\n        x: '272',\n        y: '292',\n      },\n    },\n    {\n      title: 'Bohemia',\n      name: 'Bohemia',\n      tileType: 'landTile',\n      id: 'l Bohemia',\n      path: `M 281 356 L 276 346 L 268 343 L 264 329 L 266 325 L 278 326 L 288 321 L 297 322 L 311 334 L 314 332 L 321 339 L 322 347 L 316 348 L 303 346 L 295 349 L 292 357 L 281 356`,\n      textLocation: {\n        x: '278',\n        y: '338',\n      },\n    },\n    {\n      title: 'Brest',\n      name: 'Brest',\n      tileType: 'landTile',\n      id: 'l Brest',\n      path: `M 150 319 L 144 318 L 142 312 L 136 310 L 136 326 L 124 323 L 122 318 L 102 317 L 100 322 L 103 328 L 109 329 L 123 344 L 122 350 L 123 357 L 128 363 L 146 365 L 146 337 L 148 329 L 150 319`,\n      textLocation: {\n        x: '130',\n        y: '345',\n      },\n    },\n    {\n      title: 'Budapest',\n      name: 'Budapest',\n      tileType: 'landTile',\n      id: 'l Budapest',\n      path: `M 394 376 L 395 382 L 401 385 L 406 396 L 401 402 L 387 402 L 367 406 L 365 412 L 360 413 L 342 410 L 338 412 L 335 410 L 332 410 L 323 408 L 321 398 L 311 394 L 308 383 L 311 375 L 322 370 L 335 354 L 337 350 L 350 347 L 360 351 L 368 353 L 377 360 L 378 363 L 384 365 L 394 376`,\n      textLocation: {\n        x: '350',\n        y: '390',\n      },\n    },\n    {\n      title: 'Bulgaria__ec',\n      name: 'Bulgaria',\n      tileType: 'landTile',\n      id: 'l',\n      path: `M 413 464 L 412 454 L 420 451 L 426 450 L 422 441 L 425 427 L 429 426 L 430 423 L 422 420 L 410 420 L 404 422 L 398 427 L 390 425 L 382 427 L 375 423 L 370 425 L 367 421 L 365 425 L 368 433 L 371 438 L 413 464`,\n      textLocation: {\n        x: '395',\n        y: '443',\n      },\n    },\n    {\n      title: 'Bulgaria__sc',\n      name: 'Bulgaria',\n      tileType: 'landTile',\n      id: 'l',\n      path: `M 371 438 L 366 439 L 371 456 L 365 461 L 369 464 L 376 464 L 388 460 L 392 472 L 400 468 L 408 470 L 413 464 L 371 438`,\n    },\n    {\n      title: 'Burgundy',\n      name: 'Burgundy',\n      tileType: 'landTile',\n      id: 'l Burgundy',\n      path: `M 192 323 L 205 331 L 204 338 L 211 346 L 213 352 L 209 363 L 208 367 L 194 382 L 178 381 L 178 390 L 173 396 L 168 395 L 163 387 L 165 383 L 158 380 L 156 374 L 165 365 L 185 344 L 188 332 L 192 323`,\n      textLocation: {\n        x: '171',\n        y: '371',\n      },\n    },\n    {\n      title: 'Clyde',\n      name: 'Clyde',\n      tileType: 'landTile',\n      id: 'l Clyde',\n      path: `M 138 214 L 130 208 L 129 197 L 139 189 L 140 182 L 148 177 L 162 181 L 161 185 L 154 188 L 152 194 L 146 200 L 144 213 L 138 214`,\n      textLocation: {\n        x: '133',\n        y: '201',\n      },\n    },\n    {\n      title: 'Constantinople',\n      name: 'Constantinople',\n      tileType: 'landTile',\n      id: 'l Constantinople',\n      path: `M 408 470 L 410 473 L 414 475 L 410 482 L 409 487 L 417 486 L 417 489 L 423 487 L 432 493 L 452 495 L 466 491 L 468 479 L 468 461 L 464 457 L 442 460 L 440 458 L 430 455 L 426 450 L 420 451 L 412 454 L 413 464 L 408 470`,\n      // <polygon class=\"w\" points=\"L 414 475 L 421 467 L 435 463 L 440 458 L 442 460 L 439 463 L 448 464 L 425 475\"/>\n      textLocation: {\n        x: '410',\n        y: '483',\n      },\n    },\n    {\n      title: 'Denmark',\n      name: 'Denmark',\n      tileType: 'landTile',\n      id: 'l Denmark',\n      path: `M 279 243 L 275 242 L 269 243 L 266 240 L 267 234 L 266 221 L 263 223 L 248 224 L 245 237 L 243 247 L 244 254 L 254 255 L 266 255 L 271 260 L 278 254 L 277 250 L 280 248  L 279 243`,\n      // <polygon class=\"w\" points=\"L 269 243 L 268 246 L 263 247 L 266 255 L 254 255 L 257 247 L 266 240\"/>\n      textLocation: {\n        x: '252',\n        y: '235',\n      },\n    },\n    {\n      title: 'Edinburgh',\n      name: 'Edinburgh',\n      tileType: 'landTile',\n      id: 'l Edinburgh',\n      path: `M 152 194 L 158 193 L 171 197 L 170 202 L 165 210 L 158 214 L 151 215 L 157 216 L 161 218 L 163 226 L 155 228 L 145 217 L 144 213 L 146 200 L 152 194`,\n      textLocation: {\n        x: '158',\n        y: '209',\n      },\n    },\n    {\n      title: 'Finland',\n      name: 'Finland',\n      tileType: 'landTile',\n      id: 'l Finland',\n      path: `M 362 107 L 368 108 L 372 120 L 366 121 L 359 136 L 345 151 L 347 160 L 350 165 L 348 178 L 349 184 L 357 186 L 365 191 L 384 185 L 402 177 L 412 161 L 410 152 L 414 147 L 410 130 L 402 118 L 401 110 L 392 92 L 393 73 L 387 68 L 388 61 L 386 58 L 388 54 L 379 48 L 370 49 L 369 61 L 355 62 L 346 54 L 342 61 L 356 71 L 362 107`,\n      textLocation: {\n        x: '375',\n        y: '160',\n      },\n    },\n    {\n      title: 'Galicia',\n      name: 'Galicia',\n      tileType: 'landTile',\n      id: 'l Galicia',\n      path: `M 333 330 L 341 330 L 344 332 L 353 327 L 356 323 L 361 324 L 367 329 L 374 327 L 379 324 L 383 327 L 385 332 L 399 338 L 404 354 L 403 360 L 404 371 L 394 376 L 384 365 L 378 363 L 377 360 L 368 353 L 360 351 L 350 347 L 337 350 L 329 346 L 322 347 L 321 339 L 322 347 L 321 339 L 325 340 L 329 338 L 333 330`,\n      textLocation: {\n        x: '355',\n        y: '343',\n      },\n    },\n    {\n      title: 'Gascony',\n      name: 'Gascony',\n      tileType: 'landTile',\n      id: 'l Gascony',\n      path: `M 128 363 L 121 382 L 122 384 L 112 399 L 113 407 L 123 412 L 134 417 L 135 414 L 142 417 L 149 403 L 157 397 L 168 395 L 163 387 L 165 383 L 158 380 L 156 374 L 149 372 L 146 365 L 128 363`,\n      textLocation: {\n        x: '130',\n        y: '390',\n      },\n    },\n    {\n      title: 'Greece',\n      name: 'Greece',\n      tileType: 'landTile',\n      id: 'l Greece',\n      path: `M 339 487 L 346 498 L 350 498 L 347 500 L 352 508 L 367 507 L 371 511 L 355 510 L 350 514 L 357 521 L 359 533 L 360 528 L 367 536 L 368 531 L 376 537 L 371 520 L 378 521 L 377 513 L 386 516 L 385 509 L 370 494 L 371 491 L 378 494 L 368 483 L 371 477 L 379 484 L 382 483 L 381 477 L 386 478 L 380 472 L 392 472 L 388 460 L 376 464 L 369 464 L 361 467 L 356 471 L 350 471 L 350 477 L 339 487`,\n      textLocation: {\n        x: '346',\n        y: '491',\n      },\n    },\n    {\n      title: 'Holland',\n      name: 'Holland',\n      tileType: 'landTile',\n      id: 'l Holland',\n      path: `M 226 275 L 227 280 L 225 292 L 220 298 L 215 297 L 213 302 L 210 313 L 208 315 L 205 311 L 206 306 L 194 303 L 191 299 L 198 289 L 205 276 L 205 279 L 207 279 L 211 274 L 226 275`,\n      textLocation: {\n        x: '210',\n        y: '295',\n      },\n    },\n    {\n      title: 'Kiel',\n      name: 'Kiel',\n      tileType: 'landTile',\n      id: 'l Kiel',\n      path: `M 244 254 L 243 257 L 245 263 L 244 270 L 244 273 L 235 277 L 234 274 L 230 273 L 226 275 L 227 280 L 225 292 L 220 298 L 215 297 L 213 302 L 232 308 L 241 316 L 243 322 L 263 310 L 261 296 L 264 293 L 262 287 L 266 283 L 266 275 L 261 274 L 260 269 L 256 266 L 256 263 L 254 255 L 244 254`,\n      // <polygon class=\"w\" points=\"L 244 270 L 244 273 L 256 266 L 256 263 \"/>\n      textLocation: {\n        x: '237',\n        y: '285',\n      },\n    },\n    {\n      title: 'Liverpool',\n      name: 'Liverpool',\n      tileType: 'landTile',\n      id: 'l Liverpool',\n      path: `M 128 262 L 126 256 L 121 257 L 132 250 L 135 250 L 139 240 L 136 229 L 130 227 L 130 223 L 138 217 L 138 214 L 144 213 L 145 217 L 155 228 L 155 239 L 151 248 L 150 264 L 143 262 L 128 262`,\n      textLocation: {\n        x: '140',\n        y: '230',\n      },\n    },\n    {\n      title: 'Livonia',\n      name: 'Livonia',\n      tileType: 'landTile',\n      id: 'l Livonia',\n      path: `M 369 202 L 365 204 L 368 210 L 372 213 L 373 221 L 377 227 L 373 229 L 366 228 L 359 220 L 349 229 L 347 243 L 354 251 L 356 261 L 362 260 L 367 265 L 365 281 L 372 283 L 379 290 L 389 285 L 392 278 L 404 275 L 405 239 L 409 228 L 405 217 L 394 205 L 382 206 L 372 205 L 369 202`,\n      textLocation: {\n        x: '370',\n        y: '250',\n      },\n    },\n    {\n      title: 'London',\n      name: 'London',\n      tileType: 'landTile',\n      id: 'l London',\n      path: `M 166 269 L 168 270 L 171 268 L 177 270 L 178 274 L 176 283 L 165 293 L 172 294 L 168 296 L 160 298 L 147 295 L 145 281 L 150 277 L 153 271 L 166 269`,\n      textLocation: {\n        x: '160',\n        y: '280',\n      },\n    },\n    {\n      title: 'Marseilles',\n      name: 'Marseilles',\n      tileType: 'landTile',\n      id: 'l Marseilles',\n      path: `M 142 417 L 149 403 L 157 397 L 168 395 L 173 396 L 178 390 L 178 381 L 194 382 L 197 385 L 203 379 L 207 386 L 204 390 L 207 396 L 201 399 L 204 402 L 203 410 L 211 416 L 198 421 L 188 422 L 176 417 L 169 412 L 158 418 L 158 425 L 154 427 L 142 417`,\n      textLocation: {\n        x: '165',\n        y: '410',\n      },\n    },\n    {\n      title: 'Moscow',\n      name: 'Moscow',\n      tileType: 'landTile',\n      id: 'l Moscow',\n      path: `M 609 117 L 598 132 L 573 143 L 564 159 L 534 164 L 515 169 L 489 184 L 476 183 L 458 194 L 456 207 L 457 210 L 451 213 L 447 209 L 439 211 L 428 225 L 421 229 L 409 228 L 405 239 L 404 275 L 392 278 L 389 285 L 379 290 L 386 309 L 390 306 L 456 292 L 468 295 L 477 289 L 494 295 L 505 280 L 516 286 L 526 287 L 533 283 L 549 284 L 554 304 L 564 305 L 569 321 L 597 330 L 609 330 L 609 117`,\n      textLocation: {\n        x: '460',\n        y: '265',\n      },\n    },\n    {\n      title: 'Munich',\n      name: 'Munich',\n      tileType: 'landTile',\n      id: 'l Munich',\n      path: `M 234 366 L 243 370 L 246 369 L 250 371 L 267 368 L 271 370 L 269 362 L 275 362 L 281 356 L 276 346 L 268 343 L 264 329 L 266 325 L 278 326 L 288 321 L 284 314 L 288 305 L 263 310 L 243 322 L 237 322 L 219 344 L 211 346 L 213 352 L 209 363 L 222 365 L 225 362 L 232 363 L 234 366`,\n      textLocation: {\n        x: '235',\n        y: '350',\n      },\n    },\n    {\n      title: 'Naples',\n      name: 'Naples',\n      tileType: 'landTile',\n      id: 'l Naples',\n      path: `M 271 464 L 276 474 L 290 487 L 294 502 L 289 511 L 290 514 L 295 515 L 308 500 L 311 491 L 304 484 L 293 481 L 279 458 L 271 464`,\n      textLocation: {\n        x: '293',\n        y: '493',\n      },\n    },\n    {\n      title: 'North_Africa',\n      name: 'North Africa',\n      tileType: 'landTile',\n      id: 'l North Africa',\n      path: `M 203 520 L 179 515 L 169 518 L 150 511 L 117 509 L 106 511 L 99 515 L 89 512 L 84 518 L 79 520 L 68 516 L 68 511 L 64 514 L 46 509 L 42 502 L 41 494 L 37 495 L 33 496 L 17 518 L 0 520 L 0 559 L 195 559 L 197 527 L 203 520`,\n      textLocation: {\n        x: '100',\n        y: '540',\n      },\n    },\n    {\n      title: 'Norway',\n      name: 'Norway',\n      tileType: 'landTile',\n      id: 'l Norway',\n      path: `M 397 48 L 391 47 L 395 41 L 394 38 L 384 33 L 382 40 L 380 33 L 377 31 L 374 38 L 371 33 L 366 42 L 366 33 L 362 33 L 357 39 L 343 44 L 324 54 L 320 64 L 310 75 L 309 84 L 303 86 L 292 111 L 277 132 L 269 134 L 264 142 L 258 141 L 236 154 L 237 160 L 233 167 L 231 180 L 233 186 L 229 192 L 231 201 L 241 209 L 246 210 L 266 201 L 270 193 L 275 203 L 279 204 L 287 177 L 285 170 L 290 164 L 292 133 L 301 132 L 300 126 L 309 115 L 308 104 L 311 101 L 324 71 L 332 74 L 330 64 L 341 65 L 342 61 L 346 54 L 355 62 L 369 61 L 370 49 L 379 48 L 388 54 L 386 58 L 388 61 L 397 48`,\n      textLocation: {\n        x: '250',\n        y: '175',\n      },\n    },\n    {\n      title: 'Paris',\n      name: 'Paris',\n      tileType: 'landTile',\n      id: 'l Paris',\n      path: `M 146 365 L 149 372 L 156 374 L 165 365 L 185 344 L 188 332 L 172 328 L 165 331 L 159 331 L 148 329 L 146 337 L 146 365`,\n      textLocation: {\n        x: '155',\n        y: '358',\n      },\n    },\n    {\n      title: 'Picardy',\n      name: 'Picardy',\n      tileType: 'landTile',\n      id: 'l Picardy',\n      path: `M 169 311 L 153 315 L 155 320 L 150 319 L 148 329 L 159 331 L 165 331 L 172 328 L 188 332 L 192 323 L 184 315 L 169 311`,\n      textLocation: {\n        x: '160',\n        y: '326',\n      },\n    },\n    {\n      title: 'Piedmont',\n      name: 'Piedmont',\n      tileType: 'landTile',\n      id: 'l Piedmont',\n      path: `M 207 386 L 204 390 L 207 396 L 201 399 L 204 402 L 203 410 L 211 416 L 222 410 L 233 415 L 236 411 L 233 404 L 246 392 L 243 388 L 229 385 L 227 390 L 221 385 L 213 387 L 207 386`,\n      textLocation: {\n        x: '215',\n        y: '408',\n      },\n    },\n    {\n      title: 'Portugal',\n      name: 'Portugal',\n      tileType: 'landTile',\n      id: 'l Portugal',\n      path: `M 32 396 L 30 406 L 17 427 L 14 427 L 10 433 L 13 440 L 15 441 L 12 450 L 13 454 L 8 462 L 19 469 L 27 468 L 36 457 L 34 447 L 40 441 L 37 431 L 42 432 L 52 412 L 61 411 L 62 407 L 55 400 L 42 399 L 43 395 L 32 396`,\n      textLocation: {\n        x: '15',\n        y: '420',\n      },\n    },\n    {\n      title: 'Prussia',\n      name: 'Prussia',\n      tileType: 'landTile',\n      id: 'l Prussia',\n      path: `M 347 243 L 347 248 L 348 254 L 344 262 L 337 264 L 334 273 L 328 274 L 326 265 L 314 266 L 307 273 L 294 275 L 292 290 L 297 296 L 296 300 L 320 303 L 324 299 L 326 292 L 341 287 L 345 289 L 359 286 L 365 281 L 367 265 L 362 260 L 356 261 L 354 251 L 347 243`,\n      textLocation: {\n        x: '320',\n        y: '283',\n      },\n    },\n    {\n      title: 'Rome',\n      name: 'Rome',\n      tileType: 'landTile',\n      id: 'l Rome',\n      path: `M 247 442 L 248 447 L 256 458 L 271 464 L 279 458 L 280 455 L 279 451 L 274 447 L 263 434 L 250 438 L 247 442`,\n      textLocation: {\n        x: '257',\n        y: '452',\n      },\n    },\n    {\n      title: 'Ruhr',\n      name: 'Ruhr',\n      tileType: 'landTile',\n      id: 'l Ruhr',\n      path: `M 213 302 L 210 313 L 208 315 L 210 326 L 205 331 L 204 338 L 211 346 L 219 344 L 237 322 L 243 322 L 241 316 L 232 308 L 213 302`,\n      textLocation: {\n        x: '215',\n        y: '330',\n      },\n    },\n    {\n      title: 'Rumania',\n      name: 'Rumania',\n      tileType: 'landTile',\n      id: 'l Rumania',\n      path: `M 403 360 L 404 371 L 394 376 L 395 382 L 401 385 L 406 396 L 401 402 L 387 402 L 367 406 L 365 412 L 367 421 L 370 425 L 375 423 L 382 427 L 390 425 L 398 427 L 404 422 L 410 420 L 422 420 L 430 423 L 432 409 L 439 404 L 438 397 L 427 399 L 422 382 L 423 376 L 414 372 L 411 361 L 403 360`,\n      textLocation: {\n        x: '390',\n        y: '410',\n      },\n    },\n    {\n      title: 'Serbia',\n      name: 'Serbia',\n      tileType: 'landTile',\n      id: 'l Serbia',\n      path: `M 365 412 L 360 413 L 342 410 L 338 412 L 335 410 L 332 410 L 330 416 L 331 424 L 327 429 L 330 437 L 337 446 L 346 452 L 346 466 L 350 471 L 356 471 L 361 467 L 369 464 L 365 461 L 371 456 L 366 439 L 371 438 L 368 433 L 365 425 L 367 421 L 365 412`,\n      textLocation: {\n        x: '340',\n        y: '440',\n      },\n    },\n    {\n      title: 'Sevastopol',\n      name: 'Sevastopol',\n      tileType: 'landTile',\n      id: 'l Sevastopol',\n      path: `M 438 397 L 446 378 L 459 375 L 461 377 L 459 379 L 465 383 L 476 381 L 478 383 L 472 385 L 468 392 L 477 396 L 477 401 L 486 404 L 488 397 L 494 396 L 497 392 L 507 389 L 506 384 L 494 387 L 485 378 L 503 364 L 526 351 L 527 354 L 514 365 L 517 371 L 520 371 L 515 384 L 511 383 L 510 386 L 517 393 L 528 394 L 554 406 L 567 408 L 573 417 L 570 427 L 589 442 L 594 439 L 603 441 L 609 440 L 609 330 L 597 330 L 569 321 L 564 305 L 554 304 L 549 284 L 533 283 L 526 287 L 516 286 L 505 280 L 494 295 L 477 289 L 468 295 L 470 303 L 466 307 L 460 345 L 445 350 L 434 360 L 432 372 L 423 376 L 422 382 L 427 399 L 438 397`,\n      textLocation: {\n        x: '540',\n        y: '350',\n      },\n    },\n    {\n      title: 'Silesia',\n      name: 'Silesia',\n      tileType: 'landTile',\n      id: 'l Silesia',\n      path: `M 288 321 L 297 322 L 311 334 L 314 332 L 321 339 L 325 340 L 329 338 L 333 330 L 326 327 L 323 322 L 320 303 L 296 300 L 288 305 L 284 314 L 288 321`,\n      textLocation: {\n        x: '298',\n        y: '318',\n      },\n    },\n    {\n      title: 'Smyrna',\n      name: 'Smyrna',\n      tileType: 'landTile',\n      id: 'l Smyrna',\n      path: `M 417 489 L 420 495 L 417 498 L 417 507 L 423 510 L 427 524 L 435 523 L 435 530 L 441 526 L 447 528 L 453 534 L 464 531 L 466 521 L 475 520 L 485 528 L 491 530 L 505 526 L 511 514 L 520 517 L 527 508 L 530 509 L 536 494 L 545 486 L 555 484 L 563 479 L 562 471 L 556 467 L 555 460 L 546 462 L 531 460 L 508 480 L 501 482 L 490 480 L 473 491 L 466 491 L 452 495 L 432 493 L 423 487 L 417 489`,\n      textLocation: {\n        x: '460',\n        y: '510',\n      },\n    },\n    {\n      title: 'Spain__nc',\n      name: 'Spain',\n      tileType: 'landTile',\n      id: 'l',\n      path: `M 134 417 L 123 412 L 113 407 L 112 399 L 101 396 L 96 397 L 72 384 L 59 381 L 54 375 L 48 374 L 46 378 L 39 375 L 33 381 L 35 384 L 32 396 L 43 395 L 42 399 L 55 400 L 62 407 L 61 411 L 52 412 L 42 432 L 37 431 L 40 441 L 134 417`,\n    },\n    {\n      title: 'Spain__sc',\n      name: 'Spain',\n      tileType: 'landTile',\n      id: 'l',\n      path: `M 40 441 L 34 447 L 36 457 L 27 468 L 33 475 L 34 484 L 37 490 L 47 488 L 52 489 L 60 486 L 78 491 L 83 494 L 86 485 L 90 483 L 98 484 L 107 474 L 113 473 L 115 469 L 110 461 L 124 444 L 131 439 L 146 438 L 157 432 L 158 425 L 154 427 L 142 417 L 135 414 L 134 417 L 40 441`,\n      textLocation: {\n        x: '85',\n        y: '450',\n      },\n    },\n    {\n      title: 'St_Petersburg__nc',\n      name: 'St Petersburg',\n      tileType: 'landTile',\n      id: 'l St_Petersburg',\n      path: `M 534 164 L 564 159 L 573 143 L 598 132 L 609 117 L 609 0 540 0 L 535 9 L 530 6 L 517 19 L 516 33 L 513 38 L 513 23 L 507 20 L 505 26 L 499 33 L 492 48 L 495 58 L 488 60 L 479 57 L 477 55 L 481 50 L 473 43 L 466 45 L 472 62 L 478 66 L 478 74 L 472 72 L 468 74 L 457 91 L 469 100 L 467 106 L 462 109 L 444 101 L 442 110 L 447 115 L 454 119 L 452 122 L 434 118 L 426 103 L 426 94 L 414 88 L 412 83 L 445 84 L 457 79 L 459 66 L 453 61 L 417 47 L 405 49 L 401 45 L 397 48 L 388 61 L 387 68 L 393 73 L 392 92 L 401 110 L 402 118 L 410 130 L 414 147 L 534 164`,\n      textLocation: {\n        x: '460',\n        y: '149',\n      },\n      // <text x=\"475\" y=\"90\">(nc)</text>\n    },\n    {\n      title: 'St_Petersburg__sc',\n      name: 'St Petersburg',\n      tileType: 'landTile',\n      id: 'l St_Petersburg',\n      path: `M 414 147 L 410 152 L 412 161 L 402 177 L 403 183 L 411 184 L 414 187 L 408 187 L 400 192 L 399 197 L 387 196 L 371 198 L 369 202 L 372 205 L 382 206 L 394 205 L 405 217 L 409 228 L 421 229 L 428 225 L 439 211 L 447 209 L 451 213 L 457 210 L 456 207 L 458 194 L 476 183 L 489 184 L 515 169 L 534 164 L 414 147`,\n      textLocation: {\n        x: '408',\n        y: '200',\n      },\n    },\n    {\n      title: 'Sweden',\n      name: 'Sweden',\n      tileType: 'landTile',\n      id: 'l Sweden',\n      path: `M 275 203 L 277 218 L 276 224 L 282 236 L 279 240 L 279 243 L 282 253 L 289 254 L 294 245 L 305 244 L 312 229 L 311 220 L 314 209 L 322 206 L 328 203 L 331 193 L 326 183 L 320 182 L 321 161 L 330 146 L 343 138 L 351 128 L 347 121 L 349 112 L 355 104 L 362 107 L 356 71 L 342 61 L 341 65 L 330 64 L 332 74 L 324 71 L 311 101 L 308 104 L 309 115 L 300 126 L 301 132 L 292 133 L 290 164 L 285 170 L 287 177 L 279 204 L 275 203`,\n      textLocation: {\n        x: '300',\n        y: '145',\n      },\n    },\n    {\n      title: 'Syria',\n      name: 'Syria',\n      tileType: 'landTile',\n      id: 'l Syria',\n      path: `M 530 509 L 536 494 L 545 486 L 555 484 L 563 479 L 584 478 L 609 493 L 609 559 L 528 559 L 532 535 L 526 530 L 525 518 L 530 509`,\n      textLocation: {\n        x: '570',\n        y: '535',\n      },\n    },\n    {\n      title: 'Trieste',\n      name: 'Trieste',\n      tileType: 'landTile',\n      id: 'l Trieste',\n      path: `M 276 399 L 275 403 L 278 410 L 282 401 L 286 402 L 289 418 L 306 436 L 331 454 L 330 445 L 337 446 L 330 437 L 327 429 L 331 424 L 330 416 L 332 410 L 323 408 L 321 398 L 311 394 L 308 383 L 299 385 L 294 380 L 289 385 L 276 386 L 279 389 L 276 399`,\n      textLocation: {\n        x: '305',\n        y: '425',\n      },\n    },\n    {\n      title: 'Tunis',\n      name: 'Tunis',\n      tileType: 'landTile',\n      id: 'l Tunis',\n      path: `M 232 559 L 234 551 L 232 544 L 225 535 L 231 531 L 236 524 L 233 523 L 224 527 L 223 518 L 218 516 L 212 517 L 208 521 L 203 520 L 197 527 L 195 559 L 232 559`,\n      textLocation: {\n        x: '208',\n        y: '550',\n      },\n    },\n    {\n      title: 'Tuscany',\n      name: 'Tuscany',\n      tileType: 'landTile',\n      id: 'l Tuscany',\n      path: `M 233 415 L 238 431 L 247 442 L 250 438 L 263 434 L 253 418 L 246 416 L 240 415 L 236 411 L 233 415`,\n      textLocation: {\n        x: '240',\n        y: '425',\n      },\n    },\n    {\n      title: 'Tyrolia',\n      name: 'Tyrolia',\n      tileType: 'landTile',\n      id: 'l Tyrolia',\n      path: `M 234 366 L 243 370 L 246 369 L 250 371 L 267 368 L 271 370 L 269 362 L 275 362 L 281 356 L 292 357 L 295 362 L 294 380 L 289 385 L 276 386 L 268 385 L 259 388 L 255 394 L 250 397 L 246 392 L 243 388 L 245 384 L 241 378 L 234 374 L 234 366`,\n      textLocation: {\n        x: '255',\n        y: '380',\n      },\n    },\n    {\n      title: 'Ukraine',\n      name: 'Ukraine',\n      tileType: 'landTile',\n      id: 'l Ukraine',\n      path: `M 383 327 L 385 332 L 399 338 L 404 354 L 403 360 L 411 361 L 414 372 L 423 376 L 432 372 L 434 360 L 445 350 L 460 345 L 466 307 L 470 303 L 468 295 L 456 292 L 390 306 L 386 309 L 383 327`,\n      textLocation: {\n        x: '420',\n        y: '340',\n      },\n    },\n    {\n      title: 'Venice',\n      name: 'Venice',\n      tileType: 'landTile',\n      id: 'l Venice',\n      path: `M 278 443 L 272 424 L 260 417 L 261 401 L 270 398 L 276 399 L 279 389 L 276 386 L 268 385 L 259 388 L 255 394 L 250 397 L 246 392 L 233 404 L 236 411 L 240 415 L 246 416 L 253 418 L 263 434 L 274 447 L 278 443`,\n      textLocation: {\n        x: '245',\n        y: '407',\n      },\n    },\n    {\n      title: 'Vienna',\n      name: 'Vienna',\n      tileType: 'landTile',\n      id: 'l Vienna',\n      path: `M 292 357 L 295 349 L 303 346 L 316 348 L 322 347 L 329 346 L 337 350 L 335 354 L 322 370 L 311 375 L 308 383 L 299 385 L 294 380 L 295 362 L 292 357`,\n      textLocation: {\n        x: '305',\n        y: '356',\n      },\n    },\n    {\n      title: 'Wales',\n      name: 'Wales',\n      tileType: 'landTile',\n      id: 'l Wales',\n      path: `M 100 291 L 112 287 L 122 281 L 130 282 L 127 276 L 119 272 L 116 272 L 115 265 L 128 262 L 143 262 L 150 264 L 153 271 L 150 277 L 145 281 L 147 295 L 134 294 L 124 291 L 120 295 L 110 292 L 100 291`,\n      textLocation: {\n        x: '130',\n        y: '275',\n      },\n    },\n    {\n      title: 'Warsaw',\n      name: 'Warsaw',\n      tileType: 'landTile',\n      id: 'l Warsaw',\n      path: `M 333 330 L 326 327 L 323 322 L 320 303 L 324 299 L 326 292 L 341 287 L 345 289 L 359 286 L 365 281 L 372 283 L 379 290 L 386 309 L 383 327 L 379 324 L 374 327 L 367 329 L 361 324 L 356 323 L 353 327 L 344 332 L 341 330 L 333 330`,\n      textLocation: {\n        x: '345',\n        y: '316',\n      },\n    },\n    {\n      title: 'Yorkshire',\n      name: 'Yorkshire',\n      tileType: 'landTile',\n      id: 'l Yorkshire',\n      path: `M 163 226 L 163 239 L 168 246 L 170 252 L 169 265 L 166 269 L 153 271 L 150 264 L 151 248 L 155 239 L 155 228 L 163 226`,\n      textLocation: {\n        x: '160',\n        y: '248',\n      },\n    },\n  ],\n}\n","import { IMove } from '@shared/types'\n\nexport default class Order {\n  static from(move: IMove) {\n    return new Order('', move.from, move.to, move.moveType, move.supportFrom)\n  }\n\n  unit: 'Army' | 'Fleet'\n  moveType: string\n  from: string\n  to: string\n  supportFrom: string\n  wasSuccessful: boolean\n\n  constructor(unit: string, origin: string, destination: string, moveType: string, supportFrom?: string) {\n    Object.assign(this, {unit, from: origin, to: destination, moveType, supportFrom })\n  }\n\n  toObject() {\n    return {\n      unit: this.unit,\n      moveType: this.moveType,\n      from: this.from,\n      to: this.to,\n      supportFrom: this.supportFrom,\n      wasSuccessful: this.wasSuccessful,\n    }\n  }\n}\n","const locations: {[key: string]: {x: number, y: number}} = {\n  Switzerland: { x: 219, y: 376 },\n  Adriatic_Sea: { x: 296, y: 441 },\n  Aegean_Sea: { x: 403, y: 524 },\n  Albania: { x: 339, y: 469 },\n  Ankara: { x: 500, y: 460 }, scAnkara: { x: 482, y: 469 },\n  Apulia: { x: 302, y: 472 },\n  Armenia: { x: 576, y: 456 },\n  Baltic_Sea: { x: 323, y: 250 },\n  Barents_Sea: { x: 445, y: 41 },\n  Belgium: { x: 197, y: 317 }, scBelgium: { x: 186, y: 305 },\n  Berlin: { x: 279, y: 283 }, scBerlin: { x: 281, y: 298 },\n  Black_Sea: { x: 484, y: 420 },\n  Bohemia: { x: 289, y: 336 },\n  Brest: { x: 125, y: 334 }, scBrest: { x: 106, y: 322 },\n  Budapest: { x: 353, y: 378 }, scBudapest: { x: 326, y: 376 },\n  Bulgaria: { x: 395, y: 443 }, scBulgaria: { x: 377, y: 444 },\n  Bulgaria__ec: { x: 410, y: 440 },\n  Bulgaria__sc: { x: 399, y: 462 },\n  Burgundy: { x: 191, y: 360 },\n  Clyde: { x: 139, y: 188 },\n  Constantinople: { x: 439, y: 473 }, scConstantinople: { x: 429, y: 460 },\n  Denmark: { x: 256, y: 245 }, scDenmark: { x: 272, y: 252 },\n  Eastern_Mediterranean: { x: 474, y: 546 },\n  Edinburgh: { x: 157, y: 210 }, scEdinburgh: { x: 154, y: 219 },\n  English_Channel: { x: 119, y: 307 },\n  Finland: { x: 385, y: 143 },\n  Galicia: { x: 377, y: 343 },\n  Gascony: { x: 137, y: 388 },\n  Greece: { x: 366, y: 515 }, scGreece: { x: 378, y: 507 },\n  Gulf_of_Lyon: { x: 180, y: 444 },\n  Gulf_of_Bothnia: { x: 348, y: 199 },\n  Helgoland_Bight: { x: 226, y: 252 },\n  Holland: { x: 205, y: 297 }, scHolland: { x: 205, y: 284 },\n  Ionian_Sea: { x: 324, y: 540 },\n  Irish_Sea: { x: 90, y: 276 },\n  Kiel: { x: 243, y: 295 }, scKiel: { x: 254, y: 278 },\n  Liverpool: { x: 142, y: 241 }, scLiverpool: { x: 144, y: 257 },\n  Livonia: { x: 382, y: 245 },\n  London: { x: 162, y: 281 }, scLondon: { x: 162, y: 290 },\n  Marseilles: { x: 188, y: 398 }, scMarseilles: { x: 186, y: 417 },\n  Mid_Atlantic_Ocean: { x: 23, y: 355 },\n  Moscow: { x: 505, y: 226 }, scMoscow: { x: 481, y: 234 },\n  Munich: { x: 243, y: 347 }, scMunich: { x: 258, y: 359 },\n  Naples: { x: 299, y: 505 }, scNaples: { x: 278, y: 469 },\n  North_Atlantic_Ocean: { x: 65, y: 140 },\n  North_Africa: { x: 100, y: 536 },\n  North_Sea: { x: 204, y: 215 },\n  Norway: { x: 264, y: 160 }, scNorway: { x: 270, y: 187 },\n  Norwegian_Sea: { x: 220, y: 90 },\n  Paris: { x: 162, y: 346 }, scParis: { x: 173, y: 334 },\n  Picardy: { x: 168, y: 319 },\n  Piedmont: { x: 220, y: 395 },\n  Portugal: { x: 34, y: 417 }, scPortugal: { x: 15, y: 434 },\n  Prussia: { x: 315, y: 283 },\n  Rome: { x: 264, y: 452 }, scRome: { x: 252, y: 443 },\n  Ruhr: { x: 223, y: 320 },\n  Rumania: { x: 415, y: 405 }, scRumania: { x: 402, y: 413 },\n  Serbia: { x: 351, y: 438 }, scSerbia: { x: 343, y: 419 },\n  Sevastopol: { x: 515, y: 330 }, scSevastopol: { x: 483, y: 396 },\n  Silesia: { x: 304, y: 314 },\n  Skagerrak: { x: 260, y: 212 },\n  Smyrna: { x: 490, y: 505 }, scSmyrna: { x: 424, y: 502 },\n  Spain: { x: 64, y: 439 }, scSpain: { x: 80, y: 432 },\n  Spain__nc: { x: 80, y: 404 },\n  Spain__sc: { x: 52, y: 475 },\n  St_Petersburg: { x: 500, y: 140 }, scSt_Petersburg: { x: 418, y: 187 },\n  St_Petersburg__nc: { x: 472, y: 122 },\n  St_Petersburg__sc: { x: 418, y: 205 },\n  Sweden: { x: 315, y: 140 }, scSweden: { x: 323, y: 196 },\n  Syria: { x: 570, y: 520 },\n  Trieste: { x: 305, y: 412 }, scTrieste: { x: 284, y: 396 },\n  Tunis: { x: 212, y: 542 }, scTunis: { x: 220, y: 529 },\n  Tuscany: { x: 247, y: 430 },\n  Tyrolia: { x: 277, y: 378 },\n  Tyrrhenian_Sea: { x: 246, y: 483 },\n  Ukraine: { x: 427, y: 327 },\n  Venice: { x: 250, y: 408 }, scVenice: { x: 261, y: 397 },\n  Vienna: { x: 314, y: 360 }, scVienna: { x: 301, y: 363 },\n  Wales: { x: 125, y: 285 },\n  Warsaw: { x: 361, y: 315 }, scWarsaw: { x: 346, y: 302 },\n  Western_Mediterranean: { x: 140, y: 492 },\n  Yorkshire: { x: 161, y: 254 },\n}\n\nexport default locations\n","import { IGameTurnJSON } from '@shared/types'\nimport Order from '../order'\nimport entityLocations from '../resources/entityLocations'\n\nexport default class BoardPainter {\n  board: HTMLElement\n  turn: IGameTurnJSON\n  army: HTMLElement\n  fleet: HTMLElement\n\n  constructor(board: HTMLElement, turn: IGameTurnJSON, armySvg: HTMLElement, fleetSvg: HTMLElement) {\n    this.board = board\n    this.turn = turn\n    this.army = armySvg\n    this.fleet = fleetSvg\n    this.draw()\n  }\n\n  draw = (turn?: IGameTurnJSON) => {\n    if (turn) this.turn = turn\n    this.turn.players.forEach((player) => {\n      this.colourTerritories(player.ownedTerritories, player.empire, player.colour)\n      this.drawMoves(player.moves.map(Order.from))\n      this.drawUnits(player.ownedUnits, player.empire, player.colour)\n    })\n  }\n\n  reset = () => {\n    this.turn.players.forEach((player) => this.colourTerritories(player.ownedTerritories, 'unowned'))\n    this.removeOrders()\n    this.removeUnits()\n  }\n\n  redraw = () => {\n    this.reset()\n    this.draw()\n  }\n\n  redrawOrders = (orders: Order[]) => {\n    this.removeOrders()\n    this.drawMoves(orders)\n  }\n\n  private colourTerritories = (territories: string[], empire: string, colour?: string) => {\n    territories.forEach((territory) => this.setOwnership(territory, empire, colour))\n  }\n\n  private drawUnits(units: {unitType: string, location: string, status: string}[], empire: string, colour: string) {\n    units.forEach((unit) => this.drawUnit(unit, empire, colour))\n  }\n\n  private drawMoves = (orders: Order[]) => {\n    orders.forEach((order) => this.drawOrder(order))\n  }\n\n  private setOwnership = (territory: string, owner: string, colour: string) => {\n    const territoryElements = Array.from(this.board.getElementsByClassName(territory))\n    territoryElements.forEach((terr) => {\n      terr.classList.remove('England', 'France', 'Germany', 'Austria', 'Russia', 'Italy', 'Turkey')\n      // terr.classList.add(owner)\n      terr.classList.add(`${colour}-light`)\n    })\n  }\n\n  private drawUnit = (unit: {unitType: string, location: string, status: string}, empire: string, colour: string) => {\n    const svg = unit.unitType === 'Army' ? this.army : this.fleet\n    const svgUnit = svg.cloneNode(true) as HTMLElement\n\n    const location = entityLocations[unit.location]\n    svgUnit.setAttribute('class', `unit ${unit.unitType} ${unit.location} ${empire}`)\n    svgUnit.setAttribute('x', (location.x - 13).toString())\n    svgUnit.setAttribute('y', (location.y - 18).toString())\n\n    const brightnesses = ['light', 'medium', 'shadow']\n    brightnesses.forEach((brightness) => {\n      Array.from(svgUnit.getElementsByClassName(brightness)).forEach((el) => {\n        el.setAttribute('class', `${colour}-${brightness}`)\n      })\n    })\n\n    this.board.appendChild(svgUnit)\n  }\n\n  private drawOrder = (order: Order) => {\n    this.drawLine(entityLocations[order.from], entityLocations[order.to])\n  }\n\n  private drawLine = (start: {x: number, y: number}, end: {x: number, y: number}) => {\n    const line = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n    line.setAttribute('d', `M ${start.x} ${start.y} L ${end.x} ${end.y}`) // Set path's data\n    // line.style.stroke = color || '#000' // Set stroke colour\n    line.setAttribute('stroke', 'green')\n    line.setAttribute('class', 'order')\n    line.style.strokeWidth = '2px'\n    line.style.markerEnd = 'url(#triangle)'\n    this.board.appendChild(line)\n  }\n\n  private removeOrders = () => {\n    const orderArray = Array.from(this.board.getElementsByClassName('order'))\n    orderArray.forEach((order) => order.remove())\n  }\n\n  private removeUnits = () => {\n    const unitArray = Array.from(this.board.getElementsByClassName('unit'))\n    unitArray.forEach((unit) => unit.remove())\n  }\n}\n","const adjacentByLandTilesData: {[key: string]: string[]} = {\n  Adriatic_Sea: ['Ionian_Sea', 'Albania', 'Apulia', 'Trieste', 'Venice'],\n  Aegean_Sea: ['Eastern_Mediterranean', 'Ionian_Sea', 'Bulgaria__sc', 'Constantinople', 'Greece', 'Smyrna'],\n  Baltic_Sea: ['Gulf_of_Bothnia', 'Skagerrak', 'Berlin', 'Denmark', 'Kiel', 'Livonia', 'Prussia', 'Sweden'],\n  Barents_Sea: ['Norwegian_Sea', 'Norway', 'St_Petersburg__nc'],\n  Black_Sea: ['Ankara', 'Armenia', 'Constantinople', 'Rumania', 'Sevastopol'],\n  Eastern_Mediterranean: ['Aegean_Sea', 'Ionian_Sea', 'Smyrna', 'Syria'],\n  English_Channel: ['Irish_Sea', 'Mid_Atlantic_Ocean', 'North_Sea', 'Belgium', 'Brest', 'London', 'Picardy', 'Wales'],\n  Gulf_of_Lyon: ['Tyrrhenian_Sea', 'Western_Mediterranean', 'Marseilles', 'Piedmont', 'Spain__sc', 'Tuscany'],\n  Gulf_of_Bothnia: ['Baltic_Sea', 'Finland', 'Livonia', 'St_Petersburg__sc', 'Sweden'],\n  Helgoland_Bight: ['North_Sea', 'Denmark', 'Holland', 'Kiel'],\n  Ionian_Sea: ['Adriatic_Sea', 'Aegean_Sea', 'Eastern_Mediterranean', 'Tyrrhenian_Sea', 'Albania', 'Apulia', 'Greece', 'Naples', 'Tunis'],\n  Irish_Sea: ['English_Channel', 'Mid_Atlantic_Ocean', 'North_Atlantic_Ocean', 'Liverpool', 'Wales'],\n  Mid_Atlantic_Ocean: ['English_Channel', 'Irish_Sea', 'North_Atlantic_Ocean', 'Western_Mediterranean', 'Brest', 'Gascony', 'North_Africa', 'Portugal', 'Spain__nc', 'Spain__sc'],\n  North_Atlantic_Ocean: ['Irish_Sea', 'Mid_Atlantic_Ocean', 'Norwegian_Sea', 'Clyde', 'Liverpool'],\n  North_Sea: ['English_Channel', 'Helgoland_Bight', 'Norwegian_Sea', 'Skagerrak', 'Belgium', 'Denmark', 'Edinburgh', 'Holland', 'London', 'Norway', 'Yorkshire'],\n  Norwegian_Sea: ['Barents_Sea', 'North_Atlantic_Ocean', 'North_Sea', 'Clyde', 'Edinburgh', 'Norway'],\n  Skagerrak: ['Baltic_Sea', 'North_Sea', 'Denmark', 'Norway', 'Sweden'],\n  Tyrrhenian_Sea: ['Gulf_of_Lyon', 'Ionian_Sea', 'Naples', 'Rome', 'Tunis', 'Tuscany', 'Western_Mediterranean'],\n  Western_Mediterranean: ['Gulf_of_Lyon', 'Mid_Atlantic_Ocean', 'North_Africa', 'Spain__sc', 'Tunis', 'Tyrrhenian_Sea'],\n  Switzerland: [],\n  Ireland: [],\n  Corsica: [],\n  Sardinia: [],\n  Mallorca: [],\n  Sicily: [],\n  Crete: [],\n  Albania: ['Adriatic_Sea', 'Ionian_Sea', 'Greece', 'Serbia', 'Trieste'],\n  Ankara: ['Black_Sea', 'Armenia', 'Constantinople', 'Smyrna'],\n  Apulia: ['Adriatic_Sea', 'Ionian_Sea', 'Naples', 'Rome', 'Venice'],\n  Armenia: ['Black_Sea', 'Ankara', 'Sevastopol', 'Smyrna', 'Syria'],\n  Belgium: ['English_Channel', 'North_Sea', 'Burgundy', 'Holland', 'Picardy', 'Ruhr'],\n  Berlin: ['Baltic_Sea', 'Kiel', 'Munich', 'Prussia', 'Silesia'],\n  Bohemia: ['Galicia', 'Munich', 'Silesia', 'Tyrolia', 'Vienna'],\n  Brest: ['English_Channel', 'Mid_Atlantic_Ocean', 'Gascony', 'Paris', 'Picardy'],\n  Budapest: ['Galicia', 'Rumania', 'Serbia', 'Trieste', 'Vienna'],\n  Bulgaria__sc: ['Aegean_Sea', 'Constantinople', 'Greece', 'Serbia'],\n  Burgundy: ['Belgium', 'Gascony', 'Marseilles', 'Munich', 'Paris', 'Picardy', 'Ruhr'],\n  Clyde: ['North_Atlantic_Ocean', 'Norwegian_Sea', 'Edinburgh', 'Liverpool'],\n  Constantinople: ['Aegean_Sea', 'Black_Sea', 'Ankara', 'Bulgaria__sc', 'Smyrna'],\n  Denmark: ['Baltic_Sea', 'Helgoland_Bight', 'North_Sea', 'Skagerrak', 'Kiel', 'Sweden'],\n  Edinburgh: ['North_Sea', 'Norwegian_Sea', 'Clyde', 'Liverpool', 'Yorkshire'],\n  Finland: ['Gulf_of_Bothnia', 'Norway', 'St_Petersburg__nc', 'St_Petersburg__sc', 'Sweden'],\n  Galicia: ['Bohemia', 'Budapest', 'Rumania', 'Silesia', 'Ukraine', 'Vienna', 'Warsaw'],\n  Gascony: ['Mid_Atlantic_Ocean', 'Brest', 'Burgundy', 'Marseilles', 'Paris', 'Spain__nc', 'Spain__sc'],\n  Greece: ['Aegean_Sea', 'Ionian_Sea', 'Albania', 'Bulgaria__sc', 'Serbia'],\n  Holland: ['Helgoland_Bight', 'North_Sea', 'Belgium', 'Kiel', 'Ruhr'],\n  Kiel: ['Baltic_Sea', 'Helgoland_Bight', 'Berlin', 'Denmark', 'Holland', 'Munich', 'Ruhr'],\n  Liverpool: ['Irish_Sea', 'North_Atlantic_Ocean', 'Clyde', 'Edinburgh', 'Wales', 'Yorkshire'],\n  Livonia: ['Baltic_Sea', 'Gulf_of_Bothnia', 'Moscow', 'Prussia', 'St_Petersburg__sc', 'Warsaw'],\n  London: ['English_Channel', 'North_Sea', 'Wales', 'Yorkshire'],\n  Marseilles: ['Gulf_of_Lyon', 'Burgundy', 'Gascony', 'Piedmont', 'Spain__sc'],\n  Moscow: ['Livonia', 'Sevastopol', 'St_Petersburg__nc', 'St_Petersburg__sc', 'Ukraine', 'Warsaw'],\n  Munich: ['Berlin', 'Bohemia', 'Burgundy', 'Kiel', 'Ruhr', 'Silesia', 'Tyrolia'],\n  Naples: ['Ionian_Sea', 'Tyrrhenian_Sea', 'Apulia', 'Rome'],\n  North_Africa: ['Mid_Atlantic_Ocean', 'Western_Mediterranean', 'Tunis'],\n  Norway: ['Barents_Sea', 'North_Sea', 'Norwegian_Sea', 'Skagerrak', 'Finland', 'Sweden'],\n  Paris: ['Brest', 'Burgundy', 'Gascony', 'Picardy'],\n  Picardy: ['English_Channel', 'Belgium', 'Brest', 'Burgundy', 'Paris'],\n  Piedmont: ['Gulf_of_Lyon', 'Marseilles', 'Tuscany', 'Tyrolia', 'Venice'],\n  Portugal: ['Mid_Atlantic_Ocean', 'Spain__nc', 'Spain__sc'],\n  Prussia: ['Baltic_Sea', 'Berlin', 'Livonia', 'Silesia', 'Warsaw'],\n  Rome: ['Tyrrhenian_Sea', 'Apulia', 'Naples', 'Tuscany', 'Venice'],\n  Ruhr: ['Belgium', 'Burgundy', 'Holland', 'Kiel', 'Munich'],\n  Rumania: ['Black_Sea', 'Budapest', 'Galicia', 'Serbia', 'Sevastopol', 'Ukraine'],\n  Serbia: ['Albania', 'Budapest', 'Bulgaria__sc', 'Greece', 'Rumania', 'Trieste'],\n  Sevastopol: ['Black_Sea', 'Armenia', 'Moscow', 'Rumania', 'Ukraine'],\n  Silesia: ['Berlin', 'Bohemia', 'Galicia', 'Munich', 'Prussia', 'Warsaw'],\n  Smyrna: ['Aegean_Sea', 'Eastern_Mediterranean', 'Ankara', 'Armenia', 'Constantinople', 'Syria'],\n  Spain__nc: ['Mid_Atlantic_Ocean', 'Gascony', 'Portugal', 'Spain__sc'],\n  Spain__sc: ['Gulf_of_Lyon', 'Mid_Atlantic_Ocean', 'Western_Mediterranean', 'Gascony', 'Marseilles', 'Portugal', 'Spain__nc'],\n  St_Petersburg__nc: ['Barents_Sea', 'Finland', 'Moscow', 'St_Petersburg__sc'],\n  St_Petersburg__sc: ['Gulf_of_Bothnia', 'Finland', 'Livonia', 'Moscow', 'St_Petersburg__nc'],\n  Sweden: ['Baltic_Sea', 'Gulf_of_Bothnia', 'Skagerrak', 'Denmark', 'Finland', 'Norway'],\n  Syria: ['Eastern_Mediterranean', 'Armenia', 'Smyrna'],\n  Trieste: ['Adriatic_Sea', 'Albania', 'Budapest', 'Serbia', 'Tyrolia', 'Venice', 'Vienna'],\n  Tunis: ['Ionian_Sea', 'Tyrrhenian_Sea', 'Western_Mediterranean', 'North_Africa'],\n  Tuscany: ['Gulf_of_Lyon', 'Tyrrhenian_Sea', 'Piedmont', 'Rome', 'Venice'],\n  Tyrolia: ['Bohemia', 'Munich', 'Piedmont', 'Trieste', 'Venice', 'Vienna'],\n  Ukraine: ['Galicia', 'Moscow', 'Rumania', 'Sevastopol', 'Warsaw'],\n  Venice: ['Adriatic_Sea', 'Apulia', 'Piedmont', 'Rome', 'Trieste', 'Tuscany', 'Tyrolia'],\n  Vienna: ['Bohemia', 'Budapest', 'Galicia', 'Trieste', 'Tyrolia'],\n  Wales: ['English_Channel', 'Irish_Sea', 'Liverpool', 'London', 'Yorkshire'],\n  Warsaw: ['Galicia', 'Livonia', 'Moscow', 'Prussia', 'Silesia', 'Ukraine'],\n  Yorkshire: ['North_Sea', 'Edinburgh', 'Liverpool', 'London', 'Wales'],\n}\n\nexport default adjacentByLandTilesData\n","const adjacentBySeaTilesData: {[key: string]: string[]} = {\n  Adriatic_Sea: ['Ionian_Sea', 'Albania', 'Apulia', 'Trieste', 'Venice'],\n  Aegean_Sea: ['Eastern_Mediterranean', 'Ionian_Sea', 'Bulgaria__sc', 'Constantinople', 'Greece', 'Smyrna'],\n  Baltic_Sea: ['Gulf_of_Bothnia', 'Skagerrak', 'Berlin', 'Denmark', 'Kiel', 'Livonia', 'Prussia', 'Sweden'],\n  Barents_Sea: ['Norwegian_Sea', 'Norway', 'St_Petersburg__nc'],\n  Black_Sea: ['Ankara', 'Armenia', 'Constantinople', 'Rumania', 'Sevastopol'],\n  Eastern_Mediterranean: ['Aegean_Sea', 'Ionian_Sea', 'Smyrna', 'Syria'],\n  English_Channel: ['Irish_Sea', 'Mid_Atlantic_Ocean', 'North_Sea', 'Belgium', 'Brest', 'London', 'Picardy', 'Wales'],\n  Gulf_of_Lyon: ['Tyrrhenian_Sea', 'Western_Mediterranean', 'Marseilles', 'Piedmont', 'Spain__sc', 'Tuscany'],\n  Gulf_of_Bothnia: ['Baltic_Sea', 'Finland', 'Livonia', 'St_Petersburg__sc', 'Sweden'],\n  Helgoland_Bight: ['North_Sea', 'Denmark', 'Holland', 'Kiel'],\n  Ionian_Sea: ['Adriatic_Sea', 'Aegean_Sea', 'Eastern_Mediterranean', 'Tyrrhenian_Sea', 'Albania', 'Apulia', 'Greece', 'Naples', 'Tunis'],\n  Irish_Sea: ['English_Channel', 'Mid_Atlantic_Ocean', 'North_Atlantic_Ocean', 'Liverpool', 'Wales'],\n  Mid_Atlantic_Ocean: ['English_Channel', 'Irish_Sea', 'North_Atlantic_Ocean', 'Western_Mediterranean', 'Brest', 'Gascony', 'North_Africa', 'Portugal', 'Spain__nc', 'Spain__sc'],\n  North_Atlantic_Ocean: ['Irish_Sea', 'Mid_Atlantic_Ocean', 'Norwegian_Sea', 'Clyde', 'Liverpool'],\n  North_Sea: ['English_Channel', 'Helgoland_Bight', 'Norwegian_Sea', 'Skagerrak', 'Belgium', 'Denmark', 'Edinburgh', 'Holland', 'London', 'Norway', 'Yorkshire'],\n  Norwegian_Sea: ['Barents_Sea', 'North_Atlantic_Ocean', 'North_Sea', 'Clyde', 'Edinburgh', 'Norway'],\n  Skagerrak: ['Baltic_Sea', 'North_Sea', 'Denmark', 'Norway', 'Sweden'],\n  Tyrrhenian_Sea: ['Gulf_of_Lyon', 'Ionian_Sea', 'Naples', 'Rome', 'Tunis', 'Tuscany', 'Western_Mediterranean'],\n  Western_Mediterranean: ['Gulf_of_Lyon', 'Mid_Atlantic_Ocean', 'North_Africa', 'Spain__sc', 'Tunis', 'Tyrrhenian_Sea'],\n  Switzerland: [],\n  Ireland: [],\n  Corsica: [],\n  Sardinia: [],\n  Mallorca: [],\n  Sicily: [],\n  Crete: [],\n  Albania: ['Adriatic_Sea', 'Ionian_Sea', 'Greece', 'Trieste'],\n  Ankara: ['Black_Sea', 'Armenia', 'Constantinople'],\n  Apulia: ['Adriatic_Sea', 'Ionian_Sea', 'Naples', 'Venice'],\n  Armenia: ['Black_Sea', 'Ankara', 'Sevastopol', 'Smyrna'],\n  Belgium: ['English_Channel', 'North_Sea', 'Holland', 'Picardy'],\n  Berlin: ['Baltic_Sea', 'Kiel', 'Prussia'],\n  Bohemia: [],\n  Brest: ['English_Channel', 'Mid_Atlantic_Ocean', 'Gascony', 'Picardy'],\n  Budapest: [],\n  Bulgaria__sc: ['Aegean_Sea', 'Constantinople', 'Greece'],\n  Burgundy: [],\n  Clyde: ['North_Atlantic_Ocean', 'Norwegian_Sea', 'Edinburgh', 'Liverpool'],\n  Constantinople: ['Aegean_Sea', 'Black_Sea', 'Ankara', 'Bulgaria__sc', 'Smyrna'],\n  Denmark: ['Baltic_Sea', 'Helgoland_Bight', 'North_Sea', 'Skagerrak', 'Kiel', 'Sweden'],\n  Edinburgh: ['North_Sea', 'Norwegian_Sea', 'Clyde', 'Yorkshire'],\n  Finland: ['Gulf_of_Bothnia', 'St_Petersburg__sc', 'Sweden'],\n  Galicia: [],\n  Gascony: ['Mid_Atlantic_Ocean', 'Brest', 'Spain__nc'],\n  Greece: ['Aegean_Sea', 'Ionian_Sea', 'Albania', 'Bulgaria__sc'],\n  Holland: ['Helgoland_Bight', 'North_Sea', 'Belgium', 'Kiel', 'Ruhr'],\n  Kiel: ['Baltic_Sea', 'Helgoland_Bight', 'Berlin', 'Denmark', 'Holland', 'Ruhr'],\n  Liverpool: ['Irish_Sea', 'North_Atlantic_Ocean', 'Clyde', 'Wales'],\n  Livonia: ['Baltic_Sea', 'Gulf_of_Bothnia', 'Prussia', 'St_Petersburg__sc'],\n  London: ['English_Channel', 'North_Sea', 'Wales', 'Yorkshire'],\n  Marseilles: ['Gulf_of_Lyon', 'Gascony', 'Piedmont', 'Spain__sc'],\n  Moscow: [],\n  Munich: [],\n  Naples: ['Ionian_Sea', 'Tyrrhenian_Sea', 'Apulia', 'Rome'],\n  North_Africa: ['Mid_Atlantic_Ocean', 'Western_Mediterranean', 'Tunis'],\n  Norway: ['Barents_Sea', 'North_Sea', 'Norwegian_Sea', 'Skagerrak', 'Finland', 'Sweden', 'St_Petersburg__nc'],\n  Paris: [],\n  Picardy: ['English_Channel', 'Belgium', 'Brest', 'Paris'],\n  Piedmont: ['Gulf_of_Lyon', 'Marseilles', 'Tuscany', 'Venice'],\n  Portugal: ['Mid_Atlantic_Ocean', 'Spain__nc', 'Spain__sc'],\n  Prussia: ['Baltic_Sea', 'Berlin', 'Livonia'],\n  Rome: ['Tyrrhenian_Sea', 'Apulia', 'Naples', 'Tuscany', 'Venice'],\n  Ruhr: ['Belgium', 'Holland', 'Kiel'],\n  Rumania: ['Black_Sea', 'Sevastopol'],\n  Serbia: [],\n  Sevastopol: ['Black_Sea', 'Armenia', 'Rumania'],\n  Silesia: [],\n  Smyrna: ['Aegean_Sea', 'Eastern_Mediterranean', 'Ankara', 'Armenia', 'Constantinople', 'Syria'],\n  Spain__nc: ['Mid_Atlantic_Ocean', 'Gascony', 'Portugal'],\n  Spain__sc: ['Gulf_of_Lyon', 'Mid_Atlantic_Ocean', 'Western_Mediterranean', 'Gascony', 'Marseilles', 'Portugal'],\n  St_Petersburg__nc: ['Barents_Sea', 'Norway'],\n  St_Petersburg__sc: ['Gulf_of_Bothnia', 'Finland', 'Livonia'],\n  Sweden: ['Baltic_Sea', 'Gulf_of_Bothnia', 'Skagerrak', 'Denmark', 'Finland', 'Norway'],\n  Syria: ['Eastern_Mediterranean', 'Armenia', 'Smyrna'],\n  Trieste: ['Adriatic_Sea', 'Albania', 'Venice'],\n  Tunis: ['Ionian_Sea', 'Tyrrhenian_Sea', 'Western_Mediterranean', 'North_Africa'],\n  Tuscany: ['Gulf_of_Lyon', 'Tyrrhenian_Sea', 'Piedmont', 'Rome', 'Venice'],\n  Tyrolia: [],\n  Ukraine: [],\n  Venice: ['Adriatic_Sea', 'Apulia', 'Piedmont', 'Rome', 'Trieste', 'Tuscany'],\n  Vienna: [],\n  Wales: ['English_Channel', 'Irish_Sea', 'Liverpool', 'London', 'Yorkshire'],\n  Warsaw: [],\n  Yorkshire: ['North_Sea', 'Edinburgh', 'Liverpool', 'London', 'Wales'],\n}\n\nexport default adjacentBySeaTilesData\n","import { IGameTurnJSON, IMove } from '@shared/types'\nimport areAdjacent from './areAdjacent'\n\nconst phases: {[key: string]: string[]} = {\n  movement: ['Move', 'support', 'hold'],\n  retreat: ['retreat'],\n  build: ['build', 'disband'],\n}\n\nconst findPlayer = (turn: IGameTurnJSON) => (playerID: string) => {\n  return turn.players.find((player) => player.playerID === playerID)\n}\n\nconst findUnit = (playerState: IGameTurnJSON['players'][0]) => (from: string) => {\n  return playerState.ownedUnits.find((unit) => unit.location === from)\n}\n\nconst validateMove = (turn: IGameTurnJSON, move: IMove, playerID: string): boolean => {\n  // Find player in game turn\n\n  const player = findPlayer(turn)(playerID)\n  if (!player) {\n    console.log('Player not found')\n    return false\n  }\n\n  // Check if player has unit at this location\n  const unit = findUnit(player)(move.from)\n  if (!unit) {\n    console.log('Unit not found')\n    return false\n  }\n\n  // Check if the movement type is appropriate for the phase\n  const possibleMoves = phases[turn.info.phase] || []\n  if (!possibleMoves.includes(move.moveType)) {\n    console.log('not included', move.moveType)\n    console.log(`turn.info.phase: ${turn.info.phase}`)\n    return false\n  }\n\n  const isAdjacentToDestination = areAdjacent(move.unit)(move.to)\n\n  switch (move.moveType) {\n    case 'Move':\n      // Check that destination is adjacent\n      if (!isAdjacentToDestination(move.from)) {\n        console.log('is not adjacent')\n        return false\n      }\n\n      // TODO Check that unit can move there (land/sea)\n\n      return true\n\n    case 'support':\n      // Check that destination is adjacent\n      if (!isAdjacentToDestination(move.from)) return false\n      // TODO Check that unitType can support in that way\n\n      // Check that support from is adjacent to destination\n      if (!isAdjacentToDestination(move.supportFrom)) return false\n      return true\n\n    case 'retreat':\n      // Check that destination is adjacent\n      if (!isAdjacentToDestination(move.from)) return false\n\n      // TODO Check that destination is empty\n\n      return true\n\n    case 'hold': return true\n    case 'disband': return true\n  }\n  return false\n}\n\nexport default validateMove\n","import adjacentByLandTilesData from '@shared/resources/landTilesData'\nimport adjacentBySeaTilesData from '@shared/resources/seaTilesData'\n\nexport default (unitType: 'Army' | 'Fleet') => (territoryA: string) => (territoryB: string) => {\n  const data = unitType === 'Army' ? adjacentByLandTilesData : adjacentBySeaTilesData\n  console.log('inside areAdjacent...')\n  console.log(unitType, data)\n  return data[territoryA].includes(territoryB)\n}","import { IGameTurnJSON, IUnit } from '@shared/types'\nimport BoardPainter from './boardPainter/boardPainter'\nimport Order from './order'\n\nimport validateMove from '@shared/helpers/validateMove'\nimport neighboursTo from '@shared/resources/landTilesData'\n\nexport default new class Game {\n  orders: Order[] = []\n  private boardPainter: BoardPainter\n  private mapSvg: HTMLElement\n  private armySvg: HTMLElement\n  private fleetSvg: HTMLElement\n  private tileSelected: string\n  private units: {[key: string]: IUnit[]} = {} // units type?\n  private playerEmpire: string\n  private turn: IGameTurnJSON\n  private playerID: string\n\n  run = () => {}\n\n  // ? Player ID or empire? Should the engine be id agnostic?\n  setup = (svgs: {map: HTMLElement, army: HTMLElement, fleet: HTMLElement}, turn: IGameTurnJSON, playerID: string) => {\n    this.mapSvg = svgs.map\n    this.armySvg = svgs.army\n    this.fleetSvg = svgs.fleet\n    this.turn = turn\n    this.playerID = playerID\n    this.playerEmpire = this.turn.players.find((p) => p.playerID === playerID).empire\n    console.log('playing as ', this.playerEmpire)\n\n    this.turn.players.forEach((player) => this.units[player.empire] = player.ownedUnits)\n    this.boardPainter = new BoardPainter(this.mapSvg, turn, this.armySvg, this.fleetSvg)\n    this.orders = this.turn.players.find((player) => player.playerID === playerID).moves.map(Order.from)\n    this.boardPainter.redraw()\n    // this.playerCountry = this.turn.players[playerID].empire\n\n    const tiles = Array.from(this.mapSvg.getElementsByClassName('seaTile') as HTMLCollectionOf<HTMLElement>)\n    tiles.push(...Array.from(this.mapSvg.getElementsByClassName('landTile') as HTMLCollectionOf<HTMLElement>))\n\n    tiles.forEach((tile) => {\n      tile.addEventListener('click', (evt) => { this.onClick(tile.getAttribute('title')) })\n    })\n    const units = Array.from(this.mapSvg.getElementsByClassName('unit') as HTMLCollectionOf<HTMLElement>)\n    units.forEach((unit) => {\n      unit.addEventListener('click', (evt) => this.onClick(unit.classList[2]))\n    })\n  }\n\n  clearMap = () => {\n    if (!this.mapSvg) return\n    const units = Array.from(this.mapSvg.getElementsByClassName('unit'))\n    units.forEach(unit => unit.remove())\n    const orders = Array.from(this.mapSvg.getElementsByClassName('order'))\n    orders.forEach(order => order.remove())\n  }\n\n  private onClick = (territory: string) => {\n    if (this.tileSelected\n      && neighboursTo[this.tileSelected].includes(territory)\n      ) {\n        this.finishOrder(territory)\n        console.log('finishingOrder')\n      } else {\n      console.log('startingOrder')\n      this.startOrder(territory)\n    }\n  }\n\n  private finishOrder = (territory: string) => {\n    console.log(this.units[this.playerEmpire], this.tileSelected)\n    const unit = this.units[this.playerEmpire].find(u => u.location === this.tileSelected)\n    this.orders = this.orders.filter((order) => {\n      return order.from !== this.tileSelected\n    })\n\n    console.log(this.turn)\n\n    // ! MOVE TYPE is currently hard coded!\n    const newOrder = new Order(unit.unitType, this.tileSelected, territory, 'Move')\n\n    console.log(validateMove(this.turn, newOrder.toObject(), this.playerID))\n\n    if (validateMove(this.turn, newOrder.toObject(), this.playerID)) {\n      this.orders.push(newOrder)\n      this.boardPainter.redrawOrders(this.orders)\n      this.tileSelected = null\n    }\n  }\n\n  private startOrder = (territory: string) => {\n    if (this.playerHasUnitAt(territory)) {\n      this.tileSelected = territory\n    }\n  }\n\n  private playerHasUnitAt = (territory: string) => {\n    const unit = this.units[this.playerEmpire].find((unit: any) => {\n      return unit.location === territory\n    })\n    return !!unit\n  }\n} ()\n","import to from 'await-to-js'\nimport Axios from 'axios'\nimport range from 'lodash.range'\nimport shuffle from 'lodash.shuffle'\n\nconst setupNewFullGame = async () => {\n  console.log('Creating a new game...')\n  const [err, res] = await to(Axios.post('/api/game'))\n  if (err) return err\n\n  const game = res.data\n  const numbers = shuffle(range(1, 25)).map((x) => x.toString().padStart(2, '0'))\n  await Promise.all([\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5cd85783c26513e12f695ce2', colour: 'e' + numbers.pop()}),\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5cd8988c463115ffdbc672b3', colour: 'e' + numbers.pop()}),\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5ce28c5b63ca37c488983f92', colour: 'e' + numbers.pop()}),\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5ce28c7563ca37c488983f93', colour: 'e' + numbers.pop()}),\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5ce28c9663ca37c488983f94', colour: 'e' + numbers.pop()}),\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5ce28cbd63ca37c488983f95', colour: 'e' + numbers.pop()}),\n    Axios.post('/api/game/join', {gameID: game.id, playerID: '5ce28cd263ca37c488983f96', colour: 'e' + numbers.pop()}),\n  ])\n  await Axios.post(`/api/game/${game.id}/start`)\n  return await Axios.get(`/api/game/${game.id}`)\n}\n\nexport default setupNewFullGame\n","import to from 'await-to-js'\nimport Axios from 'axios'\nimport {Component, h} from 'preact'\n\nimport Board from '@client/app/components/board/board';\nimport boardData from '@client/assets/countryData'\nimport game from '@client/engine/game'\nimport { IGameJSON , IGameTurnJSON} from '@shared/types'\nimport setupNewFullGame from '../../../devTools/setupGame'\n\nimport './game.scss'\n\nexport interface IGameProps {\n  userID: string,\n  logOut: () => void,\n}\n\ninterface IGameState {\n  game?: IGameJSON,\n  turn?: IGameTurnJSON,\n  gameIsRunning: boolean,\n  activeTerritory: string\n}\n\nexport default class Game extends Component <IGameProps, IGameState> {\n  state: IGameState = {\n    gameIsRunning: false,\n    activeTerritory: null,\n  }\n\n  render(props: IGameProps, state: IGameState) {\n    return (\n      <div className='page'>\n        <div className='buttonsContainer' >\n          <button onClick={this.setupGame}>Set Up Game</button>\n          <button onClick={this.getLatestGame}>Load Game</button>\n          <button onClick={this.submitOrders}>Submit Orders</button>\n          <button onClick={this.props.logOut}>Log out</button>\n          <button onClick={this.nextTurn}>Next Turn</button><br/>\n        </div><br/>\n        <div>\n          <object id='army' type='image/svg+xml' data='assets/svg/001-tank-1.svg' width='0'></object>\n          <object id='fleet' type='image/svg+xml' data='assets/svg/002-cruiser.svg' width='0'></object>\n          {/* <object id='map' type='image/svg+xml' data='assets/Diplomacy.svg' class='overlay'>Diplomacy map should be here</object> */}\n          {/* ? Active territory here or in board? */}\n          {/* Can extend in future to have a \"showText\" boolean for board previews? */}\n          <Board boardData={boardData} activeTerritory={state.activeTerritory} onTileSelect={this.onTileSelect}/>\n        </div>\n      </div>\n    )\n  }\n\n  onTileSelect = (territoryName: string) => {\n    return () => {\n      this.setState({activeTerritory: territoryName})\n    }\n  }\n\n  // ? Move axios requests into a helper service?\n  private setupGame = async () => {\n    const {data: game} = await setupNewFullGame()\n    const {data: turn} = await Axios.get(`api/turn/${game.currentTurn}`)\n    this.setState({game, turn}, () => {\n      this.runGame()\n    })\n  }\n\n  private getLatestGame = async () => {\n    const {data: game} = await Axios.get('/api/game/latest')\n    const {data: turn} = await Axios.get(`/api/turn/${game.currentTurn}`)\n    this.setState({game, turn}, this.refresh)\n  }\n\n  private refresh = () => {\n    game.clearMap()\n    this.runGame()\n  }\n\n  private submitOrders = async () => {\n    await Axios.patch(`/api/turn/${this.state.game.currentTurn}`, {\n      moves: game.orders.map((order) => order.toObject()),\n      turnID: this.state.game.currentTurn,\n    })\n    console.log('Orders submitted!')\n  }\n\n  private nextTurn = async () => {\n    const [err, res] = await to(Axios.post(`/api/game/${this.state.game._id}/next`))\n    if (err) console.log(err)\n    if (res) this.getLatestGame()\n  }\n\n  private getSvg = (label: string) => {\n    const svgObject = document.getElementById(label) as HTMLObjectElement\n    return svgObject.contentDocument.getElementById(`${label}Svg`)\n  }\n\n  private runGame() {\n    const [army, fleet] = ['army', 'fleet'].map(this.getSvg)\n    const map = document.getElementById('gameBoard') as HTMLObjectElement\n    game.setup({map, army, fleet}, this.state.turn, this.props.userID)\n    game.run()\n  }\n}\n"],"sourceRoot":""}