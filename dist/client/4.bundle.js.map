{"version":3,"sources":["webpack:///./src/client/app/components/formBox/formBox.tsx","webpack:///./src/client/app/components/formBox/formBox.scss?1822","webpack:///./src/client/app/components/formBox/formBox.scss","webpack:///./src/client/app/pages/register/register.tsx"],"names":["render","className","this","props","children","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","state","formFields","handleSubmit","evt","preventDefault","post","err","res","console","log","handleChange","field","target","value","setState","action","method","onSubmit","type","name","username","onChange","email","password"],"mappings":"gaAIA,2B,+CAQA,OARqC,OACnC,YAAAA,OAAA,WACE,OACE,WADK,CACL,OAAKC,UAAU,WACZC,KAAKC,MAAMC,WAIpB,EARA,CAAqC,K,0BCJrC,IAAIC,EAAM,EAAQ,GACFC,EAAU,EAAQ,IAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAIhBC,GAFSP,EAAIC,EAASK,GAEXL,EAAQO,OAASP,EAAQO,OAAS,IAIjDJ,EAAOK,QAAUF,G,oBClBjBE,EADkC,EAAQ,EAChCC,EAA4B,IAC9BC,KAAK,CAACP,EAAOC,EAAI,oFAEzBI,EAAQE,KAAK,CAACP,EAAOC,EAAI,4bAA6b,KAEtdD,EAAOK,QAAUA,G,4uDCcjB,yE,OACE,EAAAG,MAAwB,CACtBC,WAAY,IA8CN,EAAAC,aAAe,SAAOC,GAAU,qC,4DAEnB,OADnBA,EAAIC,iBACe,GAAM,YAAG,IAAMC,KAAK,qBAAsBpB,KAAKe,MAAMC,c,cAAlE,EAAa,SAAZK,EAAG,KAAEC,EAAG,KACXD,GAAKE,QAAQC,IAAIH,GACjBC,GAAK,YAAM,KAAK,G,YAGd,EAAAG,aAAe,SAACC,GACtB,OAAO,SAACR,GACN,IAAMF,EAAa,IAAM,EAAKD,MAAMC,YACpCA,EAAWU,GAAUR,EAAIS,OAA4BC,MACrD,EAAKC,SAAS,CAACb,WAAU,M,EAG/B,OA9DsC,OAKpC,YAAAlB,OAAA,SAAOG,EAAuBc,GAC5B,OACE,WADK,CACL,OAAKhB,UAAU,QACb,YAAC,IAAO,KACN,oBAAM+B,OAAO,iBAAiBC,OAAO,OAAQC,SAAUhC,KAAKiB,c,YACjD,uBACT,qBACEgB,KAAK,OACLC,KAAK,WACLN,MAAOb,EAAMC,WAAWmB,SACxBC,SAAUpC,KAAKyB,aAAa,cAC1B,uB,QAEC,uBACL,qBACEQ,KAAK,OACLC,KAAK,OACLN,MAAOb,EAAMC,WAAWkB,KACxBE,SAAUpC,KAAKyB,aAAa,UAC1B,uB,SAEE,uBACN,qBACEQ,KAAK,OACLC,KAAK,QACLN,MAAOb,EAAMC,WAAWqB,MACxBD,SAAUpC,KAAKyB,aAAa,WAC1B,uB,YAEK,uBACT,qBACEQ,KAAK,WACLC,KAAK,WACLN,MAAOb,EAAMC,WAAWsB,SACxBF,SAAUpC,KAAKyB,aAAa,cAC1B,uBACJ,qBAAOQ,KAAK,SAASL,MAAM,eAqBvC,EA9DA,CAAsC,K","file":"4.bundle.js","sourcesContent":["import { Component, h } from 'preact'\n\nimport './formBox.scss'\n\nexport default class FormBox extends Component {\n  render() {\n    return (\n      <div className=\"formBox\">\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./formBox.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Notable|Arvo&display=swap);\"]);\n// Module\nexports.push([module.id, \".formBox{font-family:'Notable', 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;text-align:center;font-size:16px;border-radius:20px;padding:24px;background-color:#4972AB;color:#EFEFEF;letter-spacing:2px;box-shadow:5px 5px 0px #102542;margin:auto}.formBox input[type=submit]{width:50%;font-size:12px;font-family:'Notable', 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;letter-spacing:1px}a{color:#EFEFEF}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import to from 'await-to-js'\nimport Axios from 'axios'\nimport clone from 'lodash.clone'\nimport {Component, h} from 'preact'\nimport { route } from 'preact-router'\n\nimport FormBox from '../../components/formBox/formBox';\n\nexport interface IRegisterProps {\n\n}\n\ninterface IRegisterState {\n  formFields?: {\n    username?: string,\n    name?: string,\n    email?: string,\n    password?: string,\n  }\n}\n\nexport default class Register extends Component <IRegisterProps, IRegisterState> {\n  state: IRegisterState = {\n    formFields: {},\n  }\n\n  render(props: IRegisterProps, state: IRegisterState) {\n    return (\n      <div className=\"page\">\n        <FormBox>\n          <form action='/user/register' method='post'  onSubmit={this.handleSubmit}>\n            Username:<br/>\n            <input\n              type='text'\n              name='username'\n              value={state.formFields.username}\n              onChange={this.handleChange('username')}\n              /><br/>\n\n            Name:<br/>\n            <input\n              type='text'\n              name='name'\n              value={state.formFields.name}\n              onChange={this.handleChange('name')}\n              /><br/>\n\n            Email:<br/>\n            <input\n              type='text'\n              name='email'\n              value={state.formFields.email}\n              onChange={this.handleChange('email')}\n              /><br/>\n\n            Password:<br/>\n            <input\n              type='password'\n              name='password'\n              value={state.formFields.password}\n              onChange={this.handleChange('password')}\n              /><br/>\n            <input type='submit' value='Submit' />\n          </form>\n        </FormBox>\n      </div>\n    )\n  }\n\n  private handleSubmit = async (evt: Event) => {\n    evt.preventDefault()\n    const [err, res] = await to(Axios.post('/api/user/register', this.state.formFields))\n    if (err) console.log(err)\n    if (res) route('/', true)\n  }\n\n  private handleChange = (field: 'username' | 'name' | 'email' | 'password') => {\n    return (evt: Event) => {\n      const formFields = clone(this.state.formFields)\n      formFields[field] = (evt.target as HTMLInputElement).value\n      this.setState({formFields})\n    }\n  }\n}\n"],"sourceRoot":""}