{"version":3,"sources":["webpack:///./src/client/app/components/formBox/formBox.tsx","webpack:///./src/client/app/components/formBox/styled.ts","webpack:///./src/client/app/pages/register/register.tsx"],"names":[],"mappings":"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","file":"4.bundle.js","sourcesContent":["import { h } from 'preact'\n\nimport * as Styled from './styled'\n\nconst FormBox: React.FC = ({children}) => (\n  <Styled.FormBox>\n    {children}\n  </Styled.FormBox>\n)\n\nexport default FormBox","import styled from 'styled-components'\nimport Colours from '../../variables/colors'\n\nexport const FormBox = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Notable|Arvo&display=swap');\n\n  font-family: 'Notable', 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  text-align: center;\n  font-size: 16px;\n  border-radius: 20px;\n  padding: 24px;\n  background-color: ${Colours.highlight};\n  color: ${Colours.offwhite};\n  letter-spacing:2px;\n  box-shadow: 5px 5px 0px ${Colours.shadow};\n\n  input[type=submit] {\n    width: 50%;\n    font-size: 12px;\n    font-family: 'Notable', 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    letter-spacing: 1px;\n  }\n\n  a {\n    color: ${Colours.offwhite};\n  }\n`\n","import to from 'await-to-js'\nimport Axios from 'axios'\nimport clone from 'lodash.clone'\nimport {Component, h, Fragment} from 'preact'\nimport { route } from 'preact-router'\n\nimport FormBox from '../../components/formBox/formBox'\n\nexport interface IRegisterProps {\n\n}\n\ninterface IRegisterState {\n  formFields?: {\n    username?: string,\n    name?: string,\n    email?: string,\n    password?: string,\n  }\n}\n\nexport default class Register extends Component <IRegisterProps, IRegisterState> {\n  state: IRegisterState = {\n    formFields: {},\n  }\n\n  render(props: IRegisterProps, state: IRegisterState) {\n    return (\n      <Fragment>\n        <FormBox>\n          <form action='/user/register' method='post'  onSubmit={this.handleSubmit}>\n            Username:<br/>\n            <input\n              type='text'\n              name='username'\n              value={state.formFields.username}\n              onChange={this.handleChange('username')}\n              /><br/>\n\n            Name:<br/>\n            <input\n              type='text'\n              name='name'\n              value={state.formFields.name}\n              onChange={this.handleChange('name')}\n              /><br/>\n\n            Email:<br/>\n            <input\n              type='text'\n              name='email'\n              value={state.formFields.email}\n              onChange={this.handleChange('email')}\n              /><br/>\n\n            Password:<br/>\n            <input\n              type='password'\n              name='password'\n              value={state.formFields.password}\n              onChange={this.handleChange('password')}\n              /><br/>\n            <input type='submit' value='Submit' />\n          </form>\n        </FormBox>\n      </Fragment>\n    )\n  }\n\n  private handleSubmit = async (evt: Event) => {\n    evt.preventDefault()\n    const [err, res] = await to(Axios.post('/api/user/register', this.state.formFields))\n    if (err) console.log(err)\n    if (res) route('/', true)\n  }\n\n  private handleChange = (field: 'username' | 'name' | 'email' | 'password') => {\n    return (evt: Event) => {\n      const formFields = clone(this.state.formFields)\n      formFields[field] = (evt.target as HTMLInputElement).value\n      this.setState({formFields})\n    }\n  }\n}\n"],"sourceRoot":""}