{"version":3,"sources":["webpack:///./src/client/app/components/formBox/styled.ts","webpack:///./src/client/app/components/formBox/formBox.tsx","webpack:///./src/client/app/pages/register/register.tsx"],"names":["FormBox","div","highlight","offwhite","shadow","children","state","formFields","handleSubmit","evt","preventDefault","post","this","err","res","console","log","handleChange","field","target","value","setState","render","props","action","method","onSubmit","type","name","username","onChange","email","password"],"mappings":"qNAGaA,EAAU,IAAOC,IAAG,04BAQM,eACZ,uDAEe,0OAWb,cAdP,IAAQC,UACnB,IAAQC,SAES,IAAQC,OAWvB,IAAQD,UCfN,IANW,SAAC,G,IAACE,EAAA,EAAAA,SAAc,OACxC,WADwC,CACvC,EAAc,KACZA,K,6uDCeL,yE,OACE,EAAAC,MAAwB,CACtBC,WAAY,IA8CN,EAAAC,aAAe,SAAOC,GAAU,qC,4DAEnB,OADnBA,EAAIC,iBACe,GAAM,YAAG,IAAMC,KAAK,qBAAsBC,KAAKN,MAAMC,c,cAAlE,EAAa,SAAZM,EAAG,KAAEC,EAAG,KACXD,GAAKE,QAAQC,IAAIH,GACjBC,GAAK,YAAM,KAAK,G,YAGd,EAAAG,aAAe,SAACC,GACtB,OAAO,SAACT,GACN,IAAMF,EAAa,IAAM,EAAKD,MAAMC,YACpCA,EAAWW,GAAUT,EAAIU,OAA4BC,MACrD,EAAKC,SAAS,CAACd,WAAU,M,EAG/B,OA9DsC,OAKpC,YAAAe,OAAA,SAAOC,EAAuBjB,GAC5B,OACE,WADK,CACJ,IAAQ,KACP,YAAC,IAAO,KACN,oBAAMkB,OAAO,iBAAiBC,OAAO,OAAQC,SAAUd,KAAKJ,c,YACjD,uBACT,qBACEmB,KAAK,OACLC,KAAK,WACLR,MAAOd,EAAMC,WAAWsB,SACxBC,SAAUlB,KAAKK,aAAa,cAC1B,uB,QAEC,uBACL,qBACEU,KAAK,OACLC,KAAK,OACLR,MAAOd,EAAMC,WAAWqB,KACxBE,SAAUlB,KAAKK,aAAa,UAC1B,uB,SAEE,uBACN,qBACEU,KAAK,OACLC,KAAK,QACLR,MAAOd,EAAMC,WAAWwB,MACxBD,SAAUlB,KAAKK,aAAa,WAC1B,uB,YAEK,uBACT,qBACEU,KAAK,WACLC,KAAK,WACLR,MAAOd,EAAMC,WAAWyB,SACxBF,SAAUlB,KAAKK,aAAa,cAC1B,uBACJ,qBAAOU,KAAK,SAASP,MAAM,eAqBvC,EA9DA,CAAsC,K","file":"4.bundle.js","sourcesContent":["import styled from 'styled-components'\nimport Colours from '../../variables/colors'\n\nexport const FormBox = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Notable|Arvo&display=swap');\n\n  font-family: 'Notable', 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  text-align: center;\n  font-size: 16px;\n  border-radius: 20px;\n  padding: 24px;\n  background-color: ${Colours.highlight};\n  color: ${Colours.offwhite};\n  letter-spacing:2px;\n  box-shadow: 5px 5px 0px ${Colours.shadow};\n  margin: auto;\n\n  input[type=submit] {\n    width: 50%;\n    font-size: 12px;\n    font-family: 'Notable', 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    letter-spacing: 1px;\n  }\n\n  a {\n    color: ${Colours.offwhite};\n  }\n`\n","import { h } from 'preact'\n\nimport * as Styled from './styled'\n\nconst FormBox: React.FC = ({children}) => (\n  <Styled.FormBox>\n    {children}\n  </Styled.FormBox>\n)\n\nexport default FormBox","import to from 'await-to-js'\nimport Axios from 'axios'\nimport clone from 'lodash.clone'\nimport {Component, h, Fragment} from 'preact'\nimport { route } from 'preact-router'\n\nimport FormBox from '../../components/formBox/formBox'\n\nexport interface IRegisterProps {\n\n}\n\ninterface IRegisterState {\n  formFields?: {\n    username?: string,\n    name?: string,\n    email?: string,\n    password?: string,\n  }\n}\n\nexport default class Register extends Component <IRegisterProps, IRegisterState> {\n  state: IRegisterState = {\n    formFields: {},\n  }\n\n  render(props: IRegisterProps, state: IRegisterState) {\n    return (\n      <Fragment>\n        <FormBox>\n          <form action='/user/register' method='post'  onSubmit={this.handleSubmit}>\n            Username:<br/>\n            <input\n              type='text'\n              name='username'\n              value={state.formFields.username}\n              onChange={this.handleChange('username')}\n              /><br/>\n\n            Name:<br/>\n            <input\n              type='text'\n              name='name'\n              value={state.formFields.name}\n              onChange={this.handleChange('name')}\n              /><br/>\n\n            Email:<br/>\n            <input\n              type='text'\n              name='email'\n              value={state.formFields.email}\n              onChange={this.handleChange('email')}\n              /><br/>\n\n            Password:<br/>\n            <input\n              type='password'\n              name='password'\n              value={state.formFields.password}\n              onChange={this.handleChange('password')}\n              /><br/>\n            <input type='submit' value='Submit' />\n          </form>\n        </FormBox>\n      </Fragment>\n    )\n  }\n\n  private handleSubmit = async (evt: Event) => {\n    evt.preventDefault()\n    const [err, res] = await to(Axios.post('/api/user/register', this.state.formFields))\n    if (err) console.log(err)\n    if (res) route('/', true)\n  }\n\n  private handleChange = (field: 'username' | 'name' | 'email' | 'password') => {\n    return (evt: Event) => {\n      const formFields = clone(this.state.formFields)\n      formFields[field] = (evt.target as HTMLInputElement).value\n      this.setState({formFields})\n    }\n  }\n}\n"],"sourceRoot":""}