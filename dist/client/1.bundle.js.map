{"version":3,"sources":["webpack:///./src/client/app/_helpers/checkTag.ts","webpack:///./src/client/app/components/board/neutralPattern/neutralPattern.tsx","webpack:///./src/client/app/components/board/newBoard.tsx","webpack:///./src/client/app/components/board/styled.ts","webpack:///./src/client/app/components/board/supplyStar/styled.ts","webpack:///./src/client/app/components/board/supplyStar/supplyStar.tsx","webpack:///./src/client/app/components/board/territory/styled.ts","webpack:///./src/client/app/components/board/territory/territory.tsx","webpack:///./src/client/app/components/board/unit/army/army.tsx","webpack:///./src/client/app/components/board/unit/fleet/fleet.tsx","webpack:///./src/client/app/components/board/unit/styled.ts","webpack:///./src/client/app/components/board/unit/unit.tsx","webpack:///./src/client/app/components/ordersBox/orderDropdown.tsx","webpack:///./src/client/app/components/ordersBox/ordersBox.tsx","webpack:///./src/client/app/components/ordersLayer/order/order.tsx","webpack:///./src/client/app/components/ordersLayer/ordersLayer.tsx","webpack:///./src/client/app/hooks/useFetchGame.ts","webpack:///./src/client/app/pages/game/newGame.tsx","webpack:///./src/client/app/pages/game/state/actions.ts","webpack:///./src/client/app/pages/game/state/gameReducer.ts","webpack:///./src/client/app/pages/game/state/ordersReducer/ordersReducer.ts","webpack:///./src/client/app/pages/game/state/playerOrdersReducer/changeMoveType.ts","webpack:///./src/client/app/pages/game/state/playerOrdersReducer/playerOrdersReducer.ts","webpack:///./src/client/app/services/gameService.ts","webpack:///./src/client/app/variables/empireColours.ts","webpack:///./src/client/utils/getColour.ts","webpack:///./src/client/utils/getLocation.ts","webpack:///./src/client/utils/getPlayer.ts","webpack:///./src/shared/resources/countryData.ts","webpack:///./src/shared/types/enums/UnitType.ts"],"names":[],"mappings":"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","file":"1.bundle.js","sourcesContent":["import countryData from '@shared/resources/countryData';\nimport { ITag } from '@shared/types';\n\nconst checkTag = (territoryName: string, tag: ITag): boolean => {\n  const territory = countryData.territories.find(t => t.title === territoryName)\n  if (!territory) {\n    console.error( `Error checking tags: No territory found '${territoryName}'`)\n    return false\n  }\n  return territory.tags.includes(tag)\n}\n\nexport default checkTag","import {h} from 'preact'\n\nexport default ({stripe}: {stripe: number}) => (\n  <pattern id='diagonalHatch' patternUnits='userSpaceOnUse' width={stripe} height={stripe} patternTransform='rotate(45)'>\n    <line x1={stripe/2} y='0' x2={stripe/2} y2={stripe} stroke='black' stroke-width={stripe} />\n    <line x1='0' y='0' x2='0' y2={stripe} stroke='maroon' stroke-width={stripe} />\n  </pattern>\n)","import {h, Fragment, FunctionalComponent} from 'preact'\nimport { useRef } from 'preact/compat'\n\nimport { IGameBoard, IGameTurnJSON, IMove } from '@shared/types'\n\n\nimport { getColour } from '@client/utils/getColour'\nimport { getLocation } from '@client/utils/getLocation'\n\nimport Territory from './territory/territory'\nimport Unit from './unit/unit'\n\nimport OrdersLayer from '../ordersLayer/ordersLayer'\nimport NeutralPattern from './neutralPattern/neutralPattern'\n\nimport * as Styled from './styled'\n\nexport interface IBoardProps {\n  boardData: IGameBoard,\n  turnData: IGameTurnJSON,\n  onTerritoryClick: (title: string) => () => void,\n  orders: Map<string, IMove>,\n  // displayOrders: boolean\n}\n\nconst Board: FunctionalComponent<IBoardProps> = (props) => {\n  // Created once for document\n  const svgRef = useRef<SVGSVGElement>()\n  // const svgRef = createRef() // ! This might be required?\n\n  return (\n      <Fragment>\n        <Styled.GameBoard id='gameBoard'>\n          {/* Draw Territories */}\n          <Styled.MapSvg\n            xmlns='http://www.w3.org/2000/svg'\n            viewBox={props.boardData.viewBox}\n            ref={() => svgRef}\n          >\n            {props.boardData.territories.map(tile => (\n              <Territory\n                tile={tile}\n                onSelect={props.onTerritoryClick(tile.title)}\n                viewBox={props.boardData.viewBox}\n                colour={getColour(props.turnData, tile.title)}\n              />\n            ))}\n            {/* Draw Units */}\n            {props.turnData?.players?.map(player => (\n              player.ownedUnits.map(unit => (\n                <Unit\n                  unitType={unit.unitType}\n                  viewBox={props.boardData.viewBox}\n                  location={getLocation(props.boardData, unit.location)}\n                  empire={player.empire}\n                  colour={player.colour}\n                />\n              ))\n            ))}\n            {/* Draw Orders */}\n            <OrdersLayer boardData={props.boardData} orders={props.orders}/>\n            <NeutralPattern stripe={6}/>\n          </Styled.MapSvg>\n        </Styled.GameBoard>\n      </Fragment>\n    )\n  }\n\n  export default Board","import styled from 'styled-components';\n\nimport Colours from '../../variables/colors'\n\nexport const GameBoard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 100vh;\n\n  @media\n    screen and (max-width:767px),\n    screen and (max-height: 767px) and (orientation:landscape)\n  {\n    max-width: 100%;\n  }\n`\n\nexport const StickyContainer = styled.div`\n  width: 100%;\n  position: sticky;\n  top: 0;\n  height: 150px;\n  z-index: 5;\n  pointer-events: none;\n`\n\nconst PAPER_TEXTURE_URL = '/assets/paperTexture.jpg'\nexport const MapSvg = styled.svg`\n  background-image: url(${PAPER_TEXTURE_URL});\n  background-size: contain;\n\n  width: 100%;\n  pointer-events: none;\n  transform: translateY(-150px);\n\n  border: 2px solid ${Colours.shadow};\n  border-radius: 4px;\n  box-sizing: border-box;\n`","import styled from 'styled-components';\n\nexport const StarPath = styled.path`\n  fill: white;\n  stroke: black;\n  transform:\n    translate(0px, 13px)\n    scale(0.8);\n`","import {FunctionalComponent, h} from 'preact'\nimport * as Styled from './styled'\n\nconst StarPath = Styled.StarPath\n\nconst SupplyStar: FunctionalComponent = () => {\n  return (\n    <StarPath d='\n      M 0.000 3.000\n      L 3.527 4.854\n      L 2.853 0.927\n      L 5.706 -1.854\n      L 1.763 -2.427\n      L 0.000 -6.000\n      L -1.763 -2.427\n      L -5.706 -1.854\n      L -2.853 0.927\n      L -3.527 4.854\n      L 0.000 3.000\n    '/>\n  )\n}\n\nexport default SupplyStar","import styled, { css } from 'styled-components';\nimport empireColours from '../../../variables/empireColours';\nimport { IBoardTerritory } from '@shared/types';\n\nconst landCss = css`\n  fill: #FFFFDD;\n  fill-opacity: 0.3;\n  :hover {\n    fill-opacity: 0.4;\n  }\n`\nconst seaCss = css`\n  fill: #99CCFF;\n  fill-opacity: 0.45;\n  :hover {\n    fill: #AADDFF;\n  }\n`\nconst neutralCss = css`\n  fill: url(#diagonalHatch);\n  stroke: #220;\n  opacity: 0.5;\n`\n\nconst tileTypesCss = {\n  sea: seaCss,\n  land: landCss,\n  neutral: neutralCss,\n}\n\nconst getLight = (id: string) => {\n  const key = `${id}_light` as keyof typeof empireColours\n  const colourHex = empireColours[key]\n  return colourHex || 'none'\n}\n\ninterface IPathProps {\n  tileType: 'sea' | 'land' | 'neutral',\n  colourId: string\n}\nexport const Path = styled.path`\n  pointer-events: all;\n  stroke: #444444;\n  stroke-linejoin: round;\n  stroke-width: 0.5;\n  transition: fill-opacity 0.2s;\n  ${(p: IPathProps) => tileTypesCss[p.tileType]};\n  ${(p: IPathProps) => p.colourId ? css`fill: ${getLight(p.colourId)};` : ''}\n`\n\n\ntype TextLocation = IBoardTerritory['textLocation']\nconst getTranslate = (textLocation: TextLocation) => {\n  const {x, y} = textLocation\n  return `${x}px, ${y}px`\n}\nconst getRotate = (rotate: TextLocation['rotate']) => {\n  const rotation = rotate || '0'\n  return `${rotation}deg`\n}\ninterface INameProps {\n  textLocation: TextLocation\n}\nexport const TerritoryName = styled.g<INameProps>`\n  transform:\n    translate(${p => getTranslate(p.textLocation)})\n    rotate(${p => getRotate(p.textLocation.rotate)});\n`\n\nexport const TerritoryTitle = styled.text`\n  font-family: Palatino;\n  fill: #222;\n  font-size: 9px;\n  transform: translate(0, 8px);\n  pointer-events: none;\n`","import { IBoardTerritory } from '@shared/types'\nimport {Component, Fragment, h} from 'preact'\nimport * as Styled from './styled'\n\nimport SupplyStar from '../supplyStar/supplyStar'\n// Move tile type into shared types folder?\nexport interface ITerritoryProps {\n  tile: IBoardTerritory\n  // unit: 'army' | 'fleet' | null\n  viewBox: string\n  onSelect: () => void\n  colour: string\n}\n\nexport default class Territory extends Component <ITerritoryProps> {\n  handleClick = (title: string) => () => {\n    console.log(title)\n  }\n\n  getTileType = (tags: IBoardTerritory['tags']) => {\n    if (tags.includes('sea')) return 'sea'\n    if (tags.includes('neutral')) return 'neutral'\n    return 'land'\n  }\n\n  render(props: ITerritoryProps) {\n    const tileType = this.getTileType(props.tile.tags)\n    return (\n      <Fragment>\n        <g title={props.tile.title}>\n          <Styled.Path\n            tileType={tileType}\n            colourId={props.colour}\n            d={props.tile.path}\n            onClick={props.onSelect} \n          />\n          {props.tile.textLocation && (\n            <Fragment>\n              {/* {process.env.NODE_ENV === 'development' && (\n                <circle stroke='white' cx={props.tile.textLocation.x} cy={props.tile.textLocation.y} r='1'/>\n              )} */}\n              <Styled.TerritoryName textLocation={props.tile.textLocation}>\n                {props.tile.tags.includes('supply') && (\n                  <SupplyStar/>\n                )}\n                <Styled.TerritoryTitle>\n                  {props.tile.name.split('\\n').map((line, i) => (\n                    <tspan dy={i?'8':'0'} x='0' text-anchor='middle'>{line}</tspan>\n                  ))}\n                </Styled.TerritoryTitle>\n              </Styled.TerritoryName>\n            </Fragment>\n          )}\n        </g>\n      </Fragment>\n    )\n  }\n}\n","import {h, FunctionalComponent} from 'preact'\n\nimport * as Styled from '../styled'\n\nconst Polygon = Styled.Polygon\nconst Path = Styled.Path\n\nexport interface IArmyProps {\n  viewBox: string\n  location: {x: number, y: number}\n  empire: string\n  colour: string\n}\nconst Army: FunctionalComponent<IArmyProps> = (props: IArmyProps) => (\n  <g transform={`translate(${props.location.x - 11} ${props.location.y - 20}) scale(0.055)`}>\n    <g>\n      {/* <!-- Wheels --> */}\n      <path style='fill:#999999;' d='M145.687,374.175c0-13.504-10.951-24.455-24.455-24.455c-13.516,0-24.467,10.951-24.467,24.455\n        s10.951,24.455,24.467,24.455C134.736,398.63,145.687,387.679,145.687,374.175z'/>\n      <path style='fill:#999999;' d='M231.205,378.426c0-11.159-9.045-20.204-20.204-20.204c-11.147,0-20.192,9.045-20.192,20.204\n        s9.045,20.204,20.192,20.204C222.16,398.63,231.205,389.585,231.205,378.426z'/>\n      <path style='fill:#999999;' d='M332.952,372.615c0-14.37-11.656-26.026-26.026-26.026c-14.359,0-26.014,11.656-26.014,26.026\n        c0,14.37,11.656,26.014,26.014,26.014C321.297,398.63,332.952,386.986,332.952,372.615z'/>\n      <path style='fill:#999999;' d='M392.975,358.557c4.875-3.315,8.075-8.906,8.075-15.248c0-10.177-8.259-18.437-18.437-18.437\n        c-10.189,0-18.448,8.259-18.448,18.437c0,10.189,8.259,18.437,18.448,18.437C386.448,361.745,390.029,360.567,392.975,358.557z'/>\n      <path style='fill:#999999;' d='M31.025,369.289c2.403,0.866,4.99,1.34,7.693,1.34c12.441,0,22.537-10.085,22.537-22.537\n        c0-12.441-10.096-22.537-22.537-22.537c-12.453,0-22.537,10.096-22.537,22.537c0,9.727,6.157,18.009,14.786,21.174\n        C30.99,369.265,31.002,369.277,31.025,369.289z'/>\n    </g>\n    <g>\n      {/* <!-- Hatch --> */}\n      <path style='fill:#FFFFFF' d='M233.099,174.515v14.151h-5.302H165.73v-14.151c0-6.758,5.476-12.233,12.233-12.233h42.903\n        C227.624,162.282,233.099,167.757,233.099,174.515z'/>\n      {/* <!-- Turret tip --> */}\n      <Polygon colourId={props.colour} shade='light' points='488.196,113.372 503.34,150.129 444.761,174.261 442.162,167.942 432.216,143.834\n        429.617,137.515 \t'/>\n    </g>\n    {/* <!-- Turret --> */}\n    <Path colourId={props.colour} shade='medium' d='M432.216,143.834l9.946,24.108l-155.036,63.904l-2.16,0.289c-2.299-8.294-6.388-16.045-12.037-22.653\n      L432.216,143.834z'/>\n      {/* <!-- Treads --> */}\n    <Path colourId={props.colour} shade='shadow'  d='M392.975,358.557l-29.445,28.244c-7.901,7.589-18.437,11.829-29.388,11.829h-27.216\n      c14.37,0,26.026-11.644,26.026-26.014c0-14.37-11.656-26.026-26.026-26.026c-14.359,0-26.014,11.656-26.014,26.026\n      c0,14.37,11.656,26.014,26.014,26.014h-95.926c11.159,0,20.204-9.045,20.204-20.204s-9.045-20.204-20.204-20.204\n      c-11.147,0-20.192,9.045-20.192,20.204s9.045,20.204,20.192,20.204h-89.768c13.504,0,24.455-10.951,24.455-24.455\n      s-10.951-24.455-24.455-24.455c-13.516,0-24.467,10.951-24.467,24.455s10.951,24.455,24.467,24.455h-18.102\n      c-6.457,0-12.846-1.259-18.829-3.685l-53.277-25.656c2.403,0.866,4.99,1.34,7.693,1.34c12.441,0,22.537-10.085,22.537-22.537\n      c0-12.441-10.096-22.537-22.537-22.537l343.895-0.682c-10.189,0-18.448,8.259-18.448,18.437c0,10.189,8.259,18.437,18.448,18.437\n      C386.448,361.745,390.029,360.567,392.975,358.557z'/>\n    <Path colourId={props.colour} shade='light' d='M287.127,247.995v11.171H106.4v-11.171c0-7.867,1.559-15.572,4.517-22.711\n      c2.957-7.127,7.301-13.677,12.857-19.245c11.124-11.124,26.222-17.374,41.956-17.374h62.067c7.867,0,15.572,1.559,22.711,4.517\n      c7.127,2.946,13.677,7.289,19.245,12.857c1.109,1.109,2.172,2.253,3.177,3.442c5.649,6.608,9.738,14.359,12.037,22.653\n      C286.387,237.252,287.127,242.589,287.127,247.995z'/>\n    <Path colourId={props.colour} shade='medium' d='M157.699,225.286c2.957-7.127,7.301-13.677,12.857-19.245c11.124-11.124,26.222-17.374,41.956-17.374\n      H165.73c-15.733,0-30.832,6.249-41.956,17.374c-5.556,5.568-9.9,12.118-12.857,19.245c-2.957,7.139-4.517,14.844-4.517,22.711\n      v11.171h46.782v-11.171C153.182,240.129,154.742,232.424,157.699,225.286z'/>\n    <Polygon colourId={props.colour} shade='light' points='352.336,294.572 56.069,294.572 41.191,294.572 59.823,259.166 106.4,259.166\n      287.127,259.166 307.619,259.166 '/>\n    <Polygon colourId={props.colour} shade='medium' points='106.4,259.166 59.823,259.166 41.191,294.573 56.069,294.573 101.835,294.573\n      120.468,259.166 '/>\n    <g>\n      <path style='fill: black;' d='M382.607,316.208c-0.006,0-343.907,0.684-343.907,0.684c-17.196,0.009-31.184,14.002-31.184,31.2\n        c0,13.229,8.28,24.554,19.928,29.085l53.095,25.569c0.163,0.079,0.329,0.152,0.497,0.221c7.063,2.869,14.497,4.325,22.097,4.325\n        h231.004c13.26,0,25.83-5.056,35.396-14.238l28.988-27.821c6.775-4.931,11.191-12.918,11.191-21.921\n        C409.711,328.367,397.552,316.208,382.607,316.208z M392.384,343.312c0,5.39-4.385,9.775-9.775,9.775\n        c-5.391,0-9.776-4.385-9.776-9.775c0-5.391,4.385-9.776,9.776-9.776C387.997,333.536,392.384,337.921,392.384,343.312z\n        M38.717,334.219c7.65,0,13.874,6.224,13.874,13.874s-6.224,13.874-13.874,13.874s-13.874-6.224-13.874-13.874\n        S31.068,334.219,38.717,334.219z M105.434,374.174c0-8.709,7.085-15.794,15.794-15.794s15.794,7.085,15.794,15.794\n        c0,8.694-7.062,15.766-15.748,15.79h-0.089C112.496,389.94,105.434,382.866,105.434,374.174z M199.469,378.428\n        c0-6.362,5.176-11.538,11.538-11.538s11.538,5.175,11.538,11.538c0,6.346-5.152,11.511-11.493,11.536h-0.089\n        C204.621,389.94,199.469,384.776,199.469,378.428z M289.577,372.611c0-9.569,7.786-17.355,17.355-17.355\n        c9.569,0,17.355,7.786,17.355,17.355c0,9.554-7.762,17.329-17.31,17.353h-0.089C297.338,389.94,289.577,382.165,289.577,372.611z\n        M357.534,380.554c-5.693,5.464-12.998,8.709-20.794,9.303c3.092-4.924,4.876-10.78,4.876-17.244\n        c0-19.124-15.559-34.683-34.683-34.683c-19.124,0-34.683,15.559-34.683,34.683c0,6.512,1.807,12.407,4.941,17.353h-39.867\n        c1.632-3.435,2.548-7.318,2.548-11.536c0-15.916-12.948-28.865-28.865-28.865s-28.865,12.948-28.865,28.865\n        c0,4.218,0.916,8.099,2.548,11.536h-34.373c2.561-4.698,4.032-10.073,4.032-15.79c0-18.263-14.858-33.121-33.121-33.121\n        s-33.12,14.857-33.12,33.12c0,5.018,1.138,9.77,3.144,14.038c-1.162-0.35-2.314-0.746-3.451-1.2l-29.852-14.376\n        c7.28-5.717,11.97-14.59,11.97-24.543c0-5.004-1.191-9.733-3.293-13.929l290.691-0.578c-1.166,3.021-1.811,6.299-1.811,9.725\n        c0,10.747,6.286,20.051,15.375,24.432L357.534,380.554z'/>\n      <path style='fill: black;' d='M511.348,146.824l-15.147-36.751c-0.876-2.124-2.559-3.814-4.681-4.697\n        c-2.122-0.884-4.506-0.888-6.631-0.012l-58.573,24.14c-3.843,1.584-5.934,5.613-5.224,9.544l-145.962,60.159\n        c-9.356-9.084-20.866-15.17-33.372-17.767v-6.931c0-11.519-9.372-20.89-20.89-20.89h-42.912c-11.519,0-20.89,9.371-20.89,20.89\n        v6.055c-14.879,1.881-28.64,8.575-39.417,19.351c-12.843,12.843-19.916,29.918-19.916,48.081v2.509H59.819\n        c-3.217,0-6.169,1.782-7.667,4.629l-17.417,33.091c-6.136,1.343-12.155,3.248-18.008,5.756L5.253,298.9\n        c-4.398,1.885-6.435,6.978-4.55,11.376c1.885,4.399,6.978,6.434,11.376,4.55l11.474-4.918c10.334-4.429,21.275-6.675,32.519-6.675\n        H352.34h34.438l18.97,12.851c1.489,1.008,3.179,1.492,4.852,1.492c2.777,0,5.506-1.333,7.181-3.805\n        c2.683-3.962,1.647-9.349-2.314-12.032l-21.171-14.341c-1.435-0.971-3.127-1.491-4.86-1.491h-34.08l-42.353-33.53\n        c-1.531-1.212-3.425-1.871-5.377-1.871h-11.831v-2.509c0-3.395-0.248-6.752-0.734-10.05l142.596-58.769\n        c1.629,2.361,4.303,3.754,7.115,3.754c1.1,0,2.218-0.211,3.298-0.656l58.573-24.14c2.124-0.876,3.814-2.559,4.697-4.681\n        C512.22,151.333,512.224,148.949,511.348,146.824z M174.395,174.509c0-1.965,1.598-3.563,3.563-3.563h42.912\n        c1.965,0,3.563,1.598,3.563,3.563v5.492h-50.037L174.395,174.509L174.395,174.509z M327.44,285.907H56.075h-0.536l9.512-18.074\n        h239.561L327.44,285.907z M115.063,250.506v-2.509c0-13.534,5.271-26.257,14.84-35.828c9.569-9.569,22.294-14.84,35.828-14.84\n        h62.066c13.534,0,26.258,5.271,35.828,14.84c9.569,9.571,14.841,22.295,14.841,35.828v2.509H115.063z M286.322,213.337\n        l141.191-58.192l1.635,3.96l1.704,4.134l-140.552,57.928C289.144,218.478,287.822,215.862,286.322,213.337z M449.479,162.952\n        l-4.524-10.961l-4.025-9.767l42.552-17.538l8.544,20.731L449.479,162.952z'/>\n    </g>\n  </g>\n)\n\nexport default Army","import { h, FunctionalComponent} from 'preact'\n\nimport * as Styled from '../styled'\nexport interface IFleetProps {\n  viewBox: string\n  location: {x: number, y: number}\n  empire: string\n  colour: string\n}\n\nconst Fleet: FunctionalComponent<IFleetProps> = (props: IFleetProps) => (\n  <g transform={`translate(${props.location.x - 10} ${props.location.y - 20}) scale(0.05)`}>\n    <Styled.Path colourId={props.colour} shade='light' d='M128.904,85.83v64.869H97.813c-9.197,0-16.655-7.458-16.655-16.655v-31.559\n      c0-9.197,7.458-16.655,16.655-16.655H128.904z'/>\n    <Styled.Path colourId={props.colour} shade='light' d='M176.638,102.485v31.559c0,9.197-7.458,16.655-16.655,16.655h-31.079V85.83h31.079\n      C169.18,85.83,176.638,93.288,176.638,102.485z'/>\n    <g>\n      <rect x='60.444' y='182.688' style='fill:#CCCCCC;' width='136.92' height='47.866'/>\n      <polygon style='fill:#CCCCCC;' points='219.073,261.143 219.073,309.213 38.723,309.213 38.723,230.556 60.438,230.556\n        197.358,230.556 219.073,230.556 \t'/>\n      <path style='fill:#CCCCCC;' d='M437.576,228.193c4.532,5.767,7.23,13.046,7.23,20.947v15.947h-101.68v-49.881h67.758\n        C421.725,215.208,431.365,220.292,437.576,228.193z'/>\n    </g>\n    <Styled.Polygon colourId={props.colour} shade='medium' points='497.253,265.088 447.876,391.276 26.241,391.276 26.229,391.276 8.987,309.213\n      38.723,309.213 219.073,309.213 286.22,309.213 309.242,265.088 343.127,265.088 444.806,265.088 '/>\n    <Styled.Polygon colourId={props.colour} shade='shadow' points='447.876,391.276 428.187,441.589 36.805,441.589 26.229,391.276 26.241,391.276 '/>\n    <g>\n      <path style='fill: black;' d='M512,228.19c0-4.966-4.025-8.993-8.993-8.993h-61.414c-7.801-7.999-18.682-12.979-30.711-12.979\n        h-67.75c-4.968,0-8.993,4.026-8.993,8.993v40.888h-24.901c-3.35,0-6.422,1.862-7.973,4.833l-20.5,39.293h-52.704v-60.673h4.685\n        c4.966,0,8.993-4.026,8.993-8.993c0-4.966-4.026-8.993-8.993-8.993h-13.678h-12.717V191.68h9.71c4.966,0,8.993-4.026,8.993-8.993\n        s-4.026-8.993-8.993-8.993h-78.169v-13.999h22.088c14.143,0,25.65-11.506,25.65-25.65v-31.557c0-14.143-11.506-25.65-25.65-25.65\n        h-22.088v-6.432c0-4.966-4.026-8.993-8.993-8.993c-4.966,0-8.993,4.026-8.993,8.993v6.432H97.819\n        c-14.143,0-25.65,11.506-25.65,25.65v31.555c0,14.143,11.506,25.65,25.65,25.65h22.088v13.999H41.738\n        c-4.966,0-8.993,4.026-8.993,8.993s4.026,8.993,8.993,8.993h9.71v29.886H38.729H25.053c-4.966,0-8.993,4.026-8.993,8.993\n        c0,4.966,4.026,8.993,8.993,8.993h4.683v60.673H8.993c-2.71,0-5.275,1.222-6.982,3.325c-1.707,2.103-2.375,4.866-1.819,7.517\n        L28.01,443.442c0.875,4.163,4.547,7.144,8.801,7.144h391.375c3.701,0,7.025-2.269,8.374-5.716l69.067-176.503\n        c1.083-2.767,0.728-5.892-0.947-8.347s-4.456-3.923-7.427-3.923h-43.448v-6.957c0-4.15-0.603-8.161-1.707-11.959h50.909\n        C507.975,237.183,512,233.156,512,228.19z M159.98,94.825c4.225,0,7.664,3.438,7.664,7.664v31.555c0,4.225-3.438,7.664-7.664,7.664\n        h-22.088V94.825H159.98z M97.819,141.708c-4.225,0-7.664-3.438-7.664-7.664v-31.555c0-4.225,3.438-7.664,7.664-7.664h22.088v46.884\n        H97.819z M69.434,191.68h118.932v29.886H69.434V191.68z M47.722,239.552h162.353v12.602H73.169c-4.966,0-8.993,4.026-8.993,8.993\n        s4.026,8.993,8.993,8.993h136.908v30.085H47.722V239.552z M422.048,432.602H44.111l-6.795-32.336h397.386L422.048,432.602z\n        M441.739,382.28H33.536l-13.464-64.069h266.145c3.35,0,6.422-1.862,7.973-4.833l20.501-39.293h169.386L441.739,382.28z\n        M352.124,256.099v-31.895h58.757c13.751,0,24.938,11.187,24.938,24.938v6.957H352.124z'/>\n      <path style='fill: black' d='M411.239,336.676c-4.968,0-8.993,4.026-8.993,8.993c0,2.975-2.421,5.396-5.396,5.396\n        c-2.975,0-5.397-2.421-5.397-5.396v-35.492c0-4.966-4.025-8.993-8.993-8.993s-8.993,4.026-8.993,8.993v35.492\n        c0,2.975-2.421,5.396-5.396,5.396c-2.975,0-5.396-2.421-5.396-5.396c0-4.966-4.025-8.993-8.993-8.993s-8.993,4.026-8.993,8.993\n        c0,12.892,10.489,23.382,23.382,23.382c5.428,0,10.416-1.875,14.389-4.99c3.972,3.115,8.962,4.99,14.39,4.99\n        c12.892,0,23.382-10.489,23.382-23.382C420.232,340.703,416.207,336.676,411.239,336.676z'/>\n    </g>\n  </g>\n)\n\nexport default Fleet","import styled from 'styled-components'\nimport colours from '../../../variables/empireColours'\n\ninterface PathProps {\n  colourId: string,\n  shade: 'light' | 'shadow' | 'medium'\n}\nexport const Path = styled.path<PathProps>`\n  fill: ${({colourId, shade}) => colours[`${colourId}_${shade}` as keyof typeof colours]}\n`\n\ntype PolygonProps = PathProps\nexport const Polygon = styled.polygon<PolygonProps>`\n  fill: ${({colourId, shade}) => colours[`${colourId}_${shade}` as keyof typeof colours]}\n`","import {Component, h, Fragment} from 'preact'\nimport Army from './army/army'\nimport Fleet from './fleet/fleet'\n\nexport interface IUnitProps {\n  viewBox: string\n  location: {x: number, y: number}\n  empire: string\n  colour: string\n  unitType: 'Army' | 'Fleet'\n}\n\ninterface IUnitState {\n\n}\n\nexport default class Unit extends Component <IUnitProps, IUnitState> {\n  render(props: IUnitProps, state: IUnitState) {\n    return (\n      <Fragment>\n        {props.unitType === 'Army' &&\n          <Army\n            viewBox={props.viewBox}\n            location={props.location}\n            empire={props.empire}\n            colour={props.colour}\n          />\n        }\n        {props.unitType === 'Fleet' &&\n          <Fleet\n            viewBox={props.viewBox}\n            location={props.location}\n            empire={props.empire}\n            colour={props.colour}\n          />\n        }\n      </Fragment>\n    )\n  }\n}","import { Fragment, h } from 'preact'\nimport { useState } from 'preact/hooks'\n\nimport checkTag from '@client/app/_helpers/checkTag'\nimport { provinces } from '@shared/resources/countryData'\nimport { IUnit, OrderType, IMove } from '@shared/types'\nimport UnitType from '@shared/types/enums/UnitType'\n\nconst getOrderTypes = (unit: IUnit): OrderType[] => {\n  const orderTypes: OrderType[] = ['hold', 'move', 'support',]\n\n  if (unit.unitType  === UnitType.FLEET && checkTag(unit.location, 'sea')) {\n    orderTypes.push('convoy')\n  }\n\n  if (unit.unitType  === UnitType.ARMY && checkTag(unit.location, 'coastal')) {\n    orderTypes.push('moveViaConvoy')\n  }\n  return orderTypes\n}\n\ninterface IOrderDropdownProps {\n  unit: IUnit\n  order: Partial<IMove>\n  updateOrderType: (location: string, moveType: string) => void\n  updateLocation: (location: string, destination: string, destinationType: 'to' | 'supportFrom' | 'convoyFrom') => void\n  completeOrder: (location: string) => void\n  removeOrder: (location: string) => void\n}\n\nconst OrderDropdown = (props: IOrderDropdownProps) => {\n  const [order, setOrder] = useState<Partial<IMove>>(props.order || {moveType: 'hold'})\n  const orderTypes = getOrderTypes(props.unit)\n\n  const handleMoveTypeChange = (event: Event) => {\n    props.removeOrder(props.unit.location)\n    const orderType = (event.target as HTMLSelectElement).value\n    props.updateOrderType(props.unit.location, orderType)\n    console.log('orderType:', orderType)\n    if (['hold', 'disband'].includes(orderType)) {\n      props.completeOrder(props.unit.location)\n    }\n  }\n\n  const handleDestinationChange = (destinationType: 'to' | 'supportFrom' | 'convoyFrom') => (event: Event) => {\n    const destination = (event.target as HTMLSelectElement).value\n    props.updateLocation(props.unit.location, destination, destinationType)\n    if (destinationType === 'to') {\n      props.completeOrder(props.unit.location)\n    }\n  }\n\n  const text: {[key in 'support' | 'convoy']: string} = {\n    support: 'support unit at',\n    convoy: 'convoy unit at',\n  }\n\n  const fromType: {[key in 'support' | 'convoy']: 'supportFrom' | 'convoyFrom'} = {\n    support: 'supportFrom',\n    convoy: 'convoyFrom',\n  }\n  \n  console.log('Rendering Order Dropdown. order.moveType:', order.moveType)\n  return (\n    <Fragment>\n      {/* SELECT MOVE TYPE (HOLD or DISBAND) */}\n      {`${props.unit.unitType} in ${props.unit.location} will `}\n      <select type='select' onChange={handleMoveTypeChange}>\n        {orderTypes.map((orderType, i) => (\n          <option value={orderType} key={`ordertype-${i}`} >\n            {orderType}\n          </option>\n        ))}\n      </select>\n\n      {/* MOVE, RETREAT, OR MOVEVIACONVOY */}\n      {['move', 'retreat', 'moveViaConvoy'].includes(order.moveType) && (\n        <Fragment>\n          to\n          <select type='select' onChange={handleDestinationChange('to')}>\n            {provinces.map((province, i) => (\n              <option value={province} key={`ordertype-${i}`} >\n                {province}\n              </option>\n            ))}\n          </select>\n        </Fragment>\n      )}\n\n      {/* SUPPORT OR CONVOY */}\n      {(order.moveType === 'support' || order.moveType === 'convoy') && (\n        <Fragment>\n          {text[order.moveType]}\n          <select type='select' onChange={handleDestinationChange(fromType[order.moveType])}>\n            {provinces.map((province, i) => (\n              <option value={province} key={`ordertype-${i}`} >\n                {province}\n              </option>\n            ))}\n          </select>\n          to\n          <select type='select' onChange={handleDestinationChange(fromType[order.moveType])}>\n            {provinces.map((province, i) => (\n              <option value={province} key={`ordertype-${i}`} >\n                {province}\n              </option>\n            ))}\n          </select>\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nexport default OrderDropdown","import { FunctionalComponent , h} from 'preact'\n\nimport { IMove, IUnit } from '@shared/types'\nimport OrderDropdown from './orderDropdown'\n\ninterface IOrdersBoxProps {\n  playerUnits: IUnit[]\n  playerOrders: Map<string, Partial<IMove>>\n  updateLocation: (location: string, destination: string, destinationType: 'to' | 'supportFrom' | 'convoyFrom') => void\n  updateOrderType: (location: string, moveType: string) => void\n  completeOrder: (location: string) => void\n  removeOrder: (location: string) => void\n}\n\nconst OrdersBox: FunctionalComponent<IOrdersBoxProps> = (props) => {\n  console.log('props.playerOrders:', props.playerOrders)\n  return (\n    <div style=\"border: 1px black; font-family: 'palantino';\">\n      <h3>THE PROBLEM IS THAT THE PLAYERORDERS AREN'T BEING SET WHEN THE MOVES ARE BEING LOADED</h3>\n      {props.playerUnits.map((unit, i) => (\n        <div key={`ownedUnits-${i}`}>\n          <OrderDropdown\n            unit={unit}\n            order={props.playerOrders.get(unit.location)}\n            updateLocation={props.updateLocation}\n            updateOrderType={props.updateOrderType}\n            completeOrder={props.completeOrder}\n            removeOrder={props.removeOrder}\n          />\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default OrdersBox","import {Component, Fragment, h} from 'preact'\n\nimport { IGameBoard, IMove } from '@shared/types'\n\nexport interface IOrderProps {\n  order: Partial<IMove>\n  boardData: IGameBoard\n}\n\ninterface IOrderState {\n\n}\n\nexport default class Order extends Component <IOrderProps, IOrderState> {\n  getLocation = (property: 'from' | 'to' | 'supportFrom'): string => {\n    const territory = this.props.boardData.territories.find(t => t.title === this.props.order[property])\n    if (!territory) return ''\n    return `${territory.textLocation.x},${territory.textLocation.y}`\n  }\n\n  getMarkerColour = <T extends string>(moveType: T) => {\n    switch(moveType) {\n      case 'move': return 'lightgray'\n      case 'support': return 'brown'\n      case 'retreat': return 'blue'\n      default: return ''\n    }\n  }\n\n  calculateLocation = (fromLocation: string, toLocation: string) => {\n    const distanceFromEnd = 10\n    const [fromX, fromY] = fromLocation.split(',').map(n => parseInt(n, 10))\n    const [toX, toY] = toLocation.split(',').map(n => parseInt(n, 10))\n    const lineLength = Math.sqrt(Math.pow((fromX-toX), 2) + Math.pow((fromY-toY), 2))\n    const t = distanceFromEnd / lineLength\n    console.log('fromLocation, toLocation:', fromLocation, toLocation)\n    console.log('fromX, fromY, toX, toY:', fromX, fromY, toX, toY)\n    const x = ((1 - t) * toX) + (t * fromX)\n    const y = ((1 - t) * toY) + (t * fromY)\n    return `${x},${y}`\n  }\n\n  render(props: IOrderProps, state: IOrderState) {\n    const fromLocation = this.getLocation('from')\n    const toLocation = this.getLocation('to')\n    const supportFromLocation = this.getLocation('supportFrom')\n    const markerColour = this.getMarkerColour(props.order.moveType)\n\n    return (\n      <Fragment>\n        {props.order.moveType === 'support' && (\n          <Fragment>\n            <path\n              marker-end='url(#head-support)'\n              stroke-width='2' fill='transparent' stroke={markerColour}\n              d={`M${this.calculateLocation(toLocation, fromLocation)} Q${supportFromLocation} ${this.calculateLocation(supportFromLocation, toLocation)}`}\n            />\n            <path\n              stroke-width='4' fill='transparent' stroke='#FF000088'\n              d={`M${this.calculateLocation(toLocation, supportFromLocation)} L ${this.calculateLocation(supportFromLocation, toLocation)}`}\n            />\n          </ Fragment>\n        )}\n        {props.order.moveType === 'move' && (\n          <path\n            marker-end='url(#head-move)'\n            stroke-width='2' stroke='lightgray'\n            d={`M${this.calculateLocation(toLocation, fromLocation)} L${this.calculateLocation(fromLocation, toLocation)}`}\n          />\n        )}\n      </Fragment>\n    )\n  }\n}","import {Fragment, FunctionalComponent, h} from 'preact'\n\nimport { IGameBoard, IMove } from '@shared/types'\n\nimport Order from './order/order'\n\nexport interface IOrdersLayerProps {\n  boardData: IGameBoard\n  orders: Map<string, IMove>\n}\n\nconst OrdersLayer: FunctionalComponent <IOrdersLayerProps> = (props) =>  {\n  const markerColours = {\n    support: 'brown',\n    move: 'lightgray',\n    retreat: 'blue',\n  }\n\n  const orders = Array.from(props.orders.values())\n  return (\n    <Fragment>\n      <defs>\n        {Object.entries(markerColours).map(([moveType, colour]) => (\n          <marker\n            id={`head-${moveType}`}\n            orient='auto'\n            markerWidth='2'\n            markerHeight='4'\n            refX='0.1'\n            refY='2'\n          >\n            <path d='M0,0 V4 L2,2 Z' fill={colour} />\n          </marker>\n        ))}\n      </defs>\n      {orders.map(order => (\n        <Order\n          key={`order-from-${order.from}`}\n          order={order}\n          boardData={props.boardData}\n        />\n      ))}\n      {/* {props.turnData && props.turnData.players.map(player => (\n        player.moves\n          .sort((a, b) => this.order[a.moveType] - this.order[b.moveType])\n          .map((order, i) => <Order key={`order-a-${i}-${Date.now()}`} {...order} boardData={props.boardData}/>)\n      ))}\n      {props.newOrders && props.newOrders\n        .sort((a, b) => this.order[a.moveType] - this.order[b.moveType])\n        .map((order, i) => (\n          <Order key={`order-b-${i}-${Date.now()}`}{...order} boardData={props.boardData} />\n        ))\n      } */}\n    </Fragment>\n  )\n}\n\nexport default OrdersLayer\n","import { useEffect } from 'preact/hooks';\nimport { Action, ActionType } from '../pages/game/state/actions';\nimport { getGame, getTurn } from '../services/gameService';\n\nexport const useFetchGame = (gameID: string, dispatch: (action: Action) => void) => useEffect(() => {\n  getGame(gameID)\n    .then(game => {\n      dispatch({ type: ActionType.setGame, payload: game})\n      return game\n    })\n    .then(game => getTurn(game.currentTurn))\n    .then(turn => {\n      dispatch({type: ActionType.setTurn, payload: turn})\n      return turn\n    })\n    .then(turn => dispatch({type: ActionType.loadMoves, payload: turn}))\n    .catch(error => console.error(error))\n}, [gameID])","import { FunctionalComponent, h, Fragment } from 'preact'\nimport { useReducer, useEffect } from 'preact/hooks'\n\nimport type { IMove, OrderType } from '@shared/types'\nimport boardData from '@shared/resources/countryData'\n\nimport Board from '@client/app/components/board/newBoard'\nimport { getGame, getTurn } from '@client/app/services/gameService'\nimport { gameReducer, IGameState } from './state/gameReducer'\nimport { ActionType } from './state/actions'\nimport { useFetchGame } from '@client/app/hooks/useFetchGame'\nimport OrdersBox from '@client/app/components/ordersBox/ordersBox'\nimport { getPlayer } from '@client/utils/getPlayer'\n\nconst initialState: IGameState = {\n  game: null,\n  turn: null,\n  isInteractive: true,\n  orders: new Map<string, IMove>(),\n  playerOrders: new Map<string, Partial<IMove>>()\n}\ninterface IGameProps {\n  userID: string,\n  gameID: string,\n  logOut: () => void,\n}\n\nconst Game: FunctionalComponent<IGameProps> = (props) => {\n  const [state, dispatch] = useReducer(gameReducer, initialState)\n\n  useFetchGame(props.gameID, dispatch)\n\n  const onTerritoryClick = (t: string)=> () => console.log(`${t} was clicked`)\n\n  const updateLocation = (location: string, destination: string, destinationType: 'to' | 'supportFrom' | 'convoyFrom') =>\n    dispatch({type: ActionType.setLocation, payload: { location, destination, destinationType}})\n\n  const updateOrderType = (location: string, orderType: OrderType) =>\n    dispatch({type: ActionType.setOrderType, payload: {location, orderType}})\n\n  const completeOrder = (location: string) =>\n    dispatch({type: ActionType.addMove, payload: {location}})\n\n  const removeOrder = (location: string) =>\n    dispatch({type: ActionType.deleteMove, payload: {location}})\n\n  return (\n    <Fragment>\n      <Board\n        boardData={boardData}\n        turnData={state.turn}\n        orders={state.orders}\n        onTerritoryClick={onTerritoryClick}\n      />\n      {state.turn &&(\n        <OrdersBox\n          updateLocation={updateLocation}\n          updateOrderType={updateOrderType}\n          completeOrder={completeOrder}\n          removeOrder={removeOrder}\n          playerUnits={getPlayer(state.turn, props.userID).ownedUnits}\n          playerOrders={state.playerOrders}\n        />\n      )}\n    </Fragment>\n  )\n}\n\nexport default Game","import { IGameJSON, IGameTurnJSON, IMove, IUnit, OrderType } from '@shared/types'\n\ninterface GenericAction {\n  type: ActionType,\n  payload?: {[key: string]: any}\n}\n\nexport enum ActionType {\n  setOrderType,\n  setLocation,\n  loadMoves,\n  addMove,\n  deleteMove,\n  setGame,\n  setTurn,\n}\n\ninterface LoadMovesAction extends GenericAction {\n  type: ActionType.loadMoves,\n  payload: IGameTurnJSON\n}\n\ninterface SetOrderTypeAction extends GenericAction {\n  type: ActionType.setOrderType,\n  payload: {\n    location: string,\n    orderType: OrderType\n  }\n}\n\ninterface SetLocationAction extends GenericAction {\n  type: ActionType.setLocation,\n  payload: {\n    location: string,\n    destination: string,\n    destinationType : 'to' | 'supportFrom' | 'convoyFrom'\n  }\n}\n\ninterface AddMoveAction extends GenericAction {\n  type: ActionType.addMove,\n  payload: {\n    location: string;\n  },\n}\n\ninterface DeleteMoveAction extends GenericAction {\n  type: ActionType.deleteMove,\n  payload: {\n    location: string\n  },\n}\n\ninterface SetGameAction extends GenericAction {\n  type: ActionType.setGame,\n  payload: IGameJSON\n}\n\ninterface SetTurnAction extends GenericAction {\n  type: ActionType.setTurn,\n  payload: IGameTurnJSON\n}\n\nexport type Action = SetOrderTypeAction\n  | SetLocationAction\n  | LoadMovesAction\n  | AddMoveAction\n  | DeleteMoveAction\n  | SetGameAction\n  | SetTurnAction","import { getGame } from '@client/app/services/gameService';\nimport { IGameJSON, IGameTurnJSON, IMove } from '@shared/types';\nimport { Action, ActionType } from './actions';\nimport { ordersReducer } from './ordersReducer/ordersReducer';\nimport { playerOrdersReducer } from './playerOrdersReducer/playerOrdersReducer';\n\nexport interface IGameState {\n  game: IGameJSON,\n  turn: IGameTurnJSON,\n  isInteractive: boolean,\n  orders: Map<string, IMove>,\n  playerOrders: Map<string, Partial<IMove>>\n}\n\ntype Reducer<S, A> = (state: S, action: A) => S\nexport type GameStateReducer = Reducer<IGameState, Action>\n\nconst miscReducer: GameStateReducer = (state, action) => {\n  switch (action.type) {\n    case ActionType.setGame: {\n      const game = action.payload\n      return {...state, game}\n    }\n    case ActionType.setTurn: {\n      const turn = action.payload\n      return {...state, turn}\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const gameReducer: GameStateReducer = (state, action) => {\n  const newState: IGameState = {\n    ...state,\n    ...ordersReducer(state, action),\n    ...playerOrdersReducer(state, action),\n    ...miscReducer(state, action)\n  }\n\n  return newState\n}","import { IMove } from '@shared/types'\nimport { ActionType, Action } from '../actions'\nimport type { GameStateReducer, IGameState } from '../gameReducer'\n\nexport const ordersReducer: GameStateReducer = (state, action) => {\n  const orders = new Map(state.orders)\n  switch (action.type) {\n    case ActionType.loadMoves: {\n      const moves = action.payload.players.map(p => p.moves).flat(1)\n      moves.forEach(m => orders.set(m.from, m))\n      return {...state, orders}\n    }\n    case ActionType.addMove: {\n      const location = action.payload.location\n      const newMove = state.playerOrders.get(location) as IMove\n      orders.set(newMove.from, newMove)\n      return {...state, orders}\n    }\n    case ActionType.deleteMove: {\n      orders.delete(action.payload.location)\n      return {...state, orders}\n    }\n    default: {\n      return state\n    }\n  }\n}","import { OrderType, IMove } from '@shared/types'\n\nexport const changeMoveType = (moveType: OrderType, move: Partial<IMove>): Partial<IMove> => {\n  const newMove = {\n    ...move,\n    moveType,\n  }\n  switch (moveType) {\n    case 'hold':\n    case 'disband':\n      return ({\n        ...newMove,\n        to: null,\n        supportFrom: null,\n        convoyFrom: null,\n        buildType: null,\n        wasSuccessful: null,\n      })\n    case 'move':\n    case 'moveViaConvoy':\n    case 'retreat':\n      return ({\n      ...newMove,\n      supportFrom: null,\n      convoyFrom: null,\n      buildType: null,\n      wasSuccessful: null,\n    })\n    case 'support': return ({\n      ...newMove,\n      convoyFrom: null,\n      buildType: null,\n      wasSuccessful: null,\n    })\n    case 'convoy': return ({\n      ...newMove,\n      to: null,\n      supportFrom: null,\n      buildType: null,\n      wasSuccessful: null,\n    })\n    case 'build': return ({\n      ...newMove,\n      to: null,\n      supportFrom: null,\n      convoyFrom: null,\n      wasSuccessful: null,\n    })\n  }\n}","import { getPlayer } from '@client/utils/getPlayer'\nimport { ActionType } from '../actions'\nimport type { GameStateReducer } from '../gameReducer'\nimport { changeMoveType } from './changeMoveType'\n\nexport const playerOrdersReducer: GameStateReducer = (state, action) => {\n  const newPlayerOrders = new Map(state.playerOrders)\n  switch (action.type) {\n    case ActionType.setOrderType: {\n      const order = newPlayerOrders.get(action.payload.location)\n      const newMove = changeMoveType(action.payload.orderType, order)\n      newPlayerOrders.set(newMove.from, newMove)\n      return {...state, playerOrders: newPlayerOrders}\n    }\n    case ActionType.setLocation: {\n      const order = newPlayerOrders.get(action.payload.location) || {}\n      const newOrder = {\n        ...order,\n        [action.payload.destinationType]: action.payload.destination\n      }\n      newPlayerOrders.set(order.from, newOrder)\n      return {...state, playerOrders: newPlayerOrders}\n    }\n    default: {\n      return state\n    }\n  }\n}","import { IGameJSON, IGameTurnJSON } from '@shared/types'\nimport to from 'await-to-js'\nimport Axios from 'axios'\n\nexport const getGame = async (gameID: string) => {\n  const [err, res]= await to(Axios.get<IGameJSON>(`/api/game/${gameID}`))\n  if (err) throw new Error(`Error fetching game with ID '${gameID}'`)\n  return res.data\n}\n\nexport const getTurn = async (turnID: string) => {\n  const [err, res] = await to(Axios.get<IGameTurnJSON>(`/api/turn/${turnID}`))\n  if (err) throw new Error(`Error fetching game with ID '${turnID}'`)\n  return res.data\n}\n\nexport const getLatestTurn = async (gameID: string) => {\n  const game = await getGame(gameID)\n  if (!game) return null\n  const turn = await getTurn(game.currentTurn)\n  return turn || null\n}","export default {\n  e01_light: '#00007f',\n  e01_medium: '#000065',\n  e01_shadow: '#00004c',\n\n  e02_light: '#0000ff',\n  e02_medium: '#0000cc',\n  e02_shadow: '#000099',\n\n  e03_light: '#007f00',\n  e03_medium: '#006500',\n  e03_shadow: '#004c00',\n\n  e04_light: '#007f7f',\n  e04_medium: '#006565',\n  e04_shadow: '#004c4c',\n\n  e05_light: '#007fff',\n  e05_medium: '#0065cc',\n  e05_shadow: '#004c99',\n\n  e06_light: '#00ff00',\n  e06_medium: '#00cc00',\n  e06_shadow: '#009900',\n\n  e07_light: '#00ff7f',\n  e07_medium: '#00cc65',\n  e07_shadow: '#00994c',\n\n  e08_light: '#00ffff',\n  e08_medium: '#00cccc',\n  e08_shadow: '#009999',\n\n  e09_light: '#7f0000',\n  e09_medium: '#650000',\n  e09_shadow: '#4c0000',\n\n  e10_light: '#7f007f',\n  e10_medium: '#650065',\n  e10_shadow: '#4c004c',\n\n  e11_light: '#7f00ff',\n  e11_medium: '#6500cc',\n  e11_shadow: '#4c0099',\n\n  e12_light: '#7f7f00',\n  e12_medium: '#656500',\n  e12_shadow: '#4c4c00',\n\n  e13_light: '#7f7f7f',\n  e13_medium: '#656565',\n  e13_shadow: '#4c4c4c',\n\n  e14_light: '#7f7fff',\n  e14_medium: '#6565cc',\n  e14_shadow: '#4c4c99',\n\n  e15_light: '#7fff00',\n  e15_medium: '#65cc00',\n  e15_shadow: '#4c9900',\n\n  e16_light: '#7fff7f',\n  e16_medium: '#65cc65',\n  e16_shadow: '#4c994c',\n\n  e17_light: '#7fffff',\n  e17_medium: '#65cccc',\n  e17_shadow: '#4c9999',\n\n  e18_light: '#ff0000',\n  e18_medium: '#cc0000',\n  e18_shadow: '#990000',\n\n  e19_light: '#ff007f',\n  e19_medium: '#cc0065',\n  e19_shadow: '#99004c',\n\n  e20_light: '#ff00ff',\n  e20_medium: '#cc00cc',\n  e20_shadow: '#990099',\n\n  e21_light: '#ff7f00',\n  e21_medium: '#cc6500',\n  e21_shadow: '#994c00',\n\n  e22_light: '#ff7f7f',\n  e22_medium: '#cc6565',\n  e22_shadow: '#994c4c',\n\n  e23_light: '#ff7fff',\n  e23_medium: '#cc65cc',\n  e23_shadow: '#994c99',\n\n  e24_light: '#ffff00',\n  e24_medium: '#cccc00',\n  e24_shadow: '#999900',\n\n  e25_light: '#ffff7f',\n  e25_medium: '#cccc65',\n  e25_shadow: '#99994c',\n}","import { IGameTurnJSON } from '@shared/types'\n\nexport const getColour = (turnData:  IGameTurnJSON, territoryName: string): string => {\n  if (!turnData) return null\n  const player = turnData.players.find(p => p.ownedTerritories.includes(territoryName))\n  if (!player) return null\n  return player.colour\n}","import { IGameBoard } from '@shared/types'\n\nexport const getLocation = (boardData: IGameBoard, territoryName: string): {x: number, y: number} => {\n  const territory = boardData.territories.find(t => t.title === territoryName)\n  const {x, y} = territory.textLocation\n  return {x, y}\n}","import { IGameTurnJSON } from '@shared/types'\n\nexport const getPlayer = (gameTurn: IGameTurnJSON, playerID: string) => {\n  return gameTurn.players.find(p => p.playerID === playerID)\n}","/* tslint:disable:max-line-length*/\nimport type {IGameBoard} from '@shared/types/IGameBoard'\n\nconst countryData: IGameBoard = {\n  mapTitle: 'Classic',\n  viewBox: '0 0 609 559',\n  territories: [\n    {\n      title: 'Adriatic_Sea',\n      name: 'Adriatic Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 322 480 L 297 456 L 300 453 L 290 453 L 278 443 L 272 424 L 260 417 L 261 401 L 270 398 L 276 399 L 275 403 L 278 410 L 282 401 L 286 402 L 289 418 L 306 436 L 331 454 L 331 477 L 335 480 L 322 480`,\n      textLocation: {\n        x: 300,\n        y: 435,\n        rotate: 48,\n      },\n    },\n    {\n      title: 'Aegean_Sea',\n      name: 'Aegean\\nSea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 376 537 L 371 520 L 378 521 L 377 513 L 386 516 L 385 509 L 370 494 L 371 491 L 378 494 L 368 483 L 371 477 L 379 484 L 382 483 L 381 477 L 386 478 L 380 472 L 392 472 L 400 468 L 408 470 L 410 473 L 414 475 L 410 482 L 409 487 L 417 486 L 417 489 L 420 495 L 417 498 L 417 507 L 423 510 L 427 524 L 435 523 L 435 530 L 416 549 L 412 547 L 387 546 L 383 544 L 376 537`,\n      textLocation: {\n        x: 408,\n        y: 505,\n      },\n    },\n    {\n      title: 'Baltic_Sea',\n      name: 'Baltic Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 266 255 L 271 260 L 278 254 L 277 250 L 280 248 L 279 243 L 282 253 L 289 254 L 294 245 L 305 244 L 312 229 L 311 220 L 359 220 L 349 229 L 347 243 L 347 248 L 348 254 L 344 262 L 337 264 L 334 273 L 328 274 L 326 265 L 314 266 L 307 273 L 294 275 L 286 274 L 287 267 L 280 266 L 266 275 L 261 274 L 260 269 L 256 266 L 256 263 L 254 255 L 266 255`,\n      textLocation: {\n        x: 320,\n        y: 247,\n      },\n    },\n    {\n      title: 'Barents_Sea',\n      name: 'Barents Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 540 0 L 535 9 L 530 6 L 517 19 L 516 33 L 513 38 L 513 23 L 507 20 L 505 26 L 499 33 L 492 48 L 495 58 L 488 60 L 479 57 L 477 55 L 481 50 L 473 43 L 466 45 L 472 62 L 478 66 L 478 74 L 472 72 L 468 74 L 457 91 L 469 100 L 467 106 L 462 109 L 444 101 L 442 110 L 447 115 L 454 119 L 452 122 L 434 118 L 426 103 L 426 94 L 414 88 L 412 83 L 445 84 L 457 79 L 459 66 L 453 61 L 417 47 L 405 49 L 401 45 L 397 48 L 391 47 L 395 41 L 394 38 L 384 33 L 382 40 L 380 33 L 377 31 L 374 38 L 371 33 L 366 42 L 366 33 L 362 33 L 362 0 L 540 0`,\n      textLocation: {\n        x: 440,\n        y: 15,\n      },\n    },\n    {\n      title: 'Black_Sea',\n      name: 'Black Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 440 458 L 430 455 L 426 450 L 422 441 L 425 427 L 429 426 L 430 423 L 432 409 L 439 404 L 438 397 L 446 378 L 459 375 L 461 377 L 459 379 L 465 383 L 476 381 L 478 383 L 472 385 L 468 392 L 477 396 L 477 401 L 486 404 L 488 397 L 494 396 L 497 392 L 507 389 L 506 384 L 494 387 L 485 378 L 503 364 L 526 351 L 527 354 L 514 365 L 517 371 L 520 371 L 515 384 L 511 383 L 510 386 L 517 393 L 528 394 L 554 406 L 567 408 L 573 417 L 570 427 L 555 438 L 551 437 L 520 441 L 514 438 L 511 440 L 502 433 L 481 438 L 470 447 L 464 457 L 442 460 L 440 458`,\n      textLocation: {\n        x: 495,\n        y: 410,\n      },\n    },\n    {\n      title: 'Eastern_Mediterranean',\n      name: 'Eastern Mediterranean',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 435 530 L 441 526 L 447 528 L 453 534 L 464 531 L 466 521 L 475 520 L 485 528 L 491 530 L 505 526 L 511 514 L 520 517 L 527 508 L 530 509 L 525 518 L 526 530 L 532 535 L 528 559 L 400 559 L 400 554 L 414 552 L 416 549 L 435 530`,\n      textLocation: {\n        x: 478,\n        y: 538,\n      },\n    },\n    {\n      title: 'English_Channel',\n      name: 'English Channel',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 173 301 L 169 311 L 153 315 L 155 320 L 150 319 L 144 318 L 142 312 L 136 310 L 136 326 L 124 323 L 122 318 L 102 317 L 88 303 L 100 291 L 110 292 L 120 295 L 124 291 L 134 294 L 147 295 L 160 298 L 168 296 L 173 301`,\n      textLocation: {\n        x: 135,\n        y: 298,\n      },\n    },\n    {\n      title: 'Gulf_of_Lyon',\n      name: 'Gulf of Lyon',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 115 469 L 110 461 L 124 444 L 131 439 L 146 438 L 157 432 L 158 425 L 158 418 L 169 412 L 176 417 L 188 422 L 198 421 L 211 416 L 222 410 L 233 415 L 238 431 L 224 431 L 221 434 L 211 436 L 213 451 L 218 454 L 218 458 L 214 461 L 206 462 L 205 466 L 154 466 L 148 463 L 142 469 L 115 469`,\n      textLocation: {\n        x: 180,\n        y: 440,\n      },\n    },\n    {\n      title: 'Gulf_of_Bothnia',\n      name: 'Gulf\\nof\\nBothnia',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 311 220 L 314 209 L 322 206 L 328 203 L 331 193 L 326 183 L 320 182 L 321 161 L 330 146 L 343 138 L 351 128 L 347 121 L 349 112 L 355 104 L 362 107 L 368 108 L 372 120 L 366 121 L 359 136 L 345 151 L 347 160 L 350 165 L 348 178 L 349 184 L 357 186 L 365 191 L 384 185 L 402 177 L 403 183 L 411 184 L 414 187 L 408 187 L 400 192 L 399 197 L 387 196 L 371 198 L 369 202 L 365 204 L 368 210 L 372 213 L 373 221 L 377 227 L 373 229 L 366 228 L 359 220 L 311 220`,\n      textLocation: {\n        x: 344,\n        y: 183,\n      },\n    },\n    {\n      title: 'Helgoland_Bight',\n      name: 'Hel.',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 245 237 L 243 247 L 244 254 L 243 257 L 245 263 L 244 270 L 244 273 L 235 277 L 234 274 L 230 273 L 226 275 L 211 274 L 211 237 L 245 237`,\n      textLocation: {\n        x: 235,\n        y: 248,\n      },\n    },\n    {\n      title: 'Ionian_Sea',\n      name: 'Ionian Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 289 511 L 290 514 L 295 515 L 308 500 L 311 491 L 304 484 L 310 480 L 318 485 L 322 485 L 322 480 L 335 480 L 339 487 L 346 498 L 350 498 L 347 500 L 352 508 L 367 507 L 371 511 L 355 510 L 350 514 L 357 521 L 359 533 L 360 528 L 367 536 L 368 531 L 376 537 L 383 544 L 380 547 L 383 550 L 400 554 L 400 559 L 232 559 L 234 551 L 232 544 L 225 535 L 231 531 L 236 524 L 247 513 L 258 519 L 273 531 L 281 532 L 282 521 L 285 513 L 285 511 L 289 511`,\n      textLocation: {\n        x: 320,\n        y: 525,\n      },\n    },\n    {\n      title: 'Irish_Sea',\n      name: 'Irish Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 100 291 L 112 287 L 122 281 L 130 282 L 127 276 L 119 272 L 116 272 L 115 265 L 128 262 L 126 256 L 121 257 L 132 250 L 135 250 L 139 240 L 136 229 L 130 227 L 120 227 L 110 232 L 109 246 L 98 259 L 87 257 L 70 261 L 58 273 L 88 303 L 100 291`,\n      textLocation: {\n        x: 95,\n        y: 265,\n      },\n    },\n    {\n      title: 'Mid_Atlantic_Ocean',\n      name: 'Mid\\nAtlantic\\nOcean',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 102 317 L 100 322 L 103 328 L 109 329 L 123 344 L 122 350 L 123 357 L 128 363 L 121 382 L 122 384 L 112 399 L 101 396 L 96 397 L 72 384 L 59 381 L 54 375 L 48 374 L 46 378 L 39 375 L 33 381 L 35 384 L 32 396 L 30 406 L 17 427 L 14 427 L 10 433 L 13 440 L 15 441 L 12 450 L 13 454 L 8 462 L 19 469 L 27 468 L 33 475 L 34 484 L 37 490 L 37 495 L 33 496 L 17 518 L 0 520 L 0 273 L 58 273 L 102 317`,\n      textLocation: {\n        x: 60,\n        y: 315,\n      },\n    },\n    {\n      title: 'North_Atlantic_Ocean',\n      name: 'North Atlantic Ocean',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 70 261 L 64 250 L 67 242 L 71 245 L 81 234 L 74 228 L 80 225 L 78 218 L 82 217 L 89 220 L 94 220 L 95 218 L 94 216 L 97 216 L 101 212 L 110 212 L 119 217 L 120 227 L 130 227 L 130 223 L 138 217 L 138 214 L 130 208 L 129 197 L 139 189 L 140 182 L 148 177 L 148 0 L 0 0 L 0 273 L 58 273 L 70 261`,\n      textLocation: {\n        x: 75,\n        y: 120,\n      },\n    },\n    {\n      title: 'North_Sea',\n      name: 'North Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 168 296 L 172 294 L 165 293 L 176 283 L 178 274 L 177 270 L 171 268 L 168 270 L 166 269 L 169 265 L 170 252 L 168 246 L 163 239 L 163 226 L 161 218 L 157 216 L 151 215 L 158 214 L 165 210 L 170 202 L 171 197 L 171 181 L 198 154 L 236 154 L 237 160 L 233 167 L 231 180 L 233 186 L 229 192 L 231 201 L 241 209 L 241 224 L 248 224 L 245 237 L 211 237 L 211 274 L 207 279 L 205 279 L 205 276 L 198 289 L 191 299 L 173 301 L 168 296`,\n      textLocation: {\n        x: 210,\n        y: 210,\n      },\n    },\n    {\n      title: 'Norwegian_Sea',\n      name: 'Norwegian Sea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 362 33 L 357 39 L 343 44 L 324 54 L 320 64 L 310 75 L 309 84 L 303 86 L 292 111 L 277 132 L 269 134 L 264 142 L 258 141 L 236 154 L 198 154 L 171 181 L 171 197 L 158 193 L 152 194 L 154 188 L 161 185 L 162 181 L 148 177 L 148 0 L 362 0 L 362 33`,\n      textLocation: {\n        x: 220,\n        y: 70,\n      },\n    },\n    {\n      title: 'Skagerrak',\n      name: 'Ska.',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 241 209 L 246 210 L 266 201 L 270 193 L 275 203 L 277 218 L 276 224 L 282 236 L 279 240 L 279 243 L 275 242 L 269 243 L 266 240 L 267 234 L 266 221 L 263 223 L 248 224 L 241 224 L 241 209`,\n      textLocation: {\n        x: 267,\n        y: 207,\n      },\n    },\n    {\n      title: 'Tyrrhenian_Sea',\n      name: 'Tyrrhenian\\nSea',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 238 431 L 247 442 L 248 447 L 256 458 L 271 464 L 276 474 L 290 487 L 294 502 L 289 511 L 285 511 L 285 508 L 276 510 L 263 510 L 257 507 L 252 508 L 247 513 L 236 524 L 233 523 L 224 527 L 223 518 L 218 516 L 218 490 L 220 490 L 224 468 L 222 458 L 218 458 L 218 454 L 223 450 L 225 444 L 225 436 L 224 431 L 238 431`,\n      textLocation: {\n        x: 255,\n        y: 475,\n      },\n    },\n    {\n      title: 'Western_Mediterranean',\n      name: 'Western Mediterranean',\n      tileType: 'seaTile',\n      id: 'w',\n      tags: ['sea'],\n      path: `M 37 490 L 47 488 L 52 489 L 60 486 L 78 491 L 83 494 L 86 485 L 90 483 L 98 484 L 107 474 L 113 473 L 115 469 L 142 469 L 150 471 L 154 466 L 205 466 L 206 476 L 204 485 L 208 492 L 212 492 L 217 489 L 218 490 L 218 516 L 212 517 L 208 521 L 203 520 L 179 515 L 169 518 L 150 511 L 117 509 L 106 511 L 99 515 L 89 512 L 84 518 L 79 520 L 68 516 L 68 511 L 64 514 L 46 509 L 42 502 L 41 494 L 37 495 L 37 490`,\n      textLocation: {\n        x: 150,\n        y: 485,\n      },\n    },\n    //  Neutral Territories\n    {\n      title: 'Switzerland',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: `M 209 363 L 208 367 L 194 382 L 197 385 L 203 379 L 207 386 L 213 387 L 221 385 L 227 390 L 229 385 L 243 388 L 245 384 L 241 378 L 234 374 L 234 366 L 232 363 L 225 362 L 222 365 L 209 363`,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    {\n      title: 'Ireland',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: `M 70 261 L 64 250 L 67 242 L 71 245 L 81 234 L 74 228 L 80 225 L 78 218 L 82 217 L 89 220 L 94 220 L 95 218 L 94 216 L 97 216 L 101 212 L 110 212 L 119 217 L 120 227 L 120 227 L 110 232 L 109 246 L 98 259 L 87 257 L 70 261`,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    {\n      title: 'Corsica',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: ``,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    {\n      title: 'Sardinia',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: ``,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    {\n      title: 'Mallorca',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: `M 154 466 L 148 463 L 142 469 L 150 471 L 154 466`,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    {\n      title: 'Sicily',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: ``,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    {\n      title: 'Crete',\n      name: '',\n      tileType: 'landTile',\n      id: 's',\n      tags: ['neutral'],\n      path: ``,\n      textLocation: {\n        x: 215,\n        y: 378,\n      },\n    },\n    //  Land Territories\n    {\n      title: 'Albania',\n      name: 'Alb.',\n      tileType: 'landTile',\n      id: 'l Albania',\n      tags: ['coastal'],\n      path: `M 331 454 L 331 477 L 335 480 L 339 487 L 350 477 L 350 471 L 346 466 L 346 452 L 337 446 L 330 445 L 331 454`,\n      textLocation: {\n        x: 345,\n        y: 461,\n      },\n    },\n    {\n      title: 'Ankara',\n      name: 'Ankara',\n      tileType: 'landTile',\n      id: 'l Ankara',\n      tags: ['coastal', 'supply'],\n      path: `M 555 438 L 551 437 L 520 441 L 514 438 L 511 440 L 502 433 L 481 438 L 470 447 L 464 457 L 468 461 L 468 479 L 466 491 L 473 491 L 490 480 L 501 482 L 508 480 L 531 460 L 546 462 L 555 460 L 557 449 L 555 438`,\n      textLocation: {\n        x: 505,\n        y: 450,\n      },\n    },\n    {\n      title: 'Apulia',\n      name: 'Apulia',\n      tileType: 'landTile',\n      id: 'l Apulia',\n      tags: ['coastal'],\n      path: `M 304 484 L 310 480 L 318 485 L 322 485 L 322 480 L 297 456 L 300 453 L 290 453 L 278 443 L 274 447 L 279 451 L 280 455 L 279 458 L 293 481 L 304 484`,\n      textLocation: {\n        x: 305,\n        y: 465,\n        rotate: 48,\n      },\n    },\n    {\n      title: 'Armenia',\n      name: 'Armenia',\n      tileType: 'landTile',\n      id: 'l Armenia',\n      tags: ['coastal'],\n      path: `M 609 493 L 584 478 L 563 479 L 562 471 L 556 467 L 555 460 L 557 449 L 555 438 L 570 427 L 589 442 L 594 439 L 603 441 L 609 440 L 609 493`,\n      textLocation: {\n        x: 587,\n        y: 453,\n      },\n    },\n    {\n      title: 'Belgium',\n      name: 'Bel.',\n      tileType: 'landTile',\n      id: 'l Belgium',\n      tags: ['coastal', 'supply'],\n      path: `M 191 299 L 194 303 L 206 306 L 205 311 L 208 315 L 210 326 L 205 331 L 192 323 L 184 315 L 169 311 L 173 301 L 191 299`,\n      textLocation: {\n        x: 197,\n        y: 303,\n      },\n    },\n    {\n      title: 'Berlin',\n      name: 'Berlin',\n      tileType: 'landTile',\n      id: 'l Berlin',\n      tags: ['coastal', 'supply'],\n      path: `M 294 275 L 286 274 L 287 267 L 280 266 L 266 275 L 266 283 L 262 287 L 264 293 L 261 296 L 263 310 L 288 305 L 296 300 L 297 296 L 292 290 L 294 275`,\n      textLocation: {\n        x: 279,\n        y: 284,\n      },\n    },\n    {\n      title: 'Bohemia',\n      name: 'Bohemia',\n      tileType: 'landTile',\n      id: 'l Bohemia',\n      tags: ['landlocked'],\n      path: `M 281 356 L 276 346 L 268 343 L 264 329 L 266 325 L 278 326 L 288 321 L 297 322 L 311 334 L 314 332 L 321 339 L 322 347 L 316 348 L 303 346 L 295 349 L 292 357 L 281 356`,\n      textLocation: {\n        x: 298,\n        y: 331,\n      },\n    },\n    {\n      title: 'Brest',\n      name: 'Brest',\n      tileType: 'landTile',\n      id: 'l Brest',\n      tags: ['coastal', 'supply'],\n      path: `M 150 319 L 144 318 L 142 312 L 136 310 L 136 326 L 124 323 L 122 318 L 102 317 L 100 322 L 103 328 L 109 329 L 123 344 L 122 350 L 123 357 L 128 363 L 146 365 L 146 337 L 148 329 L 150 319`,\n      textLocation: {\n        x: 135,\n        y: 330,\n      },\n    },\n    {\n      title: 'Budapest',\n      name: 'Budapest',\n      tileType: 'landTile',\n      id: 'l Budapest',\n      tags: ['landlocked', 'supply'],\n      path: `M 394 376 L 395 382 L 401 385 L 406 396 L 401 402 L 387 402 L 367 406 L 365 412 L 360 413 L 342 410 L 338 412 L 335 410 L 332 410 L 323 408 L 321 398 L 311 394 L 308 383 L 311 375 L 322 370 L 335 354 L 337 350 L 350 347 L 360 351 L 368 353 L 377 360 L 378 363 L 384 365 L 394 376`,\n      textLocation: {\n        x: 360,\n        y: 375,\n      },\n    },\n    // ! NEEDS IMPLEMENTED PROPERLY\n    {\n      title: 'Bulgaria',\n      name: 'Bulgaria',\n      tileType: 'landTile',\n      tags: ['coastal', 'supply', 'dual'],\n      id: 'l',\n      // ? Have this territory have the full path?\n      path: ``,\n      textLocation: {\n        x: 400,\n        y: 438,\n      },\n    },\n    {\n      title: 'Bulgaria__ec',\n      name: 'Bulgaria',\n      tileType: 'landTile',\n      tags: ['coast'],\n      id: 'l',\n      path: `M 413 464 L 412 454 L 420 451 L 426 450 L 422 441 L 425 427 L 429 426 L 430 423 L 422 420 L 410 420 L 404 422 L 398 427 L 390 425 L 382 427 L 375 423 L 370 425 L 367 421 L 365 425 L 368 433 L 371 438 `,\n      textLocation: {\n        x: 400,\n        y: 438,\n      },\n    },\n    {\n      title: 'Bulgaria__sc',\n      name: '',\n      tileType: 'landTile',\n      tags: ['coast'],\n      id: 'l',\n      path: `M 371 438 L 366 439 L 371 456 L 365 461 L 369 464 L 376 464 L 388 460 L 392 472 L 400 468 L 408 470 L 413 464`,\n    },\n    {\n      title: 'Burgundy',\n      name: 'Burgundy',\n      tileType: 'landTile',\n      id: 'l Burgundy',\n      tags: ['landlocked'],\n      path: `M 192 323 L 205 331 L 204 338 L 211 346 L 213 352 L 209 363 L 208 367 L 194 382 L 178 381 L 178 390 L 173 396 L 168 395 L 163 387 L 165 383 L 158 380 L 156 374 L 165 365 L 185 344 L 188 332 L 192 323`,\n      textLocation: {\n        x: 186,\n        y: 352,\n        rotate: -50\n      },\n    },\n    {\n      title: 'Clyde',\n      name: 'Clyde',\n      tileType: 'landTile',\n      id: 'l Clyde',\n      tags: ['coastal'],\n      path: `M 138 214 L 130 208 L 129 197 L 139 189 L 140 182 L 148 177 L 162 181 L 161 185 L 154 188 L 152 194 L 146 200 L 144 213 L 138 214`,\n      textLocation: {\n        x: 137,\n        y: 194,\n      },\n    },\n    {\n      title: 'Constantinople',\n      name: 'Constantinople',\n      tileType: 'landTile',\n      id: 'l Constantinople',\n      tags: ['coastal', 'passage', 'supply'],\n      path: `M 408 470 L 410 473 L 414 475 L 410 482 L 409 487 L 417 486 L 417 489 L 423 487 L 432 493 L 452 495 L 466 491 L 468 479 L 468 461 L 464 457 L 442 460 L 440 458 L 430 455 L 426 450 L 420 451 L 412 454 L 413 464 L 408 470`,\n      // <polygon class=\"w\" points=\"L 414 475 L 421 467 L 435 463 L 440 458 L 442 460 L 439 463 L 448 464 L 425 475\"/>\n      textLocation: {\n        x: 444,\n        y: 468,\n        rotate: -28,\n      },\n    },\n    {\n      title: 'Denmark',\n      name: 'Den.',\n      tileType: 'landTile',\n      id: 'l Denmark',\n      tags: ['coastal', 'passage', 'supply'],\n      path: `M 279 243 L 275 242 L 269 243 L 266 240 L 267 234 L 266 221 L 263 223 L 248 224 L 245 237 L 243 247 L 244 254 L 254 255 L 266 255 L 271 260 L 278 254 L 277 250 L 280 248  L 279 243`,\n      // <polygon class=\"w\" points=\"L 269 243 L 268 246 L 263 247 L 266 255 L 254 255 L 257 247 L 266 240\"/>\n      textLocation: {\n        x: 259,\n        y: 235,\n      },\n    },\n    // {\n    //   title: 'Denmark__w',\n    //   name: '',\n    //   tileType: 'waterTile',\n    //   id: 'w Denmark',\n    //   path: `M 269 243 L 268 246 L 263 247 L 266 255 L 254 255 L 257 247 L 266 240 L 269 243`,\n    //   textLocation: {\n    //     x: 252,\n    //     y: 235,\n    //   },\n    // },\n    {\n      title: 'Edinburgh',\n      name: 'Edb.',\n      tileType: 'landTile',\n      id: 'l Edinburgh',\n      tags: ['coastal', 'supply'],\n      path: `M 152 194 L 158 193 L 171 197  170 202 L 165 210 L 158 214 L 151 215 L 157 216 L 161 218 L 163 226 L 155 228 L 145 217 L 144 213 L 146 200 L 152 194`,\n      textLocation: {\n        x: 163,\n        y: 198,\n      },\n    },\n    {\n      title: 'Finland',\n      name: 'Finland',\n      tileType: 'landTile',\n      id: 'l Finland',\n      tags: ['coastal'],\n      path: `M 362 107 L 368 108 L 372 120 L 366 121 L 359 136 L 345 151 L 347 160 L 350 165 L 348 178 L 349 184 L 357 186 L 365 191 L 384 185 L 402 177 L 412 161 L 410 152 L 414 147 L 410 130 L 402 118 L 401 110 L 392 92 L 393 73 L 387 68 L 388 61 L 386 58 L 388 54 L 379 48 L 370 49 L 369 61 L 355 62 L 346 54 L 342 61 L 356 71 L 362 107`,\n      textLocation: {\n        x: 385,\n        y: 135,\n      },\n    },\n    {\n      title: 'Galicia',\n      name: 'Galicia',\n      tileType: 'landTile',\n      id: 'l Galicia',\n      tags: ['landlocked'],\n      path: `M 333 330 L 341 330 L 344 332 L 353 327 L 356 323 L 361 324 L 367 329 L 374 327 L 379 324 L 383 327 L 385 332 L 399 338 L 404 354 L 403 360 L 404 371 L 394 376 L 384 365 L 378 363 L 377 360 L 368 353 L 360 351 L 350 347 L 337 350 L 329 346 L 322 347 L 321 339 L 322 347 L 321 339 L 325 340 L 329 338 L 333 330`,\n      textLocation: {\n        x: 375,\n        y: 338,\n        rotate: 20,\n      },\n    },\n    {\n      title: 'Gascony',\n      name: 'Gascony',\n      tileType: 'landTile',\n      id: 'l Gascony',\n      tags: ['coastal'],\n      path: `M 128 363 L 121 382 L 122 384 L 112 399 L 113 407 L 123 412 L 134 417 L 135 414 L 142 417 L 149 403 L 157 397 L 168 395 L 163 387 L 165 383 L 158 380 L 156 374 L 149 372 L 146 365 L 128 363`,\n      textLocation: {\n        x: 144,\n        y: 383,\n      },\n    },\n    {\n      title: 'Greece',\n      name: 'Greece',\n      tileType: 'landTile',\n      id: 'l Greece',\n      tags: ['coastal', 'supply'],\n      path: `M 339 487 L 346 498 L 350 498 L 347 500 L 352 508 L 367 507 L 371 511 L 355 510 L 350 514 L 357 521 L 359 533 L 360 528 L 367 536 L 368 531 L 376 537 L 371 520 L 378 521 L 377 513 L 386 516 L 385 509 L 370 494 L 371 491 L 378 494 L 368 483 L 371 477 L 379 484 L 382 483 L 381 477 L 386 478 L 380 472 L 392 472 L 388 460 L 376 464 L 369 464 L 361 467 L 356 471 L 350 471 L 350 477 L 339 487`,\n      textLocation: {\n        x: 361,\n        y: 481,\n      },\n    },\n    {\n      title: 'Holland',\n      name: 'Hol.',\n      tileType: 'landTile',\n      id: 'l Holland',\n      tags: ['coastal', 'supply'],\n      path: `M 226 275 L 227 280 L 225 292 L 220 298 L 215 297 L 213 302 L 210 313 L 208 315 L 205 311 L 206 306 L 194 303 L 191 299 L 198 289 L 205 276 L 205 279 L 207 279 L 211 274 L 226 275`,\n      textLocation: {\n        x: 215,\n        y: 285,\n      },\n    },\n    {\n      title: 'Kiel',\n      name: 'Kiel',\n      tileType: 'landTile',\n      id: 'l Kiel',\n      tags: ['coastal', 'passage', 'supply'],\n      path: `M 244 254 L 243 257 L 245 263 L 244 270 L 244 273 L 235 277 L 234 274 L 230 273 L 226 275 L 227 280 L 225 292 L 220 298 L 215 297 L 213 302 L 232 308 L 241 316 L 243 322 L 263 310 L 261 296 L 264 293 L 262 287 L 266 283 L 266 275 L 261 274 L 260 269 L 256 266 L 256 263 L 254 255 L 244 254`,\n      // <polygon class=\"w\" points=\"L 244 270 L 244 273 L 256 266 L 256 263 \"/>\n      textLocation: {\n        x: 247,\n        y: 283,\n      },\n    },\n    {\n      title: 'Liverpool',\n      name: 'Lvp.',\n      tileType: 'landTile',\n      id: 'l Liverpool',\n      tags: ['coastal', 'supply'],\n      path: `M 128 262 L 126 256 L 121 257 L 132 250 L 135 250 L 139 240 L 136 229 L 130 227 L 130 223 L 138 217 L 138 214 L 144 213 L 145 217 L 155 228 L 155 239 L 151 248 L 150 264 L 143 262 L 128 262`,\n      textLocation: {\n        x: 143,\n        y: 230,\n      },\n    },\n    {\n      title: 'Livonia',\n      name: 'Livonia',\n      tileType: 'landTile',\n      id: 'l Livonia',\n      tags: ['coastal'],\n      path: `M 369 202 L 365 204 L 368 210 L 372 213 L 373 221 L 377 227 L 373 229 L 366 228 L 359 220 L 349 229 L 347 243 L 354 251 L 356 261 L 362 260 L 367 265 L 365 281 L 372 283 L 379 290 L 389 285 L 392 278 L 404 275 L 405 239 L 409 228 L 405 217 L 394 205 L 382 206 L 372 205 L 369 202`,\n      textLocation: {\n        x: 385,\n        y: 240,\n      },\n    },\n    {\n      title: 'London',\n      name: 'London',\n      tileType: 'landTile',\n      id: 'l London',\n      tags: ['coastal', 'supply'],\n      path: `M 166 269 L 168 270 L 171 268 L 177 270 L 178 274 L 176 283 L 165 293 L 172 294 L 168 296 L 160 298 L 147 295 L 145 281 L 150 277 L 153 271 L 166 269`,\n      textLocation: {\n        x: 170,\n        y: 275,\n      },\n    },\n    {\n      title: 'Marseilles',\n      name: 'Marseilles',\n      tileType: 'landTile',\n      id: 'l Marseilles',\n      tags: ['coastal', 'supply'],\n      path: `M 142 417 L 149 403 L 157 397 L 168 395 L 173 396 L 178 390 L 178 381 L 194 382 L 197 385 L 203 379 L 207 386 L 204 390 L 207 396 L 201 399 L 204 402 L 203 410 L 211 416 L 198 421 L 188 422 L 176 417 L 169 412 L 158 418 L 158 425 L 154 427 L 142 417`,\n      textLocation: {\n        x: 181,\n        y: 397,\n      },\n    },\n    {\n      title: 'Moscow',\n      name: 'Moscow',\n      tileType: 'landTile',\n      id: 'l Moscow',\n      tags: ['landlocked', 'supply'],\n      path: `M 609 117 L 598 132 L 573 143 L 564 159 L 534 164 L 515 169 L 489 184 L 476 183 L 458 194 L 456 207 L 457 210 L 451 213 L 447 209 L 439 211 L 428 225 L 421 229 L 409 228 L 405 239 L 404 275 L 392 278 L 389 285 L 379 290 L 386 309 L 390 306 L 456 292 L 468 295 L 477 289 L 494 295 L 505 280 L 516 286 L 526 287 L 533 283 L 549 284 L 554 304 L 564 305 L 569 321 L 597 330 L 609 330 L 609 117`,\n      textLocation: {\n        x: 460,\n        y: 245,\n      },\n    },\n    {\n      title: 'Munich',\n      name: 'Munich',\n      tileType: 'landTile',\n      id: 'l Munich',\n      tags: ['landlocked', 'supply'],\n      path: `M 234 366 L 243 370 L 246 369 L 250 371 L 267 368 L 271 370 L 269 362 L 275 362 L 281 356 L 276 346 L 268 343 L 264 329 L 266 325 L 278 326 L 288 321 L 284 314 L 288 305 L 263 310 L 243 322 L 237 322 L 219 344 L 211 346 L 213 352 L 209 363 L 222 365 L 225 362 L 232 363 L 234 366`,\n      textLocation: {\n        x: 250,\n        y: 337,\n      },\n    },\n    {\n      title: 'Naples',\n      name: 'Naples',\n      tileType: 'landTile',\n      id: 'l Naples',\n      tags: ['coastal', 'supply'],\n      path: `M 271 464 L 276 474 L 290 487 L 294 502 L 289 511 L 290 514 L 295 515 L 308 500 L 311 491 L 304 484 L 293 481 L 279 458 L 271 464`,\n      textLocation: {\n        x: 296,\n        y: 496,\n      },\n    },\n    {\n      title: 'North_Africa',\n      name: 'North Africa',\n      tileType: 'landTile',\n      id: 'l North_Africa',\n      tags: ['coastal'],\n      path: `M 203 520 L 179 515 L 169 518 L 150 511 L 117 509 L 106 511 L 99 515 L 89 512 L 84 518 L 79 520 L 68 516 L 68 511 L 64 514 L 46 509 L 42 502 L 41 494 L 37 495 L 33 496 L 17 518 L 0 520 L 0 559 L 195 559 L 197 527 L 203 520`,\n      textLocation: {\n        x: 105,\n        y: 530,\n      },\n    },\n    {\n      title: 'Norway',\n      name: 'Norway',\n      tileType: 'landTile',\n      id: 'l Norway',\n      tags: ['coastal', 'supply'],\n      path: `M 397 48 L 391 47 L 395 41 L 394 38 L 384 33 L 382 40 L 380 33 L 377 31 L 374 38 L 371 33 L 366 42 L 366 33 L 362 33 L 357 39 L 343 44 L 324 54 L 320 64 L 310 75 L 309 84 L 303 86 L 292 111 L 277 132 L 269 134 L 264 142 L 258 141 L 236 154 L 237 160 L 233 167 L 231 180 L 233 186 L 229 192 L 231 201 L 241 209 L 246 210 L 266 201 L 270 193 L 275 203 L 279 204 L 287 177 L 285 170 L 290 164 L 292 133 L 301 132 L 300 126 L 309 115 L 308 104 L 311 101 L 324 71 L 332 74 L 330 64 L 341 65 L 342 61 L 346 54 L 355 62 L 369 61 L 370 49 L 379 48 L 388 54 L 386 58 L 388 61 L 397 48`,\n      textLocation: {\n        x: 265,\n        y: 163,\n      },\n    },\n    {\n      title: 'Paris',\n      name: 'Paris',\n      tileType: 'landTile',\n      id: 'l Paris',\n      tags: ['landlocked', 'supply'],\n      path: `M 146 365 L 149 372 L 156 374 L 165 365 L 185 344 L 188 332 L 172 328 L 165 331 L 159 331 L 148 329 L 146 337 L 146 365`,\n      textLocation: {\n        x: 165,\n        y: 341,\n      },\n    },\n    {\n      title: 'Picardy',\n      name: 'Pic.',\n      tileType: 'landTile',\n      id: 'l Picardy',\n      tags: ['coastal'],\n      path: `M 169 311 L 153 315 L 155 320 L 150 319 L 148 329 L 159 331 L 165 331 L 172 328 L 188 332 L 192 323 L 184 315 L 169 311`,\n      textLocation: {\n        x: 177,\n        y: 314,\n      },\n    },\n    {\n      title: 'Piedmont',\n      name: 'Pied.',\n      tileType: 'landTile',\n      id: 'l Piedmont',\n      tags: ['coastal'],\n      path: `M 207 386 L 204 390 L 207 396 L 201 399 L 204 402 L 203 410 L 211 416 L 222 410 L 233 415 L 236 411 L 233 404 L 246 392 L 243 388 L 229 385 L 227 390 L 221 385 L 213 387 L 207 386`,\n      textLocation: {\n        x: 224,\n        y: 393,\n      },\n    },\n    {\n      title: 'Portugal',\n      name: 'Portugal',\n      tileType: 'landTile',\n      id: 'l Portugal',\n      tags: ['coastal', 'supply'],\n      path: `M 32 396 L 30 406 L 17 427 L 14 427 L 10 433 L 13 440 L 15 441 L 12 450 L 13 454 L 8 462 L 19 469 L 27 468 L 36 457 L 34 447 L 40 441 L 37 431 L 42 432 L 52 412 L 61 411 L 62 407 L 55 400 L 42 399 L 43 395 L 32 396`,\n      textLocation: {\n        x: 25,\n        y: 420,\n        rotate: -63,\n      },\n    },\n    {\n      title: 'Prussia',\n      name: 'Prussia',\n      tileType: 'landTile',\n      id: 'l Prussia',\n      tags: ['coastal'],\n      path: `M 347 243 L 347 248 L 348 254 L 344 262 L 337 264 L 334 273 L 328 274 L 326 265 L 314 266 L 307 273 L 294 275 L 292 290 L 297 296 L 296 300 L 320 303 L 324 299 L 326 292 L 341 287 L 345 289 L 359 286 L 365 281 L 367 265 L 362 260 L 356 261 L 354 251 L 347 243`,\n      textLocation: {\n        x: 330,\n        y: 275,\n      },\n    },\n    {\n      title: 'Rome',\n      name: 'Rome',\n      tileType: 'landTile',\n      id: 'l Rome',\n      tags: ['coastal', 'supply'],\n      path: `M 247 442 L 248 447 L 256 458 L 271 464 L 279 458 L 280 455 L 279 451 L 274 447 L 263 434 L 250 438 L 247 442`,\n      textLocation: {\n        x: 257,\n        y: 444,\n      },\n    },\n    {\n      title: 'Ruhr',\n      name: 'Ruhr',\n      tileType: 'landTile',\n      id: 'l Ruhr',\n      tags: ['landlocked'],\n      path: `M 213 302 L 210 313 L 208 315 L 210 326 L 205 331 L 204 338 L 211 346 L 219 344 L 237 322 L 243 322 L 241 316 L 232 308 L 213 302`,\n      textLocation: {\n        x: 221,\n        y: 319,\n      },\n    },\n    {\n      title: 'Rumania',\n      name: 'Rumania',\n      tileType: 'landTile',\n      id: 'l Rumania',\n      tags: ['coastal', 'supply'],\n      path: `M 403 360 L 404 371 L 394 376 L 395 382 L 401 385 L 406 396 L 401 402 L 387 402 L 367 406 L 365 412 L 367 421 L 370 425 L 375 423 L 382 427 L 390 425 L 398 427 L 404 422 L 410 420 L 422 420 L 430 423 L 432 409 L 439 404 L 438 397 L 427 399 L 422 382 L 423 376 L 414 372 L 411 361 L 403 360`,\n      textLocation: {\n        x: 390,\n        y: 410,\n      },\n    },\n    {\n      title: 'Serbia',\n      name: 'Serbia',\n      tileType: 'landTile',\n      id: 'l Serbia',\n      tags: ['landlocked', 'supply'],\n      path: `M 365 412 L 360 413 L 342 410 L 338 412 L 335 410 L 332 410 L 330 416 L 331 424 L 327 429 L 330 437 L 337 446 L 346 452 L 346 466 L 350 471 L 356 471 L 361 467 L 369 464 L 365 461 L 371 456 L 366 439 L 371 438 L 368 433 L 365 425 L 367 421 L 365 412`,\n      textLocation: {\n        x: 349,\n        y: 428,\n      },\n    },\n    {\n      title: 'Sevastopol',\n      name: 'Sevastopol',\n      tileType: 'landTile',\n      id: 'l Sevastopol',\n      tags: ['coastal', 'supply'],\n      path: `M 438 397 L 446 378 L 459 375 L 461 377 L 459 379 L 465 383 L 476 381 L 478 383 L 472 385 L 468 392 L 477 396 L 477 401 L 486 404 L 488 397 L 494 396 L 497 392 L 507 389 L 506 384 L 494 387 L 485 378 L 503 364 L 526 351 L 527 354 L 514 365 L 517 371 L 520 371 L 515 384 L 511 383 L 510 386 L 517 393 L 528 394 L 554 406 L 567 408 L 573 417 L 570 427 L 589 442 L 594 439 L 603 441 L 609 440 L 609 330 L 597 330 L 569 321 L 564 305 L 554 304 L 549 284 L 533 283 L 526 287 L 516 286 L 505 280 L 494 295 L 477 289 L 468 295 L 470 303 L 466 307 L 460 345 L 445 350 L 434 360 L 432 372 L 423 376 L 422 382 L 427 399 L 438 397`,\n      textLocation: {\n        x: 524,\n        y: 338,\n      },\n    },\n    {\n      title: 'Silesia',\n      name: 'Silesia',\n      tileType: 'landTile',\n      id: 'l Silesia',\n      tags: ['landlocked'],\n      path: `M 288 321 L 297 322 L 311 334 L 314 332 L 321 339 L 325 340 L 329 338 L 333 330 L 326 327 L 323 322 L 320 303 L 296 300 L 288 305 L 284 314 L 288 321`,\n      textLocation: {\n        x: 307,\n        y: 310,\n      },\n    },\n    {\n      title: 'Smyrna',\n      name: 'Smyrna',\n      tileType: 'landTile',\n      id: 'l Smyrna',\n      tags: ['coastal', 'supply'],\n      path: `M 417 489 L 420 495 L 417 498 L 417 507 L 423 510 L 427 524 L 435 523 L 435 530 L 441 526 L 447 528 L 453 534 L 464 531 L 466 521 L 475 520 L 485 528 L 491 530 L 505 526 L 511 514 L 520 517 L 527 508 L 530 509 L 536 494 L 545 486 L 555 484 L 563 479 L 562 471 L 556 467 L 555 460 L 546 462 L 531 460 L 508 480 L 501 482 L 490 480 L 473 491 L 466 491 L 452 495 L 432 493 L 423 487 L 417 489`,\n      textLocation: {\n        x: 460,\n        y: 510,\n      },\n    },\n    // ! SORT THIS OUT AS WELL\n    {\n      title: 'Spain',\n      name: 'Spain',\n      tileType: 'landTile',\n      tags: ['coastal', 'supply', 'dual'],\n      id: 'l',\n      path: ``,\n    },\n    {\n      title: 'Spain__nc',\n      name: 'Spain',\n      tileType: 'landTile',\n      tags: ['coast'],\n      id: 'l',\n      path: `M 134 417 L 123 412 L 113 407 L 112 399 L 101 396 L 96 397 L 72 384 L 59 381 L 54 375 L 48 374 L 46 378 L 39 375 L 33 381 L 35 384 L 32 396 L 43 395 L 42 399 L 55 400 L 62 407 L 61 411 L 52 412 L 42 432 L 37 431 L 40 441 L 134 417`,\n    },\n    {\n      title: 'Spain__sc',\n      name: 'Spain',\n      tileType: 'landTile',\n      tags: ['coast'],\n      id: 'l',\n      path: `M 40 441 L 34 447 L 36 457 L 27 468 L 33 475 L 34 484 L 37 490 L 47 488 L 52 489 L 60 486 L 78 491 L 83 494 L 86 485 L 90 483 L 98 484 L 107 474 L 113 473 L 115 469 L 110 461 L 124 444 L 131 439 L 146 438 L 157 432 L 158 425 L 154 427 L 142 417 L 135 414 L 134 417 L 40 441`,\n      textLocation: {\n        x: 85,\n        y: 450,\n      },\n    },\n    // Maybe combine nc & sc into one svg?\n    {\n      title: 'St_Petersburg',\n      name: 'St Petersburg',\n      tileType: 'landTile',\n      id: 'l St_Petersburg',\n      tags: ['coast', 'supply', 'dual'],\n      path: ``,\n      textLocation: {\n        x: 460,\n        y: 149,\n      },\n      // <text x=\"475\" y=\"90\">(nc)</text>\n    },\n    {\n      title: 'St_Petersburg__nc',\n      name: '(nc)',\n      tileType: 'landTile',\n      id: 'l St_Petersburg',\n      tags: ['coast'],\n      path: `M 534 164 L 564 159 L 573 143 L 598 132 L 609 117 L 609 0 540 0 L 535 9 L 530 6 L 517 19 L 516 33 L 513 38 L 513 23 L 507 20 L 505 26 L 499 33 L 492 48 L 495 58 L 488 60 L 479 57 L 477 55 L 481 50 L 473 43 L 466 45 L 472 62 L 478 66 L 478 74 L 472 72 L 468 74 L 457 91 L 469 100 L 467 106 L 462 109 L 444 101 L 442 110 L 447 115 L 454 119 L 452 122 L 434 118 L 426 103 L 426 94 L 414 88 L 412 83 L 445 84 L 457 79 L 459 66 L 453 61 L 417 47 L 405 49 L 401 45 L 397 48 L 388 61 L 387 68 L 393 73 L 392 92 L 401 110 L 402 118 L 410 130 L 414 147 L 534 164`,\n      textLocation: {\n        x: 475,\n        y: 90,\n      },\n    },\n    {\n      title: 'St_Petersburg__sc',\n      name: '(sc)',\n      tileType: 'landTile',\n      id: 'l St_Petersburg',\n      tags: ['coast'],\n      path: `M 414 147 L 410 152 L 412 161 L 402 177 L 403 183 L 411 184 L 414 187 L 408 187 L 400 192 L 399 197 L 387 196 L 371 198 L 369 202 L 372 205 L 382 206 L 394 205 L 405 217 L 409 228 L 421 229 L 428 225 L 439 211 L 447 209 L 451 213 L 457 210 L 456 207 L 458 194 L 476 183 L 489 184 L 515 169 L 534 164 L 414 147`,\n      textLocation: {\n        x: 408,\n        y: 200,\n      },\n    },\n    {\n      title: 'Sweden',\n      name: 'Sweden',\n      tileType: 'landTile',\n      id: 'l Sweden',\n      tags: ['coastal', 'supply'],\n      path: `M 275 203 L 277 218 L 276 224 L 282 236 L 279 240 L 279 243 L 282 253 L 289 254 L 294 245 L 305 244 L 312 229 L 311 220 L 314 209 L 322 206 L 328 203 L 331 193 L 326 183 L 320 182 L 321 161 L 330 146 L 343 138 L 351 128 L 347 121 L 349 112 L 355 104 L 362 107 L 356 71 L 342 61 L 341 65 L 330 64 L 332 74 L 324 71 L 311 101 L 308 104 L 309 115 L 300 126 L 301 132 L 292 133 L 290 164 L 285 170 L 287 177 L 279 204 L 275 203`,\n      textLocation: {\n        x: 305,\n        y: 187,\n      },\n    },\n    {\n      title: 'Syria',\n      name: 'Syria',\n      tileType: 'landTile',\n      id: 'l Syria',\n      tags: ['coastal'],\n      path: `M 530 509 L 536 494 L 545 486 L 555 484 L 563 479 L 584 478 L 609 493 L 609 559 L 528 559 L 532 535 L 526 530 L 525 518 L 530 509`,\n      textLocation: {\n        x: 570,\n        y: 535,\n      },\n    },\n    {\n      title: 'Trieste',\n      name: 'Trieste',\n      tileType: 'landTile',\n      id: 'l Trieste',\n      tags: ['coastal', 'supply'],\n      path: `M 276 399 L 275 403 L 278 410 L 282 401 L 286 402 L 289 418 L 306 436 L 331 454 L 330 445 L 337 446 L 330 437 L 327 429 L 331 424 L 330 416 L 332 410 L 323 408 L 321 398 L 311 394 L 308 383 L 299 385 L 294 380 L 289 385 L 276 386 L 279 389 L 276 399`,\n      textLocation: {\n        x: 307,\n        y: 411,\n      },\n    },\n    {\n      title: 'Tunis',\n      name: 'Tunis',\n      tileType: 'landTile',\n      id: 'l Tunis',\n      tags: ['coastal', 'supply'],\n      path: `M 232 559 L 234 551 L 232 544 L 225 535 L 231 531 L 236 524 L 233 523 L 224 527 L 223 518 L 218 516 L 212 517 L 208 521 L 203 520 L 197 527 L 195 559 L 232 559`,\n      textLocation: {\n        x: 213,\n        y: 534,\n      },\n    },\n    {\n      title: 'Tuscany',\n      name: 'Tuscany',\n      tileType: 'landTile',\n      id: 'l Tuscany',\n      tags: ['coastal'],\n      path: `M 233 415 L 238 431 L 247 442 L 250 438 L 263 434 L 253 418 L 246 416 L 240 415 L 236 411 L 233 415`,\n      textLocation: {\n        x: 240,\n        y: 425,\n      },\n    },\n    {\n      title: 'Tyrolia',\n      name: 'Tyrolia',\n      tileType: 'landTile',\n      id: 'l Tyrolia',\n      tags: ['landlocked'],\n      path: `M 234 366 L 243 370 L 246 369 L 250 371 L 267 368 L 271 370 L 269 362 L 275 362 L 281 356 L 292 357 L 295 362 L 294 380 L 289 385 L 276 386 L 268 385 L 259 388 L 255 394 L 250 397 L 246 392 L 243 388 L 245 384 L 241 378 L 234 374 L 234 366`,\n      textLocation: {\n        x: 268,\n        y: 373,\n      },\n    },\n    {\n      title: 'Ukraine',\n      name: 'Ukraine',\n      tileType: 'landTile',\n      id: 'l Ukraine',\n      tags: ['landlocked'],\n      path: `M 383 327 L 385 332 L 399 338 L 404 354 L 403 360 L 411 361 L 414 372 L 423 376 L 432 372 L 434 360 L 445 350 L 460 345 L 466 307 L 470 303 L 468 295 L 456 292 L 390 306 L 386 309 L 383 327`,\n      textLocation: {\n        x: 425,\n        y: 327,\n      },\n    },\n    {\n      title: 'Venice',\n      name: 'Venice',\n      tileType: 'landTile',\n      id: 'l Venice',\n      tags: ['coastal', 'supply'],\n      path: `M 278 443 L 272 424 L 260 417 L 261 401 L 270 398 L 276 399 L 279 389 L 276 386 L 268 385 L 259 388 L 255 394 L 250 397 L 246 392 L 233 404 L 236 411 L 240 415 L 246 416 L 253 418 L 263 434 L 274 447 L 278 443`,\n      textLocation: {\n        x: 250,\n        y: 404,\n      },\n    },\n    {\n      title: 'Vienna',\n      name: 'Vienna',\n      tileType: 'landTile',\n      id: 'l Vienna',\n      tags: ['landlocked', 'supply'],\n      path: `M 292 357 L 295 349 L 303 346 L 316 348 L 322 347 L 329 346 L 337 350 L 335 354 L 322 370 L 311 375 L 308 383 L 299 385 L 294 380 L 295 362 L 292 357`,\n      textLocation: {\n        x: 311,\n        y: 356,\n      },\n    },\n    {\n      title: 'Wales',\n      name: 'Wales',\n      tileType: 'landTile',\n      id: 'l Wales',\n      tags: ['coastal'],\n      path: `M 100 291 L 112 287 L 122 281 L 130 282 L 127 276 L 119 272 L 116 272 L 115 265 L 128 262 L 143 262 L 150 264 L 153 271 L 150 277 L 145 281 L 147 295 L 134 294 L 124 291 L 120 295 L 110 292 L 100 291`,\n      textLocation: {\n        x: 130,\n        y: 275,\n      },\n    },\n    {\n      title: 'Warsaw',\n      name: 'Warsaw',\n      tileType: 'landTile',\n      id: 'l Warsaw',\n      tags: ['landlocked', 'supply'],\n      path: `M 333 330 L 326 327 L 323 322 L 320 303 L 324 299 L 326 292 L 341 287 L 345 289 L 359 286 L 365 281 L 372 283 L 379 290 L 386 309 L 383 327 L 379 324 L 374 327 L 367 329 L 361 324 L 356 323 L 353 327 L 344 332 L 341 330 L 333 330`,\n      textLocation: {\n        x: 354,\n        y: 305,\n      },\n    },\n    {\n      title: 'Yorkshire',\n      name: 'Yorkshire',\n      tileType: 'landTile',\n      id: 'l Yorkshire',\n      tags: ['coastal'],\n      path: `M 163 226 L 163 239 L 168 246 L 170 252 L 169 265 L 166 269 L 153 271 L 150 264 L 151 248 L 155 239 L 155 228 L 163 226`,\n      textLocation: {\n        x: 160,\n        y: 248,\n      },\n    },\n  ],\n}\nexport const provinces = countryData.territories\n  .filter(t => !t.tags.includes('neutral'))\n  .map(t => t.title)\nexport default countryData\n","const UnitType = {\n  FLEET : 'Fleet',\n  ARMY : 'Army',\n} as const\ntype UnitType = (typeof UnitType)[keyof typeof UnitType]\n\nexport default UnitType\n"],"sourceRoot":""}